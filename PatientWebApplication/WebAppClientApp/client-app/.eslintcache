[{"C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\index.js":"1","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\reportWebVitals.js":"2","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\App.js":"3","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\store\\configureStore.js":"4","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\reducers\\reducer.js":"5","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\CreateForm.jsx":"6","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\types\\types.js":"7","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\utilities\\Utilities.js":"8","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\actions\\actions.js":"9","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\registerServiceWorker.ts":"10","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\store\\index.ts":"11","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\Home.tsx":"12","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\Layout.tsx":"13","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\Counter.tsx":"14","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PrescriptionsSimple.js":"15","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PrescriptionsAdvanced.js":"16","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PatientRegister.js":"17","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AppointmentReportSimpleSearch.js":"18","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AppointmentsAdvanced.js":"19","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\MyInformation.js":"20","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\DoctorRates.js":"21","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\CreateSurvey.js":"22","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AllRates.js":"23","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AllPatientsAppointments.js":"24","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\ScheduleAppointment.js":"25","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\ChooseAppointmentType.js":"26","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\MaliciousPatient.js":"27","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\store\\Counter.ts":"28","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PatientFeedback.tsx":"29","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\NavMenu.tsx":"30","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\CreateFeedback.tsx":"31","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AdminFeedback.tsx":"32","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PublishedFeedbackTable.jsx":"33","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AllFeedbackTable.jsx":"34","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AppointmentReportSimpleSearchTable.jsx":"35","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\RegisterPatient.jsx":"36","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PrescriptionsSearchSimpleTable.jsx":"37","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\Header.jsx":"38","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PrescriptionsSearchAdvancedTable.jsx":"39","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\CreateSurveyForm.jsx":"40","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\CheckPersonalInformationTable.jsx":"41","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\DoctorsRatingTable.jsx":"42","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AppointmentMenu.jsx":"43","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\ScheduleAppointmentBody.jsx":"44","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AllPatientsAppointmentsTable.jsx":"45","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AppointmentsSearchAdvancedTable.jsx":"46","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AllRatingTable.jsx":"47","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\MaliciousPatientTable.jsx":"48","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PublishButton.jsx":"49","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\ReferralModal.jsx":"50","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\CancelAppointmentButton.jsx":"51","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\ScheduleRegularAppointmentModal.jsx":"52","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\BlockPatientButton.jsx":"53","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\RecommendedAppointmentScheduling.jsx":"54","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AppointmentConfirmationModal.jsx":"55","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\SelectAppointmentForm.jsx":"56","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\SelectDoctorForm.jsx":"57","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\SelectSpecialtyForm.jsx":"58","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\SelectDateForm.jsx":"59","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\RecommendationModal.jsx":"60"},{"size":1161,"mtime":1609106504323,"results":"61","hashOfConfig":"62"},{"size":362,"mtime":499162500000,"results":"63","hashOfConfig":"64"},{"size":636,"mtime":1609106498390,"results":"65","hashOfConfig":"62"},{"size":1881,"mtime":1606926710320,"results":"66","hashOfConfig":"62"},{"size":9510,"mtime":1608401406443,"results":"67","hashOfConfig":"62"},{"size":3073,"mtime":1608408726562,"results":"68","hashOfConfig":"62"},{"size":3826,"mtime":1607830819737,"results":"69","hashOfConfig":"62"},{"size":2095,"mtime":1608845104758,"results":"70","hashOfConfig":"62"},{"size":18712,"mtime":1609094507100,"results":"71","hashOfConfig":"62"},{"size":4725,"mtime":1606926710319,"results":"72","hashOfConfig":"62"},{"size":773,"mtime":1609105934093,"results":"73","hashOfConfig":"62"},{"size":1712,"mtime":1607042261174,"results":"74","hashOfConfig":"62"},{"size":2540,"mtime":1609107784267,"results":"75","hashOfConfig":"62"},{"size":1408,"mtime":1607855903647,"results":"76","hashOfConfig":"62"},{"size":2621,"mtime":1608564956333,"results":"77","hashOfConfig":"62"},{"size":1759,"mtime":1606926710287,"results":"78","hashOfConfig":"62"},{"size":1672,"mtime":1606926710282,"results":"79","hashOfConfig":"62"},{"size":2718,"mtime":1608564956299,"results":"80","hashOfConfig":"62"},{"size":1747,"mtime":1606926710265,"results":"81","hashOfConfig":"62"},{"size":1677,"mtime":1607041908735,"results":"82","hashOfConfig":"62"},{"size":1656,"mtime":1606926710275,"results":"83","hashOfConfig":"62"},{"size":1624,"mtime":1606926710268,"results":"84","hashOfConfig":"62"},{"size":1625,"mtime":1606926710239,"results":"85","hashOfConfig":"62"},{"size":1963,"mtime":1608397857678,"results":"86","hashOfConfig":"62"},{"size":1812,"mtime":1607637460672,"results":"87","hashOfConfig":"62"},{"size":1703,"mtime":1607720738945,"results":"88","hashOfConfig":"62"},{"size":1683,"mtime":1607830819730,"results":"89","hashOfConfig":"62"},{"size":1981,"mtime":1606926710320,"results":"90","hashOfConfig":"62"},{"size":960,"mtime":1606926710281,"results":"91","hashOfConfig":"62"},{"size":4843,"mtime":1608977064528,"results":"92","hashOfConfig":"62"},{"size":1002,"mtime":1608408492527,"results":"93","hashOfConfig":"62"},{"size":886,"mtime":1606926710238,"results":"94","hashOfConfig":"62"},{"size":1651,"mtime":1606926710306,"results":"95","hashOfConfig":"62"},{"size":2158,"mtime":1608977064519,"results":"96","hashOfConfig":"62"},{"size":6666,"mtime":1606926710264,"results":"97","hashOfConfig":"62"},{"size":15710,"mtime":1606926710311,"results":"98","hashOfConfig":"62"},{"size":5550,"mtime":1606926710303,"results":"99","hashOfConfig":"62"},{"size":660,"mtime":1606926710278,"results":"100","hashOfConfig":"62"},{"size":10789,"mtime":1606926710298,"results":"101","hashOfConfig":"62"},{"size":53185,"mtime":1607721449007,"results":"102","hashOfConfig":"62"},{"size":5213,"mtime":1606926710266,"results":"103","hashOfConfig":"62"},{"size":1927,"mtime":1606926710276,"results":"104","hashOfConfig":"62"},{"size":2022,"mtime":1607723815667,"results":"105","hashOfConfig":"62"},{"size":1529,"mtime":1607637259552,"results":"106","hashOfConfig":"62"},{"size":9331,"mtime":1608838934996,"results":"107","hashOfConfig":"62"},{"size":9804,"mtime":1606926710266,"results":"108","hashOfConfig":"62"},{"size":4002,"mtime":1606926710240,"results":"109","hashOfConfig":"62"},{"size":2566,"mtime":1607830819732,"results":"110","hashOfConfig":"62"},{"size":986,"mtime":1606926710305,"results":"111","hashOfConfig":"62"},{"size":2090,"mtime":1606926710310,"results":"112","hashOfConfig":"62"},{"size":1060,"mtime":1607637469175,"results":"113","hashOfConfig":"62"},{"size":5640,"mtime":1607637460675,"results":"114","hashOfConfig":"62"},{"size":1008,"mtime":1607830819728,"results":"115","hashOfConfig":"62"},{"size":7326,"mtime":1608843286775,"results":"116","hashOfConfig":"62"},{"size":1618,"mtime":1607637460671,"results":"117","hashOfConfig":"62"},{"size":3056,"mtime":1607637460676,"results":"118","hashOfConfig":"62"},{"size":2565,"mtime":1607637460678,"results":"119","hashOfConfig":"62"},{"size":1794,"mtime":1607831484251,"results":"120","hashOfConfig":"62"},{"size":1515,"mtime":1607637460677,"results":"121","hashOfConfig":"62"},{"size":4794,"mtime":1608401816591,"results":"122","hashOfConfig":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},"svyk4g",{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2s9777",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"132","usedDeprecatedRules":"125"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"135","usedDeprecatedRules":"125"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"138","usedDeprecatedRules":"125"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"141","usedDeprecatedRules":"125"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"144","usedDeprecatedRules":"125"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"147","usedDeprecatedRules":"125"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"150"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"150"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"163","usedDeprecatedRules":"125"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"166","usedDeprecatedRules":"125"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"169","usedDeprecatedRules":"125"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"172","usedDeprecatedRules":"125"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"175","usedDeprecatedRules":"125"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"178","usedDeprecatedRules":"125"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"181","usedDeprecatedRules":"125"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"184","usedDeprecatedRules":"125"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"187","usedDeprecatedRules":"125"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"190","usedDeprecatedRules":"125"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"193","usedDeprecatedRules":"125"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"196","usedDeprecatedRules":"125"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"199","usedDeprecatedRules":"125"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"150"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"150"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"214","usedDeprecatedRules":"125"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"217","usedDeprecatedRules":"125"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"220","usedDeprecatedRules":"125"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"223","usedDeprecatedRules":"125"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"226","usedDeprecatedRules":"125"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"229","usedDeprecatedRules":"125"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":"232","usedDeprecatedRules":"125"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":97,"fixableErrorCount":0,"fixableWarningCount":1,"source":"235","usedDeprecatedRules":"125"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"238","usedDeprecatedRules":"125"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"241","usedDeprecatedRules":"125"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"244","usedDeprecatedRules":"125"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"247","usedDeprecatedRules":"125"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"250","usedDeprecatedRules":"125"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":"253","usedDeprecatedRules":"125"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"256","usedDeprecatedRules":"125"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"259","usedDeprecatedRules":"125"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"262","usedDeprecatedRules":"125"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"265","usedDeprecatedRules":"125"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"268","usedDeprecatedRules":"125"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"271","usedDeprecatedRules":"125"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"274","usedDeprecatedRules":"125"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"277","usedDeprecatedRules":"125"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"280","usedDeprecatedRules":"125"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"283","usedDeprecatedRules":"125"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"286","usedDeprecatedRules":"125"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"289","usedDeprecatedRules":"125"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"292","usedDeprecatedRules":"293"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"296","usedDeprecatedRules":"125"},"C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\index.js",[],["297","298"],"C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\reportWebVitals.js",[],"C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\App.js",[],"C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\store\\configureStore.js",["299","300"],"\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar redux_1 = require(\"redux\");\r\nvar redux_thunk_1 = require(\"redux-thunk\");\r\nvar connected_react_router_1 = require(\"connected-react-router\");\r\nvar _1 = require(\"./\");\r\nvar reducer_1 = require(\"../reducers/reducer\");\r\nfunction configureStore(history, initialState) {\r\n    var middleware = [\r\n        redux_thunk_1.default,\r\n        connected_react_router_1.routerMiddleware(history)\r\n    ];\r\n    var rootReducer = redux_1.combineReducers(__assign(__assign({}, _1.reducers), { reducer: reducer_1.default, router: connected_react_router_1.connectRouter(history) }));\r\n    var enhancers = [];\r\n    var windowIfDefined = typeof window === 'undefined' ? null : window;\r\n    if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\r\n        enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\r\n    }\r\n    return redux_1.createStore(rootReducer, initialState, redux_1.compose.apply(void 0, __spreadArrays([redux_1.applyMiddleware.apply(void 0, middleware)], enhancers)));\r\n}\r\nexports.default = configureStore;\r\n//# sourceMappingURL=configureStore.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\reducers\\reducer.js",["301","302","303","304","305","306","307","308"],"﻿import {\r\n    FEEDBACK_CREATED,\r\n    FEEDBACK_PUBLISHED,\r\n    LOADED_PUBLISHED_FEEDBACK,\r\n    LOADED_ALL_FEEDBACK,\r\n    LOADED_ALL_PRESCRIPTIONS,\r\n    LOADED_ALL_PATIENT_PRESCRIPTIONS,\r\n    PATIENT_REGISTERED,\r\n    SIMPLE_SEARCH_PATIENT_PRESCRIPTIONS,\r\n    ADVANCED_SEARCH_PATIENT_PRESCRIPTIONS,\r\n    FIND_ONE_PATIENT,\r\n    LOADED_ALL_PATIENT_REPORTS,\r\n    ADVANCED_SEARCH_PATIENT_APPOINTMENTS,\r\n    LOADED_ALL_PATIENT_APPOINTMENTS,\r\n    SURVEY_CREATED,\r\n    LOADED_ALL_RATES,\r\n    LOADED_ALL_DOCTOR_RATES,\r\n    LOADED_APPOINTMENTSURVEY,\r\n    LOADED_ALL_PATIENTS,\r\n    LOADED_ALL_DOCTORS,\r\n    RECOMMEND_APPOINTMENT,\r\n    CREATE_RECOMMEND_APPOINTMENT,\r\n    LOADED_ALL_AVAILABLE_DOCTORS,\r\n    LOADED_ALL_AVAILABLE_DOCTORS_ERROR,\r\n    LOADED_ALL_AVAILABLE_APPOINTMENTS,\r\n    LOADED_ALL_AVAILABLE_APPOINTMENTS_ERROR,\r\n    LOADED_ALL_PATIENT_APPOINTMENTS_INTWODAYS,\r\n    LOADED_ALL_PATIENT_APPOINTMENTS_INFUTURE,\r\n    CANCEL_APPOINTMENT,\r\n    BLOCK_PATIENT,\r\n    LOADED_ALL_PATIENT_APPOINTMENTS_WITH_SURVEYS,\r\n    LOADED_ALL_PATIENT_APPOINTMENTS_WITHOUT_SURVEYS,\r\n    LOADED_MALICIOUS_PATIENTS,\r\n    APPOINTMENT_SCHEDULED,\r\n} from \"../types/types\";\r\nimport { parseStringToDate } from '../utilities/Utilities';\r\n\r\nfunction addFeedback(state=initialState, action) {\r\n    return {\r\n        ...state,\r\n        feedbackList: state.feedbackList.concat(action.payload),\r\n    };\r\n}\r\n\r\nfunction updateObjectInArray(array, action) {\r\n    return array.map((item) => {\r\n        if (item.id !== action.payload.id) {\r\n            // This isn't the item we care about - keep it as-is\r\n            return item\r\n        }\r\n\r\n        // Otherwise, this is the one we want - return an updated value\r\n        return {\r\n            ...item,\r\n            ...action.payload\r\n        }\r\n    })\r\n}\r\n\r\nfunction loadPublishedFeedback(state = initialState, action) {\r\n    return {\r\n        ...state,\r\n        publishedFeedbackList: action.payload,\r\n    };\r\n}\r\n\r\nconst initialState = {\r\n    feedbackList: [],\r\n    publishedFeedbackList: [],\r\n    prescriptionsList: [],\r\n    patientPrescriptionsList: [],\r\n    patientList: [],\r\n    patientInformationList: [],\r\n    patientAppointments: [],\r\n    patientAppointmentsList: [],\r\n    appointmentSurveyList: [],\r\n    surveyList: [], \r\n    patientAppointments: [],\r\n    doctorRatesList: [],\r\n    allRates: {},\r\n    allPatientsList: [],\r\n    doctorList: [],\r\n    recommendedAppointments: [],\r\n    createdRecommendedAppointment: {},\r\n    patientAppointmentsInTwoDaysList: [],\r\n    patientAppointmentsInFutureList: [],\r\n    patientAppointmentsWithSurveys: [],\r\n    patientAppointmentsWithoutSurveys: [],\r\n    canceledAppointment: {},\r\n    allPatientsBlockList: [],\r\n    maliciousPatientsList: [],\r\n    availableDoctors: [],\r\n    availableAppointments: []\r\n};\r\n\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FEEDBACK_CREATED:\r\n            return {\r\n                ...state,\r\n                feedbackList: state.feedbackList.concat(action.payload)\r\n            };\r\n        case FEEDBACK_PUBLISHED:\r\n            return {\r\n                ...state,\r\n                publishedFeedbackList: state.publishedFeedbackList.concat(action.payload),\r\n                feedbackList: updateObjectInArray(state.feedbackList, action)\r\n            };\r\n        case LOADED_PUBLISHED_FEEDBACK:                      \r\n            return {\r\n                ...state,\r\n                publishedFeedbackList: action.payload,\r\n            };\r\n        case LOADED_ALL_FEEDBACK:\r\n            return {\r\n                ...state,\r\n                feedbackList: action.payload\r\n\r\n            };\r\n        case LOADED_ALL_PRESCRIPTIONS:\r\n            return {\r\n                ...state,\r\n                prescriptionsList: action.payload\r\n\r\n            };\r\n        case LOADED_ALL_PATIENT_PRESCRIPTIONS:\r\n            return {\r\n                ...state,\r\n                patientPrescriptionsList: action.payload\r\n\r\n            };\r\n\r\n        case PATIENT_REGISTERED:\r\n            return {\r\n                ...state,\r\n                feedbackList: state.patientList.concat(action.payload)\r\n            }\r\n\r\n        case SIMPLE_SEARCH_PATIENT_PRESCRIPTIONS:\r\n            return {\r\n                ...state,\r\n                patientPrescriptionsList: action.payload\r\n\r\n            };\r\n        case ADVANCED_SEARCH_PATIENT_PRESCRIPTIONS:\r\n            return {\r\n                ...state,\r\n                patientPrescriptionsList: action.payload\r\n\r\n            };\r\n        case FIND_ONE_PATIENT:\r\n            return {\r\n                ...state,\r\n                patientInformationList: action.payload\r\n\r\n            };\r\n        case SURVEY_CREATED:\r\n            return {\r\n                ...state,\r\n                feedbackList: state.surveyList.concat(action.payload)\r\n            };\r\n        case LOADED_APPOINTMENTSURVEY:\r\n            return {\r\n                ...state,\r\n                appointmentSurveyList : action.payload\r\n            }; \r\n        case LOADED_ALL_PATIENT_REPORTS:\r\n            return {\r\n                ...state,\r\n                patientAppointments: action.payload\r\n            };\r\n        case LOADED_ALL_PATIENT_APPOINTMENTS:\r\n            return {\r\n                ...state,\r\n                patientAppointmentsList: action.payload\r\n            };\r\n        case ADVANCED_SEARCH_PATIENT_APPOINTMENTS:\r\n            return {\r\n                ...state,\r\n                patientAppointmentsList: action.payload\r\n\r\n            };\r\n        case LOADED_ALL_RATES:\r\n            debugger;\r\n            return {\r\n                ...state,\r\n                allRates: action.payload\r\n            };\r\n        case LOADED_ALL_DOCTOR_RATES:\r\n            return {\r\n                ...state,\r\n                doctorRatesList: action.payload\r\n            };\r\n        case LOADED_ALL_AVAILABLE_DOCTORS:\r\n            return {\r\n                ...state,\r\n                availableDoctors: action.payload\r\n            };\r\n        case LOADED_ALL_AVAILABLE_APPOINTMENTS:\r\n            return {\r\n                ...state,\r\n                availableAppointments: action.payload\r\n            };   \r\n        case LOADED_ALL_PATIENTS:\r\n            return {\r\n                ...state,\r\n                allPatientsList: action.payload\r\n            };   \r\n        case LOADED_ALL_PATIENT_APPOINTMENTS_INTWODAYS:\r\n            return {\r\n                ...state,\r\n                patientAppointmentsInTwoDaysList: action.payload\r\n            };\r\n        case LOADED_ALL_PATIENT_APPOINTMENTS_INFUTURE:\r\n            return {\r\n                ...state,\r\n                patientAppointmentsInFutureList: action.payload\r\n            };\r\n        case CANCEL_APPOINTMENT:\r\n            return {\r\n                ...state,\r\n                patientAppointmentsList: updateObjectInArray(state.patientAppointmentsList, action)\r\n            };     \r\n        case LOADED_ALL_PATIENT_APPOINTMENTS_WITH_SURVEYS:\r\n            return {\r\n                ...state,\r\n                patientAppointmentsWithSurveys: action.payload\r\n            };     \r\n        case LOADED_ALL_PATIENT_APPOINTMENTS_WITHOUT_SURVEYS:\r\n            return {\r\n                ...state,\r\n                patientAppointmentsWithoutSurveys: action.payload\r\n            };   \r\n        case BLOCK_PATIENT:\r\n            return {\r\n                ...state,\r\n                allPatientsBlockList: updateObjectInArray(state.allPatientsBlockList, action)\r\n            }; \r\n        case LOADED_MALICIOUS_PATIENTS:\r\n            return {\r\n                ...state,\r\n                maliciousPatientsList: action.payload\r\n            }; \r\n        case LOADED_ALL_DOCTORS:\r\n            return {\r\n                ...state,\r\n                doctorList: action.payload\r\n            };\r\n        case RECOMMEND_APPOINTMENT:\r\n            return {\r\n                ...state,\r\n                recommendedAppointments: action.payload\r\n            };\r\n        case CREATE_RECOMMEND_APPOINTMENT:\r\n            debugger;\r\n            var date = new Date();\r\n            date.setDate(date.getDate() + 2);\r\n            var appointmentDate = parseStringToDate(action.payload.date);\r\n            if (appointmentDate <= date) {\r\n                return {\r\n                    ...state,\r\n                    patientAppointmentsInTwoDaysList: state.patientAppointmentsInTwoDaysList.concat(action.payload),\r\n                    createdRecommendedAppointment: action.payload\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    patientAppointmentsInFutureList: state.patientAppointmentsInFutureList.concat(action.payload),\r\n                    createdRecommendedAppointment: action.payload\r\n                };\r\n            }\r\n        case APPOINTMENT_SCHEDULED:\r\n            debugger;\r\n            var date = new Date();\r\n            date.setDate(date.getDate() + 2);\r\n            var appointmentDate = parseStringToDate(action.payload.date);\r\n            if (appointmentDate <= date) {\r\n                return {\r\n                    ...state,\r\n                    patientAppointmentsInTwoDaysList: state.patientAppointmentsInTwoDaysList.concat(action.payload)\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    patientAppointmentsInFutureList: state.patientAppointmentsInFutureList.concat(action.payload)\r\n                };\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\CreateForm.jsx",["309","310"],"﻿import React, { Component } from \"react\"\r\nimport { feedbackCreated } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'; \r\nimport \"../css/app.css\"\r\n\r\nclass CreateForm extends Component {\r\n    state = {\r\n        message: \"\",\r\n        isAnonymous: false,\r\n        isPublic: false\r\n    };\r\n\r\n    handleChange=(event) => {\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ? this.setState({\r\n            [name]: checked\r\n        }) : this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                    \r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Title:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.message}\r\n                            name=\"message\"\r\n                            placeholder=\"Message\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"isAnonymous\"\r\n                                checked={this.state.isAnonymous}\r\n                                onChange={this.handleChange}\r\n                            /> Anonymous\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"isPublic\"\r\n                                checked={this.state.isPublic}\r\n                                onChange={this.handleChange}\r\n                            /> Public\r\n                        </label>\r\n                     </div>\r\n\r\n                    <div className=\"btn-wrap align-right\">\r\n                        <button disabled={!this.state.message || this.state.message.length > 140} className=\"btn btn-block btn-lg btn-primary\" onClick={this.createFeedback.bind(this)}>Create</button>\r\n                    </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    createFeedback() {\r\n        toast.configure();\r\n\r\n        toast.success(\"Feedback successfully created!\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n        this.props.feedbackCreated(this.state);\r\n        this.setState({\r\n            message: '',\r\n            isAnonymous: false,\r\n            isPublic: false\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { feedbackCreated })(CreateForm);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\types\\types.js",["311"],"﻿export const FEEDBACK_CREATED = \"feedbackCreated\";\r\nexport const CREATE_ERROR = \"feedbackCreatedError\"\r\nexport const FEEDBACK_PUBLISHED = \"feedbackPublished\";\r\nexport const LOADED_PUBLISHED_FEEDBACK = \"loadedPublishedFeedback\";\r\nexport const PUBLISH_ERROR = \"feedbackPublishedError\"\r\nexport const LOADED_ALL_FEEDBACK = \"loadedAllFeedback\";\r\nexport const OBSERVE_ERROR = \"feedbackOservedError\";\r\nexport const LOADED_ALL_PRESCRIPTIONS = \"loadedAllPrescriptions\";\r\nexport const OBSERVE_PRESCRIPTIONS_ERROR = \"prescriptionsOservedError\";\r\nexport const LOADED_ALL_PATIENT_PRESCRIPTIONS = \"loadedAllPatientPrescriptions\";\r\nexport const OBSERVE_PATIENT_PRESCRIPTIONS_ERROR = \"patientPrescriptionsOservedError\";\r\nexport const PATIENT_REGISTERED = \"patientRegistered\";\r\nexport const SIMPLE_SEARCH_PATIENT_PRESCRIPTIONS = \"simpleSearchPatientPrescriptions\";\r\nexport const SIMPLE_SEARCH_PRESCRIPTIONS_ERROR = \"simpleSearchPrescriptionsError\";\r\nexport const ADVANCED_SEARCH_PATIENT_PRESCRIPTIONS = \"advancedSearchPatientPrescriptions\";\r\nexport const ADVANCED_SEARCH_PRESCRIPTIONS_ERROR = \"advancedSearchPrescriptionsError\";\r\nexport const FIND_ONE_PATIENT = \"findOnePatient\";\r\nexport const FIND_ONE_PATIENT_ERROR = \"findOnePatientError\";\r\nexport const SURVEY_CREATED = \"surveyCreated\";\r\nexport const LOADED_APPOINTMENTSURVEY = \"loadedAppointmentSurvey\";\r\nexport const LOADED_ALL_PATIENT_REPORTS = \"loadedAllReports\";\r\nexport const OBSERVE_PATIENT_REPORTS_ERROR = \"patientReportsObservedError\";\r\nexport const SIMPLE_SEARCH_APPOINTMENTS_DONE = \"simpleSearchAppointmentsDone\";\r\nexport const SIMPLE_SEARCH_APPOINTMENTS_ERROR = \"simpleSearchAppointmentssError\";\r\nexport const LOADED_ALL_RATES = \"loadedAllRates\";\r\nexport const LOADED_ALL_DOCTOR_RATES = \"loadedAllDoctorRates\";\r\nexport const ADVANCED_SEARCH_PATIENT_APPOINTMENTS = \"advancedSearchPatientAppointments\";\r\nexport const ADVANCED_SEARCH_APPOINTMENTS_ERROR = \"advancedSearchAppointmentsError\";\r\nexport const LOADED_ALL_PATIENT_APPOINTMENTS = \"loadedAllPatientAppointments\";\r\nexport const OBSERVE_PATIENT_APPOINTMENTS_ERROR = \"observePatientAppointmentsError\";\r\nexport const LOADED_ALL_PATIENTS = \"loadedAllPatients\";\r\nexport const OBSERVE_PATIENTS_ERROR = \"observePatientsError\";\r\nexport const LOADED_ALL_DOCTORS = \"loadedAllDoctors\";\r\nexport const OBSERVE_DOCTORS_ERROR = \"observeDoctorsError\";\r\nexport const RECOMMEND_APPOINTMENT = \"recommendAppointment\";\r\nexport const RECOMMEND_APPOINTMENT_ERROR = \"recommendAppointmentError\";\r\nexport const CREATE_RECOMMEND_APPOINTMENT = \"createRecommendAppointment\";\r\nexport const CREATE_RECOMMEND_APPOINTMENT_ERROR = \"createRecommendAppointmentError\";\r\nexport const LOADED_ALL_AVAILABLE_DOCTORS = \"loadedAllAvailableDoctors\";\r\nexport const LOADED_ALL_AVAILABLE_DOCTORS_ERROR = \"loadedAllAvailableDoctorsError\";\r\nexport const LOADED_ALL_AVAILABLE_APPOINTMENTS = \"loadedAllAvailableAppointments\";\r\nexport const LOADED_ALL_AVAILABLE_APPOINTMENTS_ERROR = \"loadedAllAvailableAppointmentsError\";\r\nexport const APPOINTMENT_SCHEDULED = \"appointmentScheduled\";\r\nexport const APPOINTMENT_SCHEDULED_ERROR = \"appointmentScheduledError\";\r\nexport const LOADED_ALL_PATIENT_APPOINTMENTS_INTWODAYS = \"loadedAllPatientAppointmentsInTwoDays\";\r\nexport const LOADED_ALL_PATIENT_APPOINTMENTS_INFUTURE = \"loadedAllPatientAppointmentsInFuture\";\r\nexport const CANCEL_APPOINTMENT = \"cancelAppointment\";\r\nexport const BLOCK_PATIENT = \"blockPatient\";\r\nexport const OBSERVE_BLOCK_PATIENT_ERROR = \"observeBlockPatientError\";\r\nexport const LOADED_ALL_PATIENT_APPOINTMENTS_WITH_SURVEYS = \"loadedAllPatientAppointmentsWithSurvey\";\r\nexport const LOADED_ALL_PATIENT_APPOINTMENTS_WITHOUT_SURVEYS = \"loadedAllPatientAppointmentsWithoutSurvey\";\r\nexport const LOADED_MALICIOUS_PATIENTS = \"loadedMaliciousPatients\";\r\nexport const OBSERVE_MALICIOUS_ERROR = \"observeMaliciousError\";\r\n","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\utilities\\Utilities.js",["312","313","314","315","316","317","318","319","320"],"﻿import { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'; \r\n\r\nexport function formatDate(dateString) {\r\n    var date = new Date(Date.parse(dateString));\r\n    if (date.getDate() < 10) var day = \"0\" + date.getDate();\r\n    else var day = date.getDate();\r\n    if (date.getMonth() < 10) var month = \"0\" + (date.getMonth() + 1);\r\n    else var month = date.getMonth() + 1;\r\n    return day + \"/\" + month + \"/\" + date.getFullYear();\r\n}\r\n\r\nexport function parseStringToDate(dateString) {\r\n    debugger;\r\n    var string = dateString.split('/');\r\n    var date = string[0];\r\n    if (date[0] === '0'){\r\n        date = date.slice(1);\r\n    }\r\n    var month = string[1];\r\n    var year = string[2];\r\n    var retVal = new Date()\r\n    retVal.setDate(date);\r\n    retVal.setMonth(month - 1);\r\n    retVal.setFullYear(year);\r\n    return retVal;\r\n}\r\n\r\nexport function showErrorToast() {\r\n    toast.configure();\r\n\r\n    toast.error(\"Make sure dates are in correct format. (dd/MM/yyyy)\", {\r\n        position: toast.POSITION.TOP_RIGHT\r\n    });\r\n}\r\n\r\nexport function showErrorToastEmail() {\r\n    toast.configure();\r\n\r\n    toast.error(\"Make sure that email is in correct format.\", {\r\n        position: toast.POSITION.TOP_RIGHT\r\n    });\r\n}\r\n\r\nexport function checkDateFormat(date) {\r\n    let re = \"[0-9]{2}\\/[0-9]{2}\\/[0-9]{4}\"\r\n\r\n    //If date does not match sql format, return false;\r\n    if (RegExp(re).test(date)) {\r\n        return false;\r\n    } else return true;\r\n};\r\n\r\nexport function checkEmailFormat(email) {\r\n    let re = \"[0-9a-zA-Z]+@[0-9a-zA-Z]+\\.[0-9a-zA-Z]+\"\r\n\r\n    //If date does not match sql format, return false;\r\n    if (RegExp(re).test(email)) {\r\n        return false;\r\n    } else return true;\r\n};\r\n\r\nexport function showErrorToastIsUsed() {\r\n    toast.configure();\r\n\r\n    toast.error(\"Make sure that Is Used parameter is True or False.\", {\r\n        position: toast.POSITION.TOP_RIGHT\r\n    });\r\n}\r\n\r\nexport function checkIsUsed(isUsed) {\r\n    if (isUsed == \"True\" || isUsed == \"False\") {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\actions\\actions.js",["321"],"﻿import {\r\n    FEEDBACK_CREATED,\r\n    CREATE_ERROR,\r\n    FEEDBACK_PUBLISHED,\r\n    LOADED_PUBLISHED_FEEDBACK,\r\n    PUBLISH_ERROR,\r\n    LOADED_ALL_FEEDBACK,\r\n    OBSERVE_ERROR,\r\n    LOADED_ALL_PRESCRIPTIONS,\r\n    OBSERVE_PRESCRIPTIONS_ERROR,\r\n    LOADED_ALL_PATIENT_PRESCRIPTIONS,\r\n    OBSERVE_PATIENT_PRESCRIPTIONS_ERROR,\r\n    PATIENT_REGISTERED,\r\n    SIMPLE_SEARCH_PATIENT_PRESCRIPTIONS,\r\n    SIMPLE_SEARCH_PRESCRIPTIONS_ERROR,\r\n    ADVANCED_SEARCH_PATIENT_PRESCRIPTIONS,\r\n    ADVANCED_SEARCH_PRESCRIPTIONS_ERROR,\r\n    FIND_ONE_PATIENT,\r\n    FIND_ONE_PATIENT_ERROR,\r\n    SURVEY_CREATED,\r\n    LOADED_APPOINTMENTSURVEY,\r\n    LOADED_ALL_PATIENT_REPORTS,\r\n    OBSERVE_PATIENT_REPORTS_ERROR,\r\n    LOADED_ALL_RATES,\r\n    LOADED_ALL_DOCTOR_RATES,\r\n    ADVANCED_SEARCH_PATIENT_APPOINTMENTS,\r\n    ADVANCED_SEARCH_APPOINTMENTS_ERROR,\r\n    LOADED_ALL_PATIENT_APPOINTMENTS,\r\n    OBSERVE_PATIENT_APPOINTMENTS_ERROR,\r\n    LOADED_ALL_PATIENTS,\r\n    OBSERVE_PATIENTS_ERROR,\r\n    LOADED_ALL_DOCTORS,\r\n    OBSERVE_DOCTORS_ERROR,\r\n    RECOMMEND_APPOINTMENT,\r\n    RECOMMEND_APPOINTMENT_ERROR,\r\n    CREATE_RECOMMEND_APPOINTMENT,\r\n    CREATE_RECOMMEND_APPOINTMENT_ERROR,\r\n    LOADED_ALL_AVAILABLE_DOCTORS,\r\n    LOADED_ALL_AVAILABLE_DOCTORS_ERROR,\r\n    LOADED_ALL_AVAILABLE_APPOINTMENTS,\r\n    LOADED_ALL_AVAILABLE_APPOINTMENTS_ERROR,\r\n    APPOINTMENT_SCHEDULED,\r\n    APPOINTMENT_SCHEDULED_ERROR,\r\n    LOADED_ALL_PATIENT_APPOINTMENTS_INTWODAYS,\r\n    LOADED_ALL_PATIENT_APPOINTMENTS_INFUTURE,\r\n    CANCEL_APPOINTMENT,\r\n    BLOCK_PATIENT,\r\n    OBSERVE_BLOCK_PATIENT_ERROR,\r\n    LOADED_ALL_PATIENT_APPOINTMENTS_WITH_SURVEYS,\r\n    LOADED_ALL_PATIENT_APPOINTMENTS_WITHOUT_SURVEYS,\r\n    LOADED_MALICIOUS_PATIENTS,\r\n    OBSERVE_MALICIOUS_ERROR\r\n} from \"../types/types\"\r\nimport axios from \"axios\";\r\n\r\nexport const feedbackCreated = (feedback) => async (dispatch) => {\r\n    console.log(feedback.message);\r\n    try {\r\n        debugger;\r\n        await axios.post(\"http://localhost:60198/api/feedback/\", feedback);\r\n        debugger;\r\n        dispatch({\r\n            type: FEEDBACK_CREATED,\r\n            payload: feedback,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: CREATE_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n}; \r\n\r\nexport const feedbackPublished = (id) => async (dispatch) => {\r\n    try {\r\n        const response = await axios.put(\"http://localhost:60198/api/feedback/\" + id);\r\n        dispatch({\r\n            type: FEEDBACK_PUBLISHED,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: PUBLISH_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n}; \r\n\r\nexport const loadedPublishedFeedback = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/feedback/published\");        \r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_PUBLISHED_FEEDBACK,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: PUBLISH_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAllFeedback = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/feedback\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_FEEDBACK,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAllPrescriptions = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/prescription\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_PRESCRIPTIONS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_PRESCRIPTIONS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAllPatientPrescriptions = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/prescription/patient\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_PATIENT_PRESCRIPTIONS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_PATIENT_PRESCRIPTIONS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const patientRegistered = (patient) => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        await axios.post(\"http://localhost:60198/api/patientuser\", patient);\r\n        debugger;\r\n        dispatch({\r\n            type: PATIENT_REGISTERED,\r\n            payload: patient,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: CREATE_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n}; \r\n\r\nexport const simpleSearchPatientPrescriptions = (prescription) => async (dispatch) => {\r\n    console.log(prescription.medicines)\r\n    try {\r\n        debugger;\r\n        const response = await axios.post(\"http://localhost:60198/api/prescription/search\", prescription);\r\n        debugger;\r\n        dispatch({\r\n            type: SIMPLE_SEARCH_PATIENT_PRESCRIPTIONS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: SIMPLE_SEARCH_PRESCRIPTIONS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const findOnePatient = (id) => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/patientuser/getone\", {\r\n            params: {\r\n                id: id\r\n            }\r\n        });\r\n        debugger;\r\n        dispatch({\r\n            type: FIND_ONE_PATIENT,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: FIND_ONE_PATIENT_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const advancedSearchPatientPrescriptions = (prescription) => async (dispatch) => {\r\n    console.log(prescription.medicines)\r\n    try {\r\n        debugger;\r\n        const response = await axios.post(\"http://localhost:60198/api/prescription/advancedsearch\", prescription);\r\n        debugger;\r\n        dispatch({\r\n            type: ADVANCED_SEARCH_PATIENT_PRESCRIPTIONS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: ADVANCED_SEARCH_PRESCRIPTIONS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\nexport const loadedAllPatientReports = (patientId) => async (dispatch) => {\r\n    try {\r\n        axios.all(  [axios.get('http://localhost:60198/api/doctorappointment/' + patientId),\r\n                     axios.get('http://localhost:60198/api/operation/' + patientId)])\r\n                        .then(axios.spread((firstResponse, secondResponse) => {\r\n                            debugger;\r\n                            var appointments = []\r\n                            firstResponse.data.forEach(element => appointments.push(element));\r\n                            secondResponse.data.forEach(element => appointments.push(element));\r\n                            console.log(appointments)\r\n                            dispatch({\r\n                                type: LOADED_ALL_PATIENT_REPORTS,\r\n                                payload: appointments,\r\n                            })\r\n                        }))\r\n                        .catch(error => console.log(error))\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_PATIENT_REPORTS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const simpleSearchAppointments  = (searchDto) => async (dispatch) => {\r\n    try {\r\n        axios.all([axios.post('http://localhost:60198/api/doctorappointment/search', searchDto),\r\n            axios.post('http://localhost:60198/api/operation/search',  searchDto)])\r\n            .then(axios.spread((firstResponse, secondResponse) => {\r\n                debugger;\r\n                var appointments = []\r\n                firstResponse.data.forEach(element => appointments.push(element));\r\n                secondResponse.data.forEach(element => appointments.push(element));\r\n                console.log(appointments)\r\n                dispatch({\r\n                    type: LOADED_ALL_PATIENT_REPORTS,\r\n                    payload: appointments,\r\n                })\r\n            }))\r\n            .catch(error => console.log(error))\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_PATIENT_REPORTS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAppointmentSurvey = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/survey\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_APPOINTMENTSURVEY,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const surveyCreated = (survey) => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        await axios.post(\"http://localhost:60198/api/survey/\", survey);\r\n        debugger;\r\n        dispatch({\r\n            type: SURVEY_CREATED,\r\n            payload: survey,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const advancedSearchPatientAppointments = (appointment) => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.post(\"http://localhost:60198/api/doctorappointment/advancedsearch\", appointment);\r\n        debugger;\r\n        dispatch({\r\n            type: ADVANCED_SEARCH_PATIENT_APPOINTMENTS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: ADVANCED_SEARCH_APPOINTMENTS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAllPatientAppointments = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/doctorappointment/patient\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_PATIENT_APPOINTMENTS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_PATIENT_APPOINTMENTS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAllRates = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/survey/getRates\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_RATES,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAllDoctorRates = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/survey/getDoctorRates\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_DOCTOR_RATES,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAllAvailableDoctors = (specialty, date, patientId) => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/doctor/available?specialty=\" + specialty+ \"&date=\" + date + \"&patientId=\" + patientId);\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_AVAILABLE_DOCTORS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: LOADED_ALL_AVAILABLE_DOCTORS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAllPatientAppointmentsInTwoDays = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/doctorappointment/patientInTwoDays\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_PATIENT_APPOINTMENTS_INTWODAYS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_PATIENT_APPOINTMENTS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAllAvailableAppointments = (dto) => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.post(\"http://localhost:60198/api/doctorappointment/availableappointments\", dto);\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_AVAILABLE_APPOINTMENTS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: LOADED_ALL_AVAILABLE_APPOINTMENTS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\nexport const loadedAllPatientAppointmentsInFuture = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/doctorappointment/patientInFuture\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_PATIENT_APPOINTMENTS_INFUTURE,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_PATIENT_APPOINTMENTS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const appointmentScheduled = (appointment) => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.post(\"http://localhost:60198/api/doctorappointment\", appointment);\r\n        debugger;\r\n        dispatch({\r\n            type: APPOINTMENT_SCHEDULED,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: APPOINTMENT_SCHEDULED_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const cancelAppointment = (appointmentId) => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.put(\"http://localhost:60198/api/doctorappointment/\" + appointmentId );\r\n        debugger;\r\n        dispatch({\r\n            type: CANCEL_APPOINTMENT,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_PATIENT_APPOINTMENTS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAllPatientAppointmentsWithSurvey = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/survey/\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_PATIENT_APPOINTMENTS_WITH_SURVEYS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_PATIENT_APPOINTMENTS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAllPatientAppointmentsWithoutSurvey = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/survey/getWithSurveys\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_PATIENT_APPOINTMENTS_WITHOUT_SURVEYS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_PATIENT_APPOINTMENTS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedAllDoctors = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/doctor/\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_DOCTORS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_DOCTORS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const recommendAppointment = (appointment) => async (dispatch) => {\r\n    console.log(appointment.start)\r\n    try {\r\n        debugger;\r\n        const response = await axios.post(\"http://localhost:60198/api/doctorappointment/recommend\", appointment);\r\n        debugger;\r\n        dispatch({\r\n            type: RECOMMEND_APPOINTMENT,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: RECOMMEND_APPOINTMENT_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const createRecommendAppointment = (appointment) => async (dispatch) => {\r\n    console.log(appointment.start)\r\n    try {\r\n        debugger;\r\n        const response = await axios.post(\"http://localhost:60198/api/doctorappointment/createRecommended\", appointment);\r\n        debugger;\r\n        dispatch({\r\n            type: CREATE_RECOMMEND_APPOINTMENT,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: CREATE_RECOMMEND_APPOINTMENT_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const loadedAllPatients = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/patientuser\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_ALL_PATIENTS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_PATIENTS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const blockPatient = (patientId) => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.put(\"http://localhost:60198/api/patientuser/\" + patientId);\r\n        debugger;\r\n        dispatch({\r\n            type: BLOCK_PATIENT,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_BLOCK_PATIENT_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n\r\nexport const loadedMaliciousPatients = () => async (dispatch) => {\r\n    try {\r\n        debugger;\r\n        const response = await axios.get(\"http://localhost:60198/api/patientuser/malicious\");\r\n        debugger;\r\n        dispatch({\r\n            type: LOADED_MALICIOUS_PATIENTS,\r\n            payload: response.data,\r\n        });\r\n    } catch (e) {\r\n        dispatch({\r\n            type: OBSERVE_MALICIOUS_ERROR,\r\n            payload: console.log(e),\r\n        });\r\n    }\r\n};\r\n","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\registerServiceWorker.ts",[],["322","323"],"C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\store\\index.ts",[],"C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\Home.tsx",[],"C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\Layout.tsx",["324"],"import * as React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport NavMenu from './NavMenu';\r\nimport { Route } from 'react-router';\r\nimport Home from '../components/Home';\r\nimport PatientFeedback from './PatientFeedback';\r\nimport AdminFeedback from './AdminFeedback';\r\nimport CreateFeedback from './CreateFeedback';\r\nimport PrescriptionsSimple from './PrescriptionsSimple';\r\nimport AppointmentReportSimpleSearch from './AppointmentReportSimpleSearch';\r\nimport RegistrationOfPatient from './PatientRegister';\r\nimport PrescriptionsAdvanced from './PrescriptionsAdvanced';\r\nimport MyInformation from './MyInformation';\r\nimport AppointmentsAdvanced from './AppointmentsAdvanced';\r\nimport CreateSurvey from './CreateSurvey';\r\nimport DoctorRates from './DoctorRates';\r\nimport AllRates from './AllRates';\r\nimport ChooseAppointmentType from './ChooseAppointmentType';\r\nimport AllPatientsAppointments from './AllPatientsAppointments';\r\nimport MaliciousPatient from './MaliciousPatient';\r\nimport ScheduleAppointment from './ScheduleAppointment';\r\n\r\nexport default (props: { children: React.ReactNode }) => (\r\n    <React.Fragment>\r\n        <NavMenu/>\r\n        <Container>\r\n            <Route exact path='/' component={Home} />\r\n            <Route path='/patient-feedback' component={PatientFeedback} />\r\n            <Route path='/admin-feedback' component={AdminFeedback} />\r\n            <Route path='/create-feedback' component={CreateFeedback} />\r\n            <Route path='/prescriptions-simple' component={PrescriptionsSimple} />\r\n            <Route path='/reports-simple' component={AppointmentReportSimpleSearch} />\r\n            <Route path='/register-patient' component={RegistrationOfPatient} />\r\n            <Route path='/prescriptions-advanced' component={PrescriptionsAdvanced} />\r\n            <Route path='/my-information' component={MyInformation} />\r\n            <Route path='/appointments-advanced' component={AppointmentsAdvanced} />\r\n            <Route path='/create-survey' component={CreateSurvey} />\r\n            <Route path='/rates-doctor' component={DoctorRates} />\r\n            <Route path='/rates-general' component={AllRates} />\r\n            <Route path='/choose-appointment-type' component={ChooseAppointmentType} />\r\n            <Route path='/my-appointments' component={AllPatientsAppointments} />\r\n            <Route path='/malicious-patient' component={MaliciousPatient} />\r\n            <Route path='/schedule-appointment' component={ScheduleAppointment} />\r\n        </Container>\r\n    </React.Fragment>\r\n);\r\n","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\Counter.tsx",["325"],"import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { ApplicationState } from '../store';\r\nimport * as CounterStore from '../store/Counter';\r\nimport PublishButton from './PublishButton';\r\nimport PublishedFeedback from './PublishedFeedbackTable';\r\nimport AllFeedbackTable from './AllFeedbackTable';\r\n\r\ntype CounterProps =\r\n    CounterStore.CounterState &\r\n    typeof CounterStore.actionCreators &\r\n    RouteComponentProps<{}>;\r\n\r\nclass Counter extends React.PureComponent<CounterProps> {\r\n\r\n    public render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Counter</h1>\r\n                <PublishedFeedback />\r\n                <h1>Proba</h1>\r\n\r\n                <p>This is a simple example of a React component.</p>\r\n\r\n                <p aria-live=\"polite\">Current count: <strong>{this.props.count}</strong></p>\r\n\r\n                <button type=\"button\"\r\n                    className=\"btn btn-primary btn-lg\"\r\n                    onClick={() => { this.props.increment(); }}>\r\n                    Increment\r\n                </button>\r\n                \r\n                <h1>All feedback</h1>\r\n                <AllFeedbackTable />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    (state: ApplicationState) => state.counter,\r\n    CounterStore.actionCreators\r\n)(Counter);\r\n","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PrescriptionsSimple.js",["326","327","328"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar Header_1 = require(\"./Header\");\r\nvar PrescriptionsSearchSimpleTable_1 = require(\"./PrescriptionsSearchSimpleTable\");\r\nvar PrescriptionsSearchAdvancedTable_1 = require(\"./PrescriptionsSearchAdvancedTable\");\r\nvar PrescriptionsSimple = /** @class */ (function (_super) {\r\n    __extends(PrescriptionsSimple, _super);\r\n    function PrescriptionsSimple() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            showSimple: true\r\n        };\r\n        return _this;\r\n    }\r\n    PrescriptionsSimple.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"Prescriptions Search\", description: \"Search prescriptions.\" }),\r\n            React.createElement(\"br\", null),\r\n            this.state.showSimple ? React.createElement(\"button\", { className: \"btn-lg btn-primary\", onClick: this.showAdvanced.bind(this) }, \"Advanced Search\") : React.createElement(\"button\", { className: \"btn-lg btn-primary\", onClick: this.showSimple.bind(this) }, \"Simple Search\"),\r\n            this.state.showSimple ? React.createElement(PrescriptionsSearchSimpleTable_1.default, null) : React.createElement(PrescriptionsSearchAdvancedTable_1.default, null)));\r\n    };\r\n    PrescriptionsSimple.prototype.showSimple = function () {\r\n        this.setState({\r\n            showSimple: true\r\n        });\r\n    };\r\n    PrescriptionsSimple.prototype.showAdvanced = function () {\r\n        this.setState({\r\n            showSimple: false\r\n        });\r\n    };\r\n    return PrescriptionsSimple;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(PrescriptionsSimple);\r\n//# sourceMappingURL=PrescriptionsSimple.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PrescriptionsAdvanced.js",["329","330","331"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar Header_1 = require(\"./Header\");\r\nvar PrescriptionsSearchAdvancedTable_1 = require(\"./PrescriptionsSearchAdvancedTable\");\r\nvar PrescriptionsAdvanced = /** @class */ (function (_super) {\r\n    __extends(PrescriptionsAdvanced, _super);\r\n    function PrescriptionsAdvanced() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PrescriptionsAdvanced.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"Advanced Prescriptions Search\", description: \"Search prescriptions.\" }),\r\n            React.createElement(PrescriptionsSearchAdvancedTable_1.default, null)));\r\n    };\r\n    return PrescriptionsAdvanced;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(PrescriptionsAdvanced);\r\n//# sourceMappingURL=PrescriptionsAdvanced.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PatientRegister.js",["332","333","334"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar Header_1 = require(\"./Header\");\r\nvar RegisterPatient_1 = require(\"./RegisterPatient\");\r\nvar PatientRegistration = /** @class */ (function (_super) {\r\n    __extends(PatientRegistration, _super);\r\n    function PatientRegistration() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PatientRegistration.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"Register\", description: \"Registration for patient\" }),\r\n            React.createElement(RegisterPatient_1.default, null)));\r\n    };\r\n    return PatientRegistration;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(PatientRegistration);\r\n//# sourceMappingURL=PatientRegister.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AppointmentReportSimpleSearch.js",["335","336","337"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar AppointmentReportSimpleSearchTable_1 = require(\"./AppointmentReportSimpleSearchTable\");\r\nvar Header_1 = require(\"./Header\");\r\nvar AppointmentsSearchAdvancedTable_1 = require(\"./AppointmentsSearchAdvancedTable\");\r\nvar AppointmentReportSimpleSearch = /** @class */ (function (_super) {\r\n    __extends(AppointmentReportSimpleSearch, _super);\r\n    function AppointmentReportSimpleSearch() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            showSimple: true\r\n        };\r\n        return _this;\r\n    }\r\n    AppointmentReportSimpleSearch.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"Appointments Search\", description: \"Search appointments.\" }),\r\n            React.createElement(\"br\", null),\r\n            this.state.showSimple ? React.createElement(\"button\", { className: \"btn-lg btn-primary\", onClick: this.showAdvanced.bind(this) }, \"Advanced Search\") : React.createElement(\"button\", { className: \"btn-lg btn-primary\", onClick: this.showSimple.bind(this) }, \"Simple Search\"),\r\n            this.state.showSimple ? React.createElement(AppointmentReportSimpleSearchTable_1.default, null) : React.createElement(AppointmentsSearchAdvancedTable_1.default, null)));\r\n    };\r\n    AppointmentReportSimpleSearch.prototype.showSimple = function () {\r\n        this.setState({\r\n            showSimple: true\r\n        });\r\n    };\r\n    AppointmentReportSimpleSearch.prototype.showAdvanced = function () {\r\n        this.setState({\r\n            showSimple: false\r\n        });\r\n    };\r\n    return AppointmentReportSimpleSearch;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(AppointmentReportSimpleSearch);\r\n//# sourceMappingURL=AppointmentReportSimpleSearch.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AppointmentsAdvanced.js",["338","339","340"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar Header_1 = require(\"./Header\");\r\nvar AppointmentsSearchAdvancedTable_1 = require(\"./AppointmentsSearchAdvancedTable\");\r\nvar AppointmentsAdvanced = /** @class */ (function (_super) {\r\n    __extends(AppointmentsAdvanced, _super);\r\n    function AppointmentsAdvanced() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AppointmentsAdvanced.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"Advanced Appointments Search\", description: \"Search appointments.\" }),\r\n            React.createElement(AppointmentsSearchAdvancedTable_1.default, null)));\r\n    };\r\n    return AppointmentsAdvanced;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(AppointmentsAdvanced);\r\n//# sourceMappingURL=AppointmentsAdvanced.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\MyInformation.js",["341","342","343"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar Header_1 = require(\"./Header\");\r\nvar CheckPersonalInformationTable_1 = require(\"./CheckPersonalInformationTable\");\r\nvar MyInformation = /** @class */ (function (_super) {\r\n    __extends(MyInformation, _super);\r\n    function MyInformation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MyInformation.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"My Information\", description: \"See my information.\" }),\r\n            React.createElement(CheckPersonalInformationTable_1.default, null)));\r\n    };\r\n    return MyInformation;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(MyInformation);\r\n//# sourceMappingURL=MyInformation.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\DoctorRates.js",["344","345","346"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar Header_1 = require(\"./Header\");\r\nvar DoctorsRatingTable_1 = require(\"./DoctorsRatingTable\");\r\nvar DoctorRates = /** @class */ (function (_super) {\r\n    __extends(DoctorRates, _super);\r\n    function DoctorRates() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DoctorRates.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"Doctor reviews\", description: \"See what other users think about our doctors.\" }),\r\n            React.createElement(DoctorsRatingTable_1.default, null)));\r\n    };\r\n    return DoctorRates;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(DoctorRates);\r\n//# sourceMappingURL=DoctorRates.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\CreateSurvey.js",["347","348","349"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar Header_1 = require(\"./Header\");\r\nvar CreateSurveyForm_1 = require(\"./CreateSurveyForm\");\r\nvar CreateServey = /** @class */ (function (_super) {\r\n    __extends(CreateServey, _super);\r\n    function CreateServey() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CreateServey.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"Fill survey\", description: \"Please rate us.\" }),\r\n            React.createElement(CreateSurveyForm_1.default, null)));\r\n    };\r\n    return CreateServey;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(CreateServey);\r\n//# sourceMappingURL=CreateSurvey.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AllRates.js",["350","351","352"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar Header_1 = require(\"./Header\");\r\nvar AllRatingTable_1 = require(\"./AllRatingTable\");\r\nvar AllRates = /** @class */ (function (_super) {\r\n    __extends(AllRates, _super);\r\n    function AllRates() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AllRates.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"General reviews\", description: \"See what other users think about our hospital.\" }),\r\n            React.createElement(AllRatingTable_1.default, null)));\r\n    };\r\n    return AllRates;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(AllRates);\r\n//# sourceMappingURL=AllRates.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AllPatientsAppointments.js",["353","354","355"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar AllPatientsAppointmentsTable_1 = require(\"./AllPatientsAppointmentsTable\");\r\nvar AppointmentMenu_1 = require(\"./AppointmentMenu\");\r\nvar Header_1 = require(\"./Header\");\r\nvar AllPatientsAppointments = /** @class */ (function (_super) {\r\n    __extends(AllPatientsAppointments, _super);\r\n    function AllPatientsAppointments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AllPatientsAppointments.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"My Appointments\", description: \"All of my appointments.\" }),\r\n            React.createElement(AppointmentMenu_1.default, null),\r\n            React.createElement(\"br\", null),\r\n            React.createElement(\"br\", null),\r\n            React.createElement(AllPatientsAppointmentsTable_1.default, null)));\r\n    };\r\n    return AllPatientsAppointments;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(AllPatientsAppointments);\r\n//# sourceMappingURL=AllPatientsAppointments.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\ScheduleAppointment.js",["356","357","358"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar Header_1 = require(\"./Header\");\r\nvar ScheduleAppointmentBody_1 = require(\"./ScheduleAppointmentBody\");\r\nvar ScheduleAppointment = /** @class */ (function (_super) {\r\n    __extends(ScheduleAppointment, _super);\r\n    function ScheduleAppointment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            modalShow: false\r\n        };\r\n        return _this;\r\n    }\r\n    ScheduleAppointment.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"Schedule appointments\", description: \"Schedule doctor appointment.\" }),\r\n            React.createElement(ScheduleAppointmentBody_1.default, null)));\r\n    };\r\n    return ScheduleAppointment;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(ScheduleAppointment);\r\n//# sourceMappingURL=ScheduleAppointment.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\ChooseAppointmentType.js",["359","360","361"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar AppointmentMenu_1 = require(\"./AppointmentMenu\");\r\nvar Header_1 = require(\"./Header\");\r\nvar ChooseAppointmentType = /** @class */ (function (_super) {\r\n    __extends(ChooseAppointmentType, _super);\r\n    function ChooseAppointmentType() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ChooseAppointmentType.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"Schedule appointment\", description: \"Choose way of scheduling.\" }),\r\n            React.createElement(AppointmentMenu_1.default, null)));\r\n    };\r\n    return ChooseAppointmentType;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(ChooseAppointmentType);\r\n//# sourceMappingURL=ChooseAppointmentType.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\MaliciousPatient.js",["362","363","364"],"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_redux_1 = require(\"react-redux\");\r\nvar CounterStore = require(\"../store/Counter\");\r\nvar Header_1 = require(\"./Header\");\r\nvar MaliciousPatientTable_1 = require(\"./MaliciousPatientTable\");\r\nvar MaliciousPatient = /** @class */ (function (_super) {\r\n    __extends(MaliciousPatient, _super);\r\n    function MaliciousPatient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MaliciousPatient.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(Header_1.default, { title: \"Malicious patients\", description: \"Block malicious patient.\" }),\r\n            React.createElement(MaliciousPatientTable_1.default, null)));\r\n    };\r\n    return MaliciousPatient;\r\n}(React.PureComponent));\r\n;\r\nexports.default = react_redux_1.connect(function (state) { return state.counter; }, CounterStore.actionCreators)(MaliciousPatient);\r\n//# sourceMappingURL=MaliciousPatient.js.map","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\store\\Counter.ts",[],"C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PatientFeedback.tsx",["365"],"import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { ApplicationState } from '../store';\r\nimport * as CounterStore from '../store/Counter';\r\nimport Header from './Header';\r\nimport PublishedFeedbackTable from './PublishedFeedbackTable';\r\nimport CreateForm from './CreateForm';\r\n\r\ntype CounterProps =\r\n    CounterStore.CounterState &\r\n    typeof CounterStore.actionCreators &\r\n    RouteComponentProps<{}>;\r\n\r\nclass PatientFeedback extends React.PureComponent<CounterProps> {\r\n    public render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header title=\"Feedback\" description=\"See what other users think about our hospital.\" />\r\n                <PublishedFeedbackTable/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    (state: ApplicationState) => state.counter,\r\n    CounterStore.actionCreators\r\n)(PatientFeedback);\r\n","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\NavMenu.tsx",["366"],"import * as React from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport default class NavMenu extends React.PureComponent<{}, { isOpen: boolean }> {\r\n    public state = {\r\n        isOpen: false\r\n    };\r\n\r\n    public render() {\r\n        return (\r\n            <header>\r\n                <Navbar className=\"navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow\" light>\r\n                    <Container>                     \r\n                        <NavbarToggler onClick={this.toggle} className=\"mr-2\"/>\r\n                        <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={this.state.isOpen} navbar>\r\n                            <ul className=\"navbar-nav flex-grow\">\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                                </NavItem>\r\n                                {/*<NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/patient-feedback\">Feedback</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/admin-feedback\">Admin Feedback</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/create-feedback\">Create feedback</NavLink>\r\n                                </NavItem>*/}\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/prescriptions-simple\">Prescriptions Search</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/reports-simple\">Appointment Reports Search</NavLink>\r\n                                </NavItem>\r\n                                {/*<NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/register-patient\">Patient Registration</NavLink>\r\n                                </NavItem>*/}\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/my-information\">My Information</NavLink>\r\n                                </NavItem>\r\n                                {/*<NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/create-survey\">Create Survey</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/rates-doctor\">Doctors Rating</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/rates-general\">Hospital Rating</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/prescriptions-advanced\">Advanced Prescriptions Search</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/appointments-advanced\">Advanced Appointments Search</NavLink>\r\n                                </NavItem>*/}\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/my-appointments\">My Appointments</NavLink>\r\n                                </NavItem>\r\n                                {/*<NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/malicious-patient\">Malicious patient</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/schedule-appointment\">Schedule appointments</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/choose-appointment-type\">Schedule Appointment</NavLink>\r\n                                </NavItem>*/}\r\n                            </ul>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n}\r\n","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\CreateFeedback.tsx",[],"C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AdminFeedback.tsx",[],"C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PublishedFeedbackTable.jsx",["367"],"﻿import React, { Component } from \"react\"\r\nimport { loadedPublishedFeedback } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { formatDate } from \"../utilities/Utilities\"\r\n\r\nclass PublishedFeedbackTable extends Component {\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.loadedPublishedFeedback();       \r\n    }\r\n    render() {\r\n        debugger;\r\n        if (this.props.publishedFeedbackList === undefined) {\r\n            \r\n            return null;\r\n        }\r\n        const feedbackList = this.props.publishedFeedbackList;       \r\n        return (\r\n\r\n            <div className=\"wrap\">\r\n                {feedbackList.map((f) => (\r\n                    <div key={f.Id} className=\"item-row\">\r\n                        <div key={f.Id} className=\"check-flag\">\r\n                            <span className=\"small-text-label\">Name and Surname</span>\r\n                            <span className=\"small-text-label hours\">{ formatDate(f.date) }</span>\r\n                            <span className=\"check-flag-label\">{f.isAnonymous ? \"ANONYMOUS\" : [f.patient.firstName, ' ', f.patient.secondName].join('')}</span>\r\n                            <textarea className=\"check-flag-textarea\" disabled rows={3} value={f.message}></textarea>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            \r\n\r\n            \r\n            \r\n\r\n        );\r\n    }   \r\n}\r\n\r\nconst mapStateToProps = (state) => \r\n    \r\n    ({ publishedFeedbackList: state.reducer.publishedFeedbackList})\r\n\r\nexport default connect(mapStateToProps, { loadedPublishedFeedback })(PublishedFeedbackTable);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AllFeedbackTable.jsx",["368","369","370"],"﻿import React, { Component } from \"react\"\r\nimport { loadedAllFeedback } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport PublishButton from \"./PublishButton\";\r\nimport { wrap } from \"module\";\r\nimport { formatDate } from \"../utilities/Utilities\"\r\n\r\n\r\n\r\nclass AllFeedbackTable extends Component {\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.loadedAllFeedback();\r\n    }\r\n    render() {\r\n        debugger;\r\n        if (this.props.feedbackList === undefined) {\r\n\r\n            return null;\r\n        }\r\n        const feedbackList = this.props.feedbackList;\r\n        return (\r\n\r\n            <div>             \r\n                <table className='table allFeedback' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"left\" , width: '35%' }}> Message</th>\r\n                            <th style={{ textAlign: \"center\" }}>Created</th>\r\n                            <th style={{ textAlign: \"center\" }}>Patient</th>\r\n                            <th> </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {feedbackList.map((f) => (\r\n                        <tbody key={f.id}>\r\n                            <tr key={f.id}>\r\n                                <td style={{ flexWrap: \"wrap\", wordWrap: \"break-word\", wordBreak: \"break-word\", width: '35%' }}>{f.message}</td >\r\n                                <td style={{ textAlign: \"center\" }} > {formatDate(f.date)}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.patient == undefined ? \"\" : f.isAnonymous ? \"ANONYMOUS\" : [f.patient.firstName, ' ', f.patient.secondName].join('')}</td >\r\n                                <td style={{ textAlign: \"center\" }} ><PublishButton feedback={f}> </PublishButton></td >\r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                </table>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({ feedbackList: state.reducer.feedbackList })\r\n\r\nexport default connect(mapStateToProps, { loadedAllFeedback })(AllFeedbackTable);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AppointmentReportSimpleSearchTable.jsx",["371","372","373","374","375"],"﻿import React, { Component } from \"react\"\r\nimport { loadedAllPatientReports, simpleSearchAppointments } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { wrap } from \"module\";\r\nimport axios from \"axios\";\r\nimport ReferralModal from \"./ReferralModal\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'; \r\nimport { showErrorToast, checkDateFormat } from \"../utilities/Utilities\"\r\n\r\nclass AppointmentReportSimpleSearchTable extends Component {\r\n    state = {\r\n        Start: \"\",\r\n        End: \"\",\r\n        DoctorNameAndSurname: \"\",\r\n        AppointmentType: \"\",\r\n        PatientId: 2,\r\n        Referral: null,\r\n        Date: \"\",\r\n        modalShow: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.loadedAllPatientReports(2);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        debugger;\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ? this.setState({\r\n            [name]: checked\r\n        }) : this.setState({\r\n            [name]: value\r\n        })\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        const patientAppointments = this.props.patientAppointments;\r\n        debugger;\r\n        return (\r\n            <div>\r\n                {this.state.modalShow ? <ReferralModal show={this.state.modalShow} referral={this.state.Referral} date={this.state.Date} onShowChange={this.displayModal.bind(this)} /> : null}\r\n                <div className=\"field-wrap\">\r\n                    <label className=\"label\" htmlFor=\"\">\r\n                        Doctor name and surname:\r\n                        </label>\r\n                    <input\r\n                        className=\"field\"\r\n                        type=\"text\"\r\n                        value={this.state.DoctorNameAndSurname}\r\n                        name=\"DoctorNameAndSurname\"\r\n\r\n                        onChange={this.handleChange.bind(this)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"field-wrap\">\r\n                    <label className=\"label label-date\">From: </label>\r\n\r\n                    <input\r\n                        className=\"field field-date\"\r\n                        type=\"text\"\r\n                        value={this.state.Start}\r\n                        name=\"Start\"\r\n                        placeholder=\"dd/MM/yyyy\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                     <input\r\n                        className=\"field field-date field-end\"\r\n                        type=\"text\"\r\n                        value={this.state.End}\r\n                        name=\"End\"\r\n                        placeholder=\"dd/MM/yyyy\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <label className=\"label label-date label-end\">to: </label>\r\n\r\n                </div>\r\n\r\n                <div className=\"field-wrap\">\r\n                    <label className=\"label\">Type of appointment: </label>\r\n\r\n                    <select\r\n                        className=\"field\"\r\n                        value={this.state.AppointmentType}\r\n                        onChange={this.handleChange}\r\n                        name=\"AppointmentType\"\r\n                    >\r\n                        <option value=\"\"> </option>\r\n                        <option value=\"Appointment\">Appointment </option>\r\n                        <option value=\"Operation\">Operation </option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"btn-wrap align-right\">\r\n                    <button className=\"btn btn-primary btn-block btn-lg mb-4\" onClick={this.searchAppointments.bind(this)}>Search</button>\r\n                </div>\r\n\r\n                <br>\r\n                </br>\r\n\r\n                <table className='table allPrescriptions' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"left\" }}>Doctor</th>\r\n                            <th style={{ textAlign: \"center\" }}>Type</th>\r\n                            <th style={{ textAlign: \"center\" }}>Date</th>\r\n                            <th style={{ textAlign: \"center\" }}></th>\r\n                        </tr>\r\n                    </thead>\r\n                    {patientAppointments.map((f) => (\r\n                        <tbody key={f}>\r\n                            <tr key={f}>\r\n                                <td style={{ textAlign: \"left\" }} >{f.doctorNameAndSurname}</td>\r\n                                <td style={{ textAlign: \"center\" }} > {this.checkType(f)}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.date}</td >\r\n                                <td style={{ textAlign: \"right\" }}><button onClick={() => { this.displayModal(f) }} className=\"btn btn-primary\">Details</button></td >\r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                </table>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n        \r\n    }\r\n\r\n    displayModal(f) {\r\n        debugger;\r\n        console.log(f)\r\n        this.setState({ modalShow: !this.state.modalShow })\r\n        if (f === undefined) {\r\n            return;\r\n        }\r\n        else if (typeof f.referral !== 'undefined') {\r\n            this.setState({ Referral: f.referral[0], Date: f.date })\r\n        }\r\n        else if (typeof f.operationReferral !== 'undefined') {\r\n            this.setState({ Referral: f.operationReferral, Date: f.date })\r\n        }\r\n    }\r\n\r\n    checkType(f) {\r\n        debugger;\r\n        console.log(typeof f.operationReferral); \r\n        let type = typeof f.operationReferral\r\n        console.log(type !== 'undefined');\r\n        if (typeof f.operationReferral !== 'undefined') {\r\n            return \"Operation\"\r\n        }\r\n        else {\r\n            return \"Appointment\"\r\n        }\r\n    }\r\n\r\n    searchAppointments() {\r\n        debugger;\r\n        if (this.state.Start !== \"\" && checkDateFormat(this.state.Start)) {\r\n            showErrorToast()\r\n        }\r\n        else if (this.state.End !== \"\" && checkDateFormat(this.state.End)) {\r\n            showErrorToast()\r\n        }\r\n        this.props.simpleSearchAppointments({ Start: this.state.Start, End: this.state.End, DoctorNameAndSurname: this.state.DoctorNameAndSurname, AppointmentType: this.state.AppointmentType, PatientId: this.state.PatientId })\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({ patientAppointments: state.reducer.patientAppointments })\r\n\r\nexport default connect(mapStateToProps, { loadedAllPatientReports, simpleSearchAppointments })(AppointmentReportSimpleSearchTable);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\RegisterPatient.jsx",["376","377","378","379"],"﻿import React, { Component } from \"react\"\r\nimport { patientRegistered } from \"../actions/actions\"\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { showErrorToast, checkDateFormat, checkEmailFormat, showErrorToastEmail } from \"../utilities/Utilities\"\r\nimport \"../css/app.css\"\r\n\r\nclass RegisterPatient extends Component {\r\n    state = {\r\n        patient: {\r\n            firstName: \"\",\r\n            secondName: \"\",\r\n            gender: \"\",\r\n            uniqueCitizensidentityNumber: \"\",\r\n            dateOfBirth: \"\",\r\n            phoneNumber: \"\",\r\n            medicalIdNumber: \"\",\r\n            allergie: \"\",\r\n            city: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            isMarried: false,\r\n            bornIn: \"\",\r\n            parentName: \"\",\r\n            exLastname: \"\",\r\n            file: \"\"\r\n        },\r\n        file: null,\r\n        fileName: \"\",\r\n        fileUrl: null\r\n                \r\n    };\r\n\r\n    handleChange = (event) => {\r\n        var { name, value, type, checked } = event.target\r\n        name = \"this.state.patient.\" + name\r\n        console.log(this.state.patient.firstName)\r\n        console.log(name)\r\n        type === \"checkbox\" ? this.setState({\r\n            [name]: checked\r\n        }) : this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    \r\n    handleChange2 = async(event) => {\r\n        this.setState({\r\n            fileUrl: URL.createObjectURL(event.target.files[0]),\r\n            \r\n\r\n        })\r\n        const formData = new FormData();\r\n        \r\n        formData.append(\"formFile\", event.target.files[0]);\r\n        formData.append(\"fileName\", event.target.files[0].name);\r\n\r\n        \r\n\r\n        var dummyThis = this;\r\n        try {\r\n            const res = await axios({\r\n\r\n                method: 'post',\r\n                url: 'http://localhost:60198/api/patientuser/image',\r\n                data: formData,\r\n                headers: { 'Content-Type': 'multipart/form-data' }\r\n            })\r\n                .then(function (response) {\r\n                    \r\n                    var patient = { ...dummyThis.state.patient };\r\n                    patient.file = response.data;\r\n                    dummyThis.setState({ patient });\r\n                    console.log(response);\r\n                })\r\n                .catch(function (response) {\r\n                    \r\n                    console.log(response);\r\n\r\n\r\n\r\n\r\n\r\n\r\n                });\r\n            console.log(res);\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    }\r\n    updateFirstName(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.firstName = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n\r\n    updateSurname(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.secondName = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n    updateGender(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.gender = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n    updateMedId(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.medicalIdNumber = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n    updateBirthday(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.dateOfBirth = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n    updateCity(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.city = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n    updateEmail(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.email = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n    updatePassword(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.password = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n    updatePhone(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.phoneNumber = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n    updateBorn(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.bornIn = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n    updateParent(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.parentName = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n    updateAllergie(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.allergie = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n    updateUcin(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.uniqueCitizensidentityNumber = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n    updateMarried(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.isMarried = evt.target.checked;\r\n        this.setState({ patient });\r\n    }\r\n    updateMaiden(evt) {\r\n        var patient = { ...this.state.patient };\r\n        patient.exLastname = evt.target.value;\r\n        this.setState({ patient });\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                \r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Name:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.firstName}\r\n                            name=\"firstName\"                          \r\n                            onChange={(e)=>this.updateFirstName(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Surname:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.secondName}\r\n                            name=\"secondName\"\r\n                            onChange={(e) => this.updateSurname(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\">Gender: </label>\r\n\r\n                        <select\r\n                            className=\"field\"\r\n                            defaultValue={this.state.patient.gender}\r\n                            onChange={(e) => this.updateGender(e)}\r\n                            name=\"gender\"\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Male\">Male </option>\r\n                            <option value=\"Female\">Female </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Medical Record ID:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.medicalIdNumber}\r\n                            name=\"medicalIdNumber\"\r\n                            onChange={(e) => this.updateMedId(e)}\r\n                        />\r\n                    </div>\r\n                 \r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Birth date:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.dateOfBirth}\r\n                            name=\"dateOfBirth\"\r\n                            placeholder=\"mm/dd/yyyy\"\r\n                            onChange={(e) => this.updateBirthday(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Address:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.city}\r\n                            name=\"city\"\r\n                            onChange={(e) => this.updateCity(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Email:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.email}\r\n                            name=\"email\"\r\n                            placeholder=\"email@address.com\"\r\n                            onChange={(e) => this.updateEmail(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                           Password:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.password}\r\n                            name=\"password\"\r\n                            onChange={(e) => this.updatePassword(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Phone number:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.phoneNumber}\r\n                            name=\"phoneNumber\"\r\n                            onChange={(e) => this.updatePhone(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Place of birth:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.bornIn}\r\n                            name=\"bornIn\"\r\n                            onChange={(e) => this.updateBorn(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Parents name:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.parentName}\r\n                            name=\"parentName\"\r\n                            onChange={(e) => this.updateParent(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Allergie:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.allergie}\r\n                            name=\"allergie\"\r\n                            onChange={(e) => this.updateAllergie(e)}\r\n                        />\r\n                    </div>\r\n                   \r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Unique Citizens identity Number:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.uniqueCitizensidentityNumber}\r\n                            name=\"uniqueCitizensidentityNumber\"\r\n                            onChange={(e) => this.updateUcin(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"isMarried\"\r\n                                checked={this.state.patient.isMarried}\r\n                                onChange={(e) => this.updateMarried(e)}\r\n                            /> Married\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Maiden name:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.patient.exLastname}\r\n                            name=\"exLastname\"\r\n                            disabled={((this.state.patient.gender.toString() === \"Female\") && (this.state.patient.isMarried)) ? \"\" : \"disabled\"} \r\n                            onChange={(e) => this.updateMaiden(e)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input type=\"file\" onChange={this.handleChange2} />\r\n                        <img src={this.state.fileUrl} className=\"photo\" />\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"btn-wrap align-right\">\r\n                        <button disabled={!this.state.patient.firstName || !this.state.patient.secondName || this.state.patient.gender == \"\" || !this.state.patient.allergie || !this.state.patient.bornIn || !this.state.patient.city || !this.state.patient.dateOfBirth || !this.state.patient.email || !this.state.patient.medicalIdNumber || !this.state.patient.parentName || !this.state.patient.password || !this.state.patient.phoneNumber || !this.state.patient.uniqueCitizensidentityNumber} className=\"btn btn-primary\" onClick={this.createRegistration.bind(this)}>Register</button>\r\n                    </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n\r\n    createRegistration() {\r\n        if (this.state.patient.dateOfBirth !== \"\" && checkDateFormat(this.state.patient.dateOfBirth)) {\r\n            showErrorToast()\r\n            return;\r\n        } else if (this.state.patient.email !== \"\" && checkEmailFormat(this.state.patient.email)){\r\n            showErrorToastEmail()\r\n            return;\r\n        }\r\n        else {\r\n            toast.configure();\r\n\r\n\r\n            toast.success(\"Registration successful!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n\r\n\r\n\r\n\r\n\r\n            console.log(this.state.patient);\r\n\r\n            this.props.patientRegistered(this.state.patient)\r\n            \r\n\r\n\r\n        }\r\n        window.location.href = \"http://localhost:60198\";\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { patientRegistered })(RegisterPatient);\r\n","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PrescriptionsSearchSimpleTable.jsx",["380","381"],"﻿import React, { Component } from \"react\"\r\nimport { loadedAllPatientPrescriptions, simpleSearchPatientPrescriptions } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { wrap } from \"module\";\r\n\r\nclass PrescriptionsSearchSimpleTable extends Component {\r\n    state = {\r\n        medicines: \"\",\r\n        isUsed: \"\",\r\n        comment: \"\",\r\n        doctor: \"\"\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        debugger;\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ? this.setState({\r\n            [name]: checked\r\n        }) : this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.simpleSearchPatientPrescriptions(this.state);\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        if (this.props.patientPrescriptionsList === undefined) {\r\n\r\n            return null;\r\n        }\r\n\r\n        const patientPrescriptionsList = this.props.patientPrescriptionsList;\r\n        let medicines = \"\"\r\n        return (\r\n\r\n            <div>\r\n                \r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Medicine:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.medicines}\r\n                            name=\"medicines\" \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\">Is used: </label>\r\n\r\n                        <select\r\n                            className=\"field\"\r\n                            value={this.state.isUsed}\r\n                            onChange={this.handleChange}\r\n                            name=\"isUsed\"\r\n                            >\r\n                                <option value=\"\"> </option>\r\n                                <option value=\"True\">Used </option>\r\n                                <option value=\"False\">Not used </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Comment:\r\n                        </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.comment}\r\n                            name=\"comment\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\" htmlFor=\"\">\r\n                            Doctor:\r\n                            </label>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            value={this.state.doctor}\r\n                            name=\"doctor\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"btn-wrap align-right\">\r\n                    <button className=\"btn btn-primary btn-block btn-lg mb-4\" onClick={this.searchPrescriptions.bind(this)}>Search</button>\r\n                    </div>\r\n                \r\n                <table className='table allPrescriptions' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"left\" }}>Medicine</th>\r\n                            <th style={{ textAlign: \"center\" }}>Is Used</th>\r\n                            <th style={{ textAlign: \"center\" }}>Comment</th>\r\n                            <th style={{ textAlign: \"center\" }}>Doctor</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {patientPrescriptionsList.map((f) => (\r\n                        <tbody key={f.id}>\r\n                            <tr key={f.id}>\r\n                                <td style={{ textAlign: \"left\" }} >\r\n                                    {f.medicines !== undefined ? f.medicines.map((m, i) => (\r\n                                        f.medicines.length === i + 1 ? \r\n                                            [medicines, m.name, ''].join('') :\r\n                                        [medicines, m.name, ', '].join('')\r\n                                    )) : medicines = \"Empty\"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"center\" }} > {f.isUsed ? \"Used\" : \"Not used\"}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.comment}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.doctor.firstName + \" \" + f.doctor.secondName}</td >\r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                </table>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n    searchPrescriptions() {\r\n        this.props.simpleSearchPatientPrescriptions(this.state)\r\n    }\r\n\r\n    \r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({ patientPrescriptionsList: state.reducer.patientPrescriptionsList })\r\n\r\nexport default connect(mapStateToProps, { loadedAllPatientPrescriptions, simpleSearchPatientPrescriptions})(PrescriptionsSearchSimpleTable);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\Header.jsx",["382"],"﻿import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <div className=\"wrap\">\r\n                    <div className=\"header-blockquote\">\r\n                        <h1 className=\"header-quote\">{this.props.title}</h1>\r\n                        <div className=\"header-cite\">- {this.props.description}</div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Header);\r\n","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PrescriptionsSearchAdvancedTable.jsx",["383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401"],"﻿import React, { Component } from \"react\"\r\nimport { loadedAllPatientPrescriptions, advancedSearchPatientPrescriptions } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { wrap } from \"module\";\r\nimport { showErrorToastIsUsed, checkIsUsed } from \"../utilities/Utilities\"\r\n\r\n\r\nclass PrescriptionsSearchAdvancedTable extends Component {\r\n    state = {\r\n        medicines: \"\",\r\n        isUsed: \"\",\r\n        comment: \"\",\r\n        doctor: \"\",\r\n        searchFields: [],\r\n        first: \"\",\r\n        firstRole: \"\",\r\n        rest: [],\r\n        restRoles: [],\r\n        forAdding: -1,\r\n        valueForArrays: \"\",\r\n        valueForOperators: \"\",\r\n        logicOperators: [],\r\n        objectToSend: {},\r\n        defaultLogicOperator: \"and\",\r\n        help: [],\r\n        helpOper: [],\r\n        helpRest: [],\r\n        helpForFirst: false\r\n    };\r\n\r\n    addSearchField = (event) => {\r\n        event.preventDefault()\r\n        let searchFields = this.state.searchFields.concat([''])\r\n        let help = this.state.help\r\n        help[this.state.forAdding + 1] = 0\r\n        let helpOper = this.state.helpOper\r\n        helpOper[this.state.forAdding + 1] = 0\r\n        let helpRest = this.state.helpRest\r\n        helpRest[this.state.forAdding + 1] = 0\r\n        this.setState(prevState => {\r\n            return {\r\n                searchFields: searchFields,\r\n                forAdding: prevState.forAdding + 1,\r\n                help: help,\r\n                helpOper: helpOper,\r\n                helpRest: helpRest\r\n            }\r\n        });   \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ? this.setState({\r\n            [name]: checked\r\n        }) : this.setState({\r\n            [name]: value,\r\n            helpForFirst: false,\r\n            first: value\r\n        })\r\n    }\r\n\r\n    handleChangeRole = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ? this.setState({\r\n            [name]: checked\r\n        }) : this.setState({\r\n            [name]: value,\r\n            helpForFirst: true,\r\n            firstRole: value\r\n        })\r\n    }\r\n\r\n    handleLogicOperators = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        let logicOperators = this.state.logicOperators\r\n        logicOperators[this.state.forAdding] = value\r\n        let helpOper = this.state.helpOper\r\n        helpOper[this.state.forAdding] = 1\r\n        this.setState({\r\n            logicOperators: logicOperators,\r\n            helpOper: helpOper,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleArrays = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        let rest = this.state.rest\r\n        rest[this.state.forAdding] = value\r\n        let helpRest = this.state.helpRest\r\n        helpRest[this.state.forAdding] = 1\r\n        this.setState({\r\n            rest: rest,\r\n            helpRest: helpRest,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleArraysRoles = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        let restRoles = this.state.restRoles\r\n        restRoles[this.state.forAdding] = value\r\n        let help = this.state.help\r\n        help[this.state.forAdding] = 1\r\n        this.setState({\r\n            restRoles: restRoles,\r\n            help : help,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.advancedSearchPatientPrescriptions(this.state);\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        if (this.props.patientPrescriptionsList === undefined) {\r\n\r\n            return null;\r\n        }\r\n\r\n        const patientPrescriptionsList = this.props.patientPrescriptionsList;\r\n        let medicines = \"\"\r\n        return (\r\n\r\n\r\n            <div>\r\n                <div className=\"field-wrap\">\r\n                    <td>\r\n                        <select\r\n                            className=\"field\"\r\n                            value={this.state.firstRole}\r\n                            onChange={this.handleChangeRole}\r\n                            name=\"first\"\r\n                       \r\n                        >\r\n                            <option value=\"medicines\">Medicines </option>\r\n                            <option value=\"isUsed\">Used </option>\r\n                            <option value=\"comment\">Comment </option>\r\n                            <option value=\"doctor\">Doctor</option>\r\n                        </select>\r\n                     </td>\r\n                    <td>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            defaultValue={this.state.helpForFirst == true ? this.state.first = \"\" : this.state.first}\r\n                            name={this.state.first}\r\n                            onChange={this.handleChange}\r\n                         />\r\n                    </td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" onClick={this.addSearchField}>Add New Field</button>\r\n                    </td>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    {this.state.searchFields.map((searchFields, index) => (\r\n                        <div className=\"field-wrap\" key={index}>\r\n                            <td>\r\n                                <select\r\n                                    className=\"field\"\r\n                                    defaultValue={this.state.helpOper[index] == 0 ? this.state.logicOperators[index] = \"and\" : this.state.logicOperators[index]}\r\n                                    onChange={this.handleLogicOperators}\r\n                                    name=\"valueForOperators\"\r\n                                    value={this.state.logicOperators[index]}\r\n                                    \r\n                                >                  \r\n                                    <option value=\"and\">And</option>\r\n                                    <option value=\"or\">Or</option> \r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <select\r\n                                    className=\"field\"\r\n                                    defaultValue={this.state.help[index]==0 ? this.state.restRoles[index] = \"medicines\" : this.state.restRoles[index]}\r\n                                    onChange={this.handleArraysRoles}\r\n                                    name=\"valueForArrays\"\r\n                                    value={this.state.restRoles[index]}\r\n                                >\r\n                                    <option value=\"medicines\">Medicines </option>\r\n                                    <option value=\"isUsed\">Used </option>\r\n                                    <option value=\"comment\">Comment </option>\r\n                                    <option value=\"doctor\">Doctor</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                            <input\r\n                                className=\"field\" \r\n                                    type=\"text\"\r\n                                    defaultValue={this.state.helpRest[index] == 0 ? this.state.rest[index] = \"\" : this.state.rest[index]}\r\n                                    name={this.state.rest[index]}\r\n                                    onChange={this.handleArrays}\r\n                                />\r\n                            </td>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"btn-wrap align-right\">\r\n                    <button className=\"btn btn-primary btn-block btn-lg mb-4\" /*disabled={this.state.defaultLogicOperator.length <= this.state.forAdding || this.state.restRoles.length <= this.state.forAdding}*/ onClick={this.searchPrescriptions.bind(this)}>Search</button>\r\n                </div>\r\n\r\n                <table className='table allPrescriptions' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"left\" }}>Medicine</th>\r\n                            <th style={{ textAlign: \"center\" }}>Is Used</th>\r\n                            <th style={{ textAlign: \"center\" }}>Comment</th>\r\n                            <th style={{ textAlign: \"center\" }}>Doctor</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {patientPrescriptionsList.map((f) => (\r\n                        <tbody key={f.id}>\r\n                            <tr key={f.id}>\r\n                                <td style={{ textAlign: \"left\" }} >\r\n                                    {f.medicines !== undefined ? f.medicines.map((m, i) => (\r\n                                        f.medicines.length === i + 1 ?\r\n                                            [medicines, m.name, ''].join('') :\r\n                                            [medicines, m.name, ', '].join('')\r\n                                    )) : medicines = \"Empty\"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"center\" }} > {f.isUsed ? \"Used\" : \"Not used\"}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.comment}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.doctor.firstName + \" \" + f.doctor.secondName}</td >\r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                </table>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n    searchPrescriptions() {\r\n        var flag = 0;\r\n\r\n        if (this.state.firstRole == \"isUsed\") {\r\n            if (this.state.first !== \"\" && !checkIsUsed(this.state.first)) {\r\n                showErrorToastIsUsed()\r\n                flag = 1\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < this.state.restRoles.length; i++) {\r\n            if (this.state.restRoles[i] == \"isUsed\") {\r\n                if (this.state.rest[i] !== \"\" && !checkIsUsed(this.state.rest[i])) {\r\n                    showErrorToastIsUsed()\r\n                    flag = 1\r\n                }\r\n            }\r\n        }\r\n        if (flag == 0) {\r\n            this.props.advancedSearchPatientPrescriptions({ firstRole: this.state.firstRole, first: this.state.first, restRoles: this.state.restRoles, rest: this.state.rest, logicOperators: this.state.logicOperators })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({ patientPrescriptionsList: state.reducer.patientPrescriptionsList })\r\n\r\nexport default connect(mapStateToProps, { loadedAllPatientPrescriptions, advancedSearchPatientPrescriptions })(PrescriptionsSearchAdvancedTable);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\CreateSurveyForm.jsx",["402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498"],"﻿import React, { Component } from \"react\"\r\nimport { surveyCreated, loadedAppointmentSurvey } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"../css/app.css\"\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass CreateSurveyForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(this.props)\r\n    }\r\n    state = { \r\n        \r\n        patientId: 2,\r\n        appointmentId:0,\r\n        doctorsProfessionalism: 1,\r\n        doctorsPoliteness: 1,\r\n        doctorsTechnicality: 1,\r\n        doctorsSkill: 1,\r\n        doctorsKnowledge: 1,\r\n        doctorsWorkingPace: 1,\r\n        medicalStaffsProfessionalism: 1,\r\n        medicalStaffsPoliteness: 1,\r\n        medicalStaffsTechnicality: 1,\r\n        medicalStaffsSkill: 1,\r\n        medicalStaffsKnowledge: 1,\r\n        medicalStaffsWorkingPace: 1,\r\n        hospitalEnvironment: 1,\r\n        hospitalEquipment: 1,\r\n        hospitalHygiene: 1,\r\n        hospitalPrices: 1,\r\n        hospitalWaitingTime: 1,\r\n        modalShow: this.props.show\r\n        \r\n    };\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.loadedAppointmentSurvey();\r\n\r\n\r\n    }\r\n\r\n \r\n\r\n    handleChange = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ? this.setState({\r\n            [name]: checked\r\n        }) : this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    handleChange2 = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        const appointmentSurveyList = this.props.appointmentSurveyList;\r\n        const appointment = appointmentSurveyList.filter(entry => Object.values(entry).some(val => val == value));\r\n        //alert(appointment[0].id)\r\n        type === \"checkbox\" ? this.setState({\r\n            [name]: checked\r\n        }) : this.setState({\r\n            [name]: value\r\n            //appointmentId: appointment.id\r\n        })\r\n        //alert(this.state.doctorId)\r\n    }\r\n\r\n\r\n    render() {\r\n        debugger;       \r\n        if (this.props.appointment === undefined) {\r\n\r\n            return null;\r\n        }\r\n        if (this.props.appointmentSurveyList === undefined) {\r\n\r\n            return null;\r\n        }\r\n        const appointmentSurveyList = this.props.appointmentSurveyList;\r\n\r\n        return (\r\n                <Modal isOpen={this.state.modalShow} centered={true}>\r\n                <ModalHeader toggle={this.toggle.bind(this)}> </ModalHeader>\r\n                    <ModalBody>\r\n\r\n                    <input\r\n                        className=\"field\"\r\n                        type=\"text\"\r\n                        defaultValue={this.state.appointmentId = this.props.appointment.id}\r\n                        name={this.state.appointmentId}\r\n                        hidden={true}\r\n                    />\r\n                    <input\r\n                        className=\"field\"\r\n                        type=\"text\"\r\n                        defaultValue={this.state.patientId = this.props.appointment.patientUserId}\r\n                        name={this.state.patientId}\r\n                        hidden={true}\r\n                    />   \r\n                \r\n                                <h2 className=\"label\"></h2>\r\n                                <h2 className=\"label\">RATE DOCTORS: </h2>\r\n                                <div className=\"field-wrap\">\r\n                                <label className=\"label\">Doctor: {this.props.appointment.doctor.firstName + ' ' + this.props.appointment.doctor.secondName} </label>\r\n                                \r\n\r\n                                </div>    \r\n\r\n                    \r\n\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Doctor Professionalism:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"doctorsProfessionalism\"\r\n                                            checked={this.state.doctorsProfessionalism == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"doctorsProfessionalism\"\r\n                                            checked={this.state.doctorsProfessionalism == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"doctorsProfessionalism\"\r\n                                            checked={this.state.doctorsProfessionalism == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"doctorsProfessionalism\"\r\n                                            checked={this.state.doctorsProfessionalism == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"doctorsProfessionalism\"\r\n                                            checked={this.state.doctorsProfessionalism == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Doctor Politeness:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"doctorsPoliteness\"\r\n                                            checked={this.state.doctorsPoliteness == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"doctorsPoliteness\"\r\n                                            checked={this.state.doctorsPoliteness == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"doctorsPoliteness\"\r\n                                            checked={this.state.doctorsPoliteness == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"doctorsPoliteness\"\r\n                                            checked={this.state.doctorsPoliteness == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"doctorsPoliteness\"\r\n                                            checked={this.state.doctorsPoliteness == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Doctor Technicality:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"doctorsTechnicality\"\r\n                                            checked={this.state.doctorsTechnicality == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"doctorsTechnicality\"\r\n                                            checked={this.state.doctorsTechnicality == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"doctorsTechnicality\"\r\n                                            checked={this.state.doctorsTechnicality == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"doctorsTechnicality\"\r\n                                            checked={this.state.doctorsTechnicality == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"doctorsTechnicality\"\r\n                                            checked={this.state.doctorsTechnicality == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Doctor Skill:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"doctorsSkill\"\r\n                                            checked={this.state.doctorsSkill == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"doctorsSkill\"\r\n                                            checked={this.state.doctorsSkill == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"doctorsSkill\"\r\n                                            checked={this.state.doctorsSkill == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"doctorsSkill\"\r\n                                            checked={this.state.doctorsSkill == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"doctorsSkill\"\r\n                                            checked={this.state.doctorsSkill == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n                                      \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Doctor Knowledge:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"doctorsKnowledge\"\r\n                                            checked={this.state.doctorsKnowledge == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"doctorsKnowledge\"\r\n                                            checked={this.state.doctorsKnowledge == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"doctorsKnowledge\"\r\n                                            checked={this.state.doctorsKnowledge == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"doctorsKnowledge\"\r\n                                            checked={this.state.doctorsKnowledge == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"doctorsKnowledge\"\r\n                                            checked={this.state.doctorsKnowledge == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Doctor Working Pace:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"doctorsWorkingPace\"\r\n                                            checked={this.state.doctorsWorkingPace == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"doctorsWorkingPace\"\r\n                                            checked={this.state.doctorsWorkingPace == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"doctorsWorkingPace\"\r\n                                            checked={this.state.doctorsWorkingPace == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"doctorsWorkingPace\"\r\n                                            checked={this.state.doctorsWorkingPace == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"doctorsWorkingPace\"\r\n                                            checked={this.state.doctorsWorkingPace == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n                   \r\n                                <h2 className=\"label\"></h2>\r\n                                <h2 className=\"label\">RATE OUR WORKING STAFF: </h2>\r\n\r\n\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Medical Staffs Professionalism:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"medicalStaffsProfessionalism\"\r\n                                            checked={this.state.medicalStaffsProfessionalism == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"medicalStaffsProfessionalism\"\r\n                                            checked={this.state.medicalStaffsProfessionalism == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"medicalStaffsProfessionalism\"\r\n                                            checked={this.state.medicalStaffsProfessionalism == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"medicalStaffsProfessionalism\"\r\n                                            checked={this.state.medicalStaffsProfessionalism == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"medicalStaffsProfessionalism\"\r\n                                            checked={this.state.medicalStaffsProfessionalism == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Medical Staff Politeness:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"medicalStaffsPoliteness\"\r\n                                            checked={this.state.medicalStaffsPoliteness == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"medicalStaffsPoliteness\"\r\n                                            checked={this.state.medicalStaffsPoliteness == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"medicalStaffsPoliteness\"\r\n                                            checked={this.state.medicalStaffsPoliteness == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"medicalStaffsPoliteness\"\r\n                                            checked={this.state.medicalStaffsPoliteness == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"medicalStaffsPoliteness\"\r\n                                            checked={this.state.medicalStaffsPoliteness == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Medical Staffs Technicality:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"medicalStaffsTechnicality\"\r\n                                            checked={this.state.medicalStaffsTechnicality == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"medicalStaffsTechnicality\"\r\n                                            checked={this.state.medicalStaffsTechnicality == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"medicalStaffsTechnicality\"\r\n                                            checked={this.state.medicalStaffsTechnicality == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"medicalStaffsTechnicality\"\r\n                                            checked={this.state.medicalStaffsTechnicality == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"medicalStaffsTechnicality\"\r\n                                            checked={this.state.medicalStaffsTechnicality == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Medical Staffs Skill:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"medicalStaffsSkill\"\r\n                                            checked={this.state.medicalStaffsSkill == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"medicalStaffsSkill\"\r\n                                            checked={this.state.medicalStaffsSkill == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"medicalStaffsSkill\"\r\n                                            checked={this.state.medicalStaffsSkill == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"medicalStaffsSkill\"\r\n                                            checked={this.state.medicalStaffsSkill == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"medicalStaffsSkill\"\r\n                                            checked={this.state.medicalStaffsSkill == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n                   \r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Medical Staffs Knowledge:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"medicalStaffsKnowledge\"\r\n                                            checked={this.state.medicalStaffsKnowledge == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"medicalStaffsKnowledge\"\r\n                                            checked={this.state.medicalStaffsKnowledge == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"medicalStaffsKnowledge\"\r\n                                            checked={this.state.medicalStaffsKnowledge == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"medicalStaffsKnowledge\"\r\n                                            checked={this.state.medicalStaffsKnowledge == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"medicalStaffsKnowledge\"\r\n                                            checked={this.state.medicalStaffsKnowledge == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n                   \r\n\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Medical Staffs Working Pace:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"medicalStaffsWorkingPace\"\r\n                                            checked={this.state.medicalStaffsWorkingPace == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"medicalStaffsWorkingPace\"\r\n                                            checked={this.state.medicalStaffsWorkingPace == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"medicalStaffsWorkingPace\"\r\n                                            checked={this.state.medicalStaffsWorkingPace == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"medicalStaffsWorkingPace\"\r\n                                            checked={this.state.medicalStaffsWorkingPace == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"medicalStaffsWorkingPace\"\r\n                                            checked={this.state.medicalStaffsWorkingPace == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n                   \r\n\r\n                    \r\n                   \r\n\r\n                                <h2 className=\"label\"></h2>\r\n                                <h2 className=\"label\">RATE OUR HOSPITAL IN GENERAL: </h2>\r\n\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Hospital Enviroment:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"hospitalEnvironment\"\r\n                                            checked={this.state.hospitalEnvironment == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"hospitalEnvironment\"\r\n                                            checked={this.state.hospitalEnvironment == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"hospitalEnvironment\"\r\n                                            checked={this.state.hospitalEnvironment == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"hospitalEnvironment\"\r\n                                            checked={this.state.hospitalEnvironment == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"hospitalEnvironment\"\r\n                                            checked={this.state.hospitalEnvironment == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n                   \r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Hospital Equipment:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"hospitalEquipment\"\r\n                                            checked={this.state.hospitalEquipment == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"hospitalEquipment\"\r\n                                            checked={this.state.hospitalEquipment == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"hospitalEquipment\"\r\n                                            checked={this.state.hospitalEquipment == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"hospitalEquipment\"\r\n                                            checked={this.state.hospitalEquipment == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"hospitalEquipment\"\r\n                                            checked={this.state.hospitalEquipment == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n                    \r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Hospital Hygiene:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"hospitalHygiene\"\r\n                                            checked={this.state.hospitalHygiene == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"hospitalHygiene\"\r\n                                            checked={this.state.hospitalHygiene == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"hospitalHygiene\"\r\n                                            checked={this.state.hospitalHygiene == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"hospitalHygiene\"\r\n                                            checked={this.state.hospitalHygiene == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"hospitalHygiene\"\r\n                                            checked={this.state.hospitalHygiene == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n                  \r\n\r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        Hospital Prices:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"hospitalPrices\"\r\n                                            checked={this.state.hospitalPrices == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"hospitalPrices\"\r\n                                            checked={this.state.hospitalPrices == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"hospitalPrices\"\r\n                                            checked={this.state.hospitalPrices == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"hospitalPrices\"\r\n                                            checked={this.state.hospitalPrices == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"hospitalPrices\"\r\n                                            checked={this.state.hospitalPrices == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n                   \r\n\r\n                                <div className=\"field-wrap\">\r\n                                    <label className=\"label\" htmlFor=\"\">\r\n                                        How long did u wait:\r\n                                    </label>\r\n                                    <label>\r\n                                        1\r\n                                        <input type=\"radio\"\r\n                                            value=\"1\"\r\n                                            name=\"hospitalWaitingTime\"\r\n                                            checked={this.state.hospitalWaitingTime == 1}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        2\r\n                                        <input type=\"radio\"\r\n                                            value=\"2\"\r\n                                            name=\"hospitalWaitingTime\"\r\n                                            checked={this.state.hospitalWaitingTime == 2}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        3\r\n                                        <input type=\"radio\"\r\n                                            value=\"3\"\r\n                                            name=\"hospitalWaitingTime\"\r\n                                            checked={this.state.hospitalWaitingTime == 3}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        4\r\n                                        <input type=\"radio\"\r\n                                            value=\"4\"\r\n                                            name=\"hospitalWaitingTime\"\r\n                                            checked={this.state.hospitalWaitingTime == 4}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                    <label>\r\n                                        5\r\n                                        <input type=\"radio\"\r\n                                            value=\"5\"\r\n                                            name=\"hospitalWaitingTime\"\r\n                                            checked={this.state.hospitalWaitingTime == 5}\r\n                                            onChange={this.handleChange} />\r\n                                    </label>\r\n                                </div>\r\n                    </ModalBody>\r\n                    \r\n                    <ModalFooter>\r\n                                <div className=\"btn-wrap align-right\">\r\n                                    <button disabled={this.state.appointmentId==0} className=\"btn btn-primary\" onClick={this.createSurvey.bind(this)}>Create</button>\r\n                                </div>\r\n                    </ModalFooter>\r\n                \r\n                            \r\n                </Modal>\r\n        )\r\n\r\n    }\r\n    toggle() {\r\n        this.setState({ modalShow: false });\r\n        this.props.onShowChange();\r\n    }\r\n    createSurvey() {\r\n        toast.configure();\r\n\r\n        toast.success(\"Survey successfully created!\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n        \r\n        \r\n        this.setState({ modalShow: false });\r\n        this.props.onShowChange();\r\n        this.props.surveyCreated({ patientId: this.state.patientId, appointmentId: this.state.appointmentId, doctorsProfessionalism: this.state.doctorsProfessionalism, doctorsPoliteness: this.state.doctorsPoliteness, doctorsTechnicality: this.state.doctorsTechnicality, doctorsSkill: this.state.doctorsSkill, doctorsKnowledge: this.state.doctorsKnowledge, doctorsWorkingPace: this.state.doctorsWorkingPace, medicalStaffsProfessionalism: this.state.medicalStaffsProfessionalism, medicalStaffsPoliteness: this.state.medicalStaffsPoliteness, medicalStaffsTechnicality: this.state.medicalStaffsTechnicality, medicalStaffsSkill: this.state.medicalStaffsSkill, medicalStaffsKnowledge: this.state.medicalStaffsKnowledge, medicalStaffsWorkingPace: this.state.medicalStaffsWorkingPace, hospitalEnvironment: this.state.hospitalEnvironment, hospitalEquipment: this.state.hospitalEquipment, hospitalHygiene: this.state.hospitalHygiene, hospitalPrices: this.state.hospitalPrices, hospitalWaitingTime: this.state.hospitalWaitingTime })     \r\n        window.location.href = \"http://localhost:60198/my-appointments\";\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => \r\n    ({ appointmentSurveyList: state.reducer.appointmentSurveyList })\r\n\r\nexport default connect(mapStateToProps, { surveyCreated, loadedAppointmentSurvey})(CreateSurveyForm);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\CheckPersonalInformationTable.jsx",["499","500","501"],"﻿import React, { Component } from \"react\"\r\nimport { findOnePatient } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { wrap } from \"module\";\r\n\r\nclass CheckPersonalInformationTable extends Component {\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.findOnePatient(3);\r\n    }\r\n    render() {\r\n        debugger;\r\n        if (this.props.patientInformationList === undefined) {\r\n\r\n            return null;\r\n        }\r\n\r\n        const patientInformationList = this.props.patientInformationList;\r\n        return (\r\n\r\n            <div>\r\n                <table className='table patientInformation' >\r\n                    <tbody>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\", width: \"700px\", marginTop: \"100px\" }}></th>\r\n                            <td>\r\n                                <img src={'images/' + patientInformationList.file} width={200} height={150}  />\r\n\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\", width: \"700px\" }}>Name:</th>\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.firstName}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }} > Surname:</th >\r\n                            <td style={{ textAlign: \"justify\", }}>{patientInformationList.secondName}</td >\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }}>Unique Citizens Identity Number:</th>\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.uniqueCitizensidentityNumber}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }} > Date of Birth:</th >\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.dateOfBirth}</td >\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }} >Parent's name:</th >\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.parentName}</td >\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }} >Phone number:</th >\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.phoneNumber}</td >\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\", width: \"700px\" }}>Email:</th>\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.email}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }}>Medical Number:</th>\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.medicalIdNumber}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }} > Address:</th >\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.city}</td >\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }} > Known allergies:</th >\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.allergie}</td >\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }} >Phone number:</th >\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.phoneNumber}</td >\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }} >Gender:</th >\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.gender}</td >\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }} > Place of birth:</th >\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.bornIn}</td >\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }} >Is married:</th >\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.isMarried ? \"MARRIED\" : \"NOT MARRIED\"}</td >\r\n                        </tr>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }} >Maiden name:</th >\r\n                            <td style={{ textAlign: \"justify\" }}>{patientInformationList.exLastname}</td >\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n                </table>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({ patientInformationList: state.reducer.patientInformationList })\r\n\r\nexport default connect(mapStateToProps, { findOnePatient })(CheckPersonalInformationTable);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\DoctorsRatingTable.jsx",["502","503"],"﻿import React, { Component } from \"react\"\r\nimport { loadedAllDoctorRates } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { formatDate } from \"../utilities/Utilities\"\r\n\r\nclass DoctorsRatingTable extends Component {\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.loadedAllDoctorRates();\r\n    }\r\n    render() {\r\n        debugger;\r\n        if (this.props.doctorRatesList === undefined) {\r\n\r\n            return null;\r\n        }\r\n        const doctorRatesList = this.props.doctorRatesList;\r\n        return (\r\n\r\n            <div className=\"wrap\">\r\n                {doctorRatesList.map((f) => (\r\n                    <div key={f.doctor.Id} className=\"item-row\">\r\n                        <div key={f.doctor.Id} className=\"check-flag\">\r\n                            <span className=\"small-text-label\">Name and Surname</span>\r\n                            <span className=\"small-text-label hours\">{'Average rate: ' + f.doctorAverage.toFixed(2) + ' / 5'}</span>\r\n                            <span className=\"check-flag-label\">{f.doctor.firstName + ' ' +  f.doctor.secondName}</span>\r\n                            <textarea style={{ height: \"230px\" }} className=\"check-flag-textarea\" disabled rows={3} value={'Knowledge: ' + f.doctorsKnowledgeAverage.toFixed(2) + '\\nProfessionalism: ' + f.doctorsProfessionalismAverage.toFixed(2) + '\\nPolitness: ' + f.doctorsPolitenessAverage.toFixed(2) + '\\nTechnicality: ' + f.doctorsTechnicalityAverage.toFixed(2) + '\\nSkill: ' + f.doctorsSkillAverage.toFixed(2) + '\\nWorking Pace: ' + f.doctorsWorkingPaceAverage.toFixed(2)}></textarea>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({ doctorRatesList: state.reducer.doctorRatesList })\r\n\r\nexport default connect(mapStateToProps, { loadedAllDoctorRates })(DoctorsRatingTable);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AppointmentMenu.jsx",["504","505","506","507","508","509","510","511","512"],"﻿import React, { Component } from \"react\"\r\nimport { loadedAllPatientReports, simpleSearchAppointments } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { wrap } from \"module\";\r\nimport axios from \"axios\";\r\nimport RecommendedAppointmentScheduling from \"./RecommendedAppointmentScheduling\"\r\nimport ScheduleRegularAppointmentModal from './ScheduleRegularAppointmentModal';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { showErrorToast, checkDateFormat } from \"../utilities/Utilities\"\r\n\r\nclass AppointmentMenu extends Component {\r\n    state = {\r\n        modalShowRecommended: false,\r\n        modalShow: false\r\n    };\r\n\r\n    render() {\r\n        debugger;\r\n        return (\r\n            <div>\r\n                {this.state.modalShowRecommended ? <RecommendedAppointmentScheduling show={this.state.modalShowRecommended} onShowChange={this.displayModalRecommended.bind(this)} /> : null}\r\n                                {this.state.modalShow ? <ScheduleRegularAppointmentModal show={this.state.modalShow} onShowChange={this.displayModal.bind(this)} /> : null}\r\n                <button onClick={() => { this.displayModal() }} className=\"btn-primary btn-lg btn-block mt-5\">Schedule regular appointment</button>\r\n                <label className=\"label justify-content-center align-items-center text-center mt-3 mb-3\"> - OR - </label>\r\n                <button onClick={() => { this.displayModalRecommended() }} className=\"btn-primary btn-lg  btn-block\">Schedule recommended appointment</button>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n\r\n    }\r\n\r\n    displayModalRecommended() {\r\n        debugger;\r\n        this.setState({ modalShowRecommended: !this.state.modalShowRecommended })\r\n    }\r\n\r\n    displayModal() {\r\n        debugger;\r\n        console.log()\r\n        this.setState({ modalShow: !this.state.modalShow })\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(AppointmentMenu);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\ScheduleAppointmentBody.jsx",["513","514","515","516","517","518","519"],"﻿import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { wrap } from \"module\";\r\nimport axios from \"axios\";\r\nimport ScheduleRegularAppointmentModal from './ScheduleRegularAppointmentModal';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { showErrorToast, checkDateFormat } from \"../utilities/Utilities\"\r\n\r\nclass ScheduleAppointmentBody extends Component {\r\n    state = {\r\n        modalShow: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        debugger;\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ? this.setState({\r\n            [name]: checked\r\n        }) : this.setState({\r\n            [name]: value\r\n        })\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        return (\r\n            <div>\r\n                {this.state.modalShow ? <ScheduleRegularAppointmentModal show={this.state.modalShow} onShowChange={this.displayModal.bind(this)} /> : null}\r\n                <button onClick={() => { this.displayModal() }} className=\"btn-primary btn-lg\">Schedule regular appointment</button>\r\n            </div>\r\n\r\n\r\n        );\r\n\r\n    }\r\n\r\n    displayModal() {\r\n        debugger;\r\n        console.log()\r\n        this.setState({ modalShow: !this.state.modalShow })\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({})\r\n\r\nexport default connect(mapStateToProps)(ScheduleAppointmentBody);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AllPatientsAppointmentsTable.jsx",["520","521","522","523","524","525","526","527"],"﻿import React, { Component } from \"react\"\r\nimport { loadedAllPatientAppointmentsWithSurvey, loadedAllPatientAppointmentsWithoutSurvey, loadedAllPatientAppointmentsInTwoDays, loadedAllPatientAppointmentsInFuture, cancelAppointment } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { wrap } from \"module\";\r\nimport axios from \"axios\";\r\nimport CancelAppointmentButton from \"./CancelAppointmentButton\";\r\nimport ReferralModal from \"./ReferralModal\"\r\nimport CreateSurveyForm from \"./CreateSurveyForm\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { showErrorToast, checkDateFormat } from \"../utilities/Utilities\"\r\n\r\nclass AllPatientsAppointmentsTable extends Component {\r\n    state = {   \r\n        modalShow: false,\r\n        modalSurveyShow: false,\r\n        appointmentToSend: null\r\n    };\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.loadedAllPatientAppointmentsWithSurvey();\r\n        this.props.loadedAllPatientAppointmentsWithoutSurvey();\r\n        this.props.loadedAllPatientAppointmentsInTwoDays();\r\n        this.props.loadedAllPatientAppointmentsInFuture();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.patientAppointmentsWithSurveys === undefined) {\r\n\r\n            return null;\r\n        }\r\n        if (this.props.patientAppointmentsWithoutSurveys === undefined) {\r\n\r\n            return null;\r\n        }\r\n        if (this.props.patientAppointmentsInTwoDaysList === undefined) {\r\n\r\n            return null;\r\n        }\r\n        if (this.props.patientAppointmentsInFutureList === undefined) {\r\n\r\n            return null;\r\n        }\r\n\r\n        const patientAppointmentsWithSurveys = this.props.patientAppointmentsWithSurveys;\r\n        const patientAppointmentsWithoutSurveys = this.props.patientAppointmentsWithoutSurveys;\r\n        const patientAppointmentsInTwoDaysList = this.props.patientAppointmentsInTwoDaysList;\r\n        const patientAppointmentsInFutureList = this.props.patientAppointmentsInFutureList;\r\n        debugger;\r\n        return (\r\n            <div>\r\n                {this.state.modalShow ? <ReferralModal show={this.state.modalShow} referral={this.state.Referral} date={this.state.Date} onShowChange={this.displayModal.bind(this)} /> : null}\r\n                {this.state.modalSurveyShow ? <CreateSurveyForm show={this.state.modalSurveyShow} appointment={this.state.appointmentToSend}  onShowChange={this.fillSurvey.bind(this)} /> : null}\r\n                <table className='table allAppointments' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"left\" }}>Doctor</th>\r\n                            <th style={{ textAlign: \"center\" }}>Type</th>\r\n                            <th style={{ textAlign: \"center\" }}>Date</th>\r\n                            <th style={{ textAlign: \"center\" }}>Time</th>\r\n                            <th style={{ textAlign: \"center\" }}></th>\r\n                            <th style={{ textAlign: \"center\" }}></th>\r\n                        </tr>\r\n                    </thead>\r\n                    {patientAppointmentsWithSurveys.map((f) => (\r\n                        <tbody key={f.id}>\r\n                            <tr key={f.id}>\r\n                                <td style={{ textAlign: \"left\" }} >{f.doctor == null ? \"\" : f.doctor.firstName + ' ' + f.doctor.secondName}</td>\r\n                                <td style={{ textAlign: \"center\" }} > {this.checkType(f)}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.date}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.start}</td >\r\n                                <td style={{ textAlign: \"right\" }}><button disabled={f.referral.length == 0} onClick={() => { this.displayModal(f) }} className=\"btn btn-primary\">Details</button></td >\r\n                                <td style={{ textAlign: \"right\" }}><button onClick={() => this.fillSurvey(f)} className=\"btn btn-primary\">Fill Survey</button></td >\r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                    {patientAppointmentsWithoutSurveys.map((f) => (\r\n                        <tbody key={f.id}>\r\n                            <tr key={f.id}>\r\n                                <td style={{ textAlign: \"left\" }} >{f.doctor == null ? \"\" :f.doctor.firstName + ' ' + f.doctor.secondName}</td>\r\n                                <td style={{ textAlign: \"center\" }} > {this.checkType(f)}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.date}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.start}</td >\r\n                                <td style={{ textAlign: \"right\" }}><button disabled={f.referral.length == 0} onClick={() => { this.displayModal(f) }} className=\"btn btn-primary\">Details</button></td >\r\n                                <td style={{ textAlign: \"right\" }}><button disabled={true} className=\"btn btn-primary\">Fill Survey</button></td >\r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                    {patientAppointmentsInTwoDaysList.map((f) => (\r\n                        <tbody key={f.id}>\r\n                            <tr key={f.id}>                               \r\n                                <td style={{ textAlign: \"left\" }} >{f.doctor == null ? \"\" :f.doctor.firstName + ' ' + f.doctor.secondName}</td>\r\n                                <td style={{ textAlign: \"center\" }} > {this.checkType(f)}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.date}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.start}</td >\r\n                                <td style={{ textAlign: \"right\" }}><button disabled={true} className=\"btn btn-primary\">Cancel</button></td >\r\n                                <td style={{ textAlign: \"right\" }}><button disabled={true} className=\"btn btn-primary\">Fill Survey</button></td >\r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                    {patientAppointmentsInFutureList.map((f) => (\r\n                        <tbody key={f.id}>\r\n                            <tr key={f.id}>\r\n                                <td style={{ textAlign: \"left\" }} >{f.doctor == null ? \"\" :f.doctor.firstName + ' ' + f.doctor.secondName}</td>\r\n                                <td style={{ textAlign: \"center\" }} > {this.checkType(f)}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.date}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.start}</td >\r\n                                <td style={{ textAlign: \"right\" }}><CancelAppointmentButton appointment={f}> </CancelAppointmentButton></td >\r\n                                <td style={{ textAlign: \"right\" }}><button disabled={true} className=\"btn btn-primary\">Fill Survey</button></td >\r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                </table>\r\n                <div>\r\n                    {this.state.modalSurveyShow ? <CreateSurveyForm show={this.state.modalSurveyShow} appointmentToSend={this.state.appointmentToSend} onShowChange={this.fillSurvey.bind(this)} /> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    fillSurvey(f) {\r\n        this.setState({ modalSurveyShow: !this.state.modalSurveyShow })\r\n        if (f === undefined) {\r\n            return;\r\n        }  \r\n        this.setState({ appointmentToSend: f})\r\n    }\r\n\r\n    displayModal(f) {\r\n        debugger;\r\n        console.log(f)\r\n        this.setState({ modalShow: !this.state.modalShow })\r\n        if (f === undefined) {\r\n            return;\r\n        }\r\n        else if (typeof f.referral !== 'undefined') {\r\n            this.setState({ Referral: f.referral[0], Date: f.date })\r\n        }\r\n        else if (typeof f.operationReferral !== 'undefined') {\r\n            this.setState({ Referral: f.operationReferral, Date: f.date })\r\n        }\r\n    }\r\n\r\n    checkType(f) {\r\n        debugger;\r\n        console.log(typeof f.operationReferral);\r\n        let type = typeof f.operationReferral\r\n        console.log(type !== 'undefined');\r\n        if (typeof f.operationReferral !== 'undefined') {\r\n            return \"Operation\"\r\n        }\r\n        else {\r\n            return \"Appointment\"\r\n        }\r\n    }\r\n\r\n    cancelApp=(appointment) => {\r\n        toast.configure();\r\n\r\n        toast.success(\"Appointment successfully cancelled!\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n\r\n        this.props.cancelAppointment(appointment)\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({ patientAppointmentsWithSurveys: state.reducer.patientAppointmentsWithSurveys, patientAppointmentsWithoutSurveys: state.reducer.patientAppointmentsWithoutSurveys, patientAppointmentsInTwoDaysList: state.reducer.patientAppointmentsInTwoDaysList, patientAppointmentsInFutureList: state.reducer.patientAppointmentsInFutureList })\r\n\r\nexport default connect(mapStateToProps, { loadedAllPatientAppointmentsWithSurvey, loadedAllPatientAppointmentsWithoutSurvey, loadedAllPatientAppointmentsInTwoDays, loadedAllPatientAppointmentsInFuture, cancelAppointment })(AllPatientsAppointmentsTable);\r\n\r\n","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AppointmentsSearchAdvancedTable.jsx",["528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547"],"﻿import React, { Component } from \"react\"\r\nimport { loadedAllPatientAppointments, advancedSearchPatientAppointments } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { wrap } from \"module\";\r\nimport { showErrorToast, checkDateFormat } from \"../utilities/Utilities\"\r\n\r\n\r\nclass AppointmentsSearchAdvancedTable extends Component {\r\n    state = {\r\n        doctor: \"\",\r\n        date: \"\",\r\n        room: \"\",\r\n        searchFields: [],\r\n        first: \"\",\r\n        firstRole: \"\",\r\n        rest: [],\r\n        restRoles: [],\r\n        forAdding: -1,\r\n        valueForArrays: \"\",\r\n        valueForOperators: \"\",\r\n        logicOperators: [],\r\n        objectToSend: {},\r\n        defaultLogicOperator: \"and\",\r\n        help: [],\r\n        helpOper: [],\r\n        helpRest: [],\r\n        helpForFirst: false\r\n    };\r\n\r\n    addSearchField = (event) => {\r\n        event.preventDefault()\r\n        let searchFields = this.state.searchFields.concat([''])\r\n        let help = this.state.help\r\n        help[this.state.forAdding + 1] = 0\r\n        let helpOper = this.state.helpOper\r\n        helpOper[this.state.forAdding + 1] = 0\r\n        let helpRest = this.state.helpRest\r\n        helpRest[this.state.forAdding + 1] = 0\r\n        this.setState(prevState => {\r\n            return {\r\n                searchFields: searchFields,\r\n                forAdding: prevState.forAdding + 1,\r\n                help: help,\r\n                helpOper: helpOper,\r\n                helpRest: helpRest\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ? this.setState({\r\n            [name]: checked\r\n        }) : this.setState({\r\n            [name]: value,\r\n            helpForFirst: false,\r\n            first: value\r\n        })\r\n    }\r\n\r\n    handleChangeRole = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ? this.setState({\r\n            [name]: checked\r\n        }) : this.setState({\r\n            [name]: value,\r\n            helpForFirst: true,\r\n            firstRole: value\r\n        })\r\n    }\r\n\r\n    handleLogicOperators = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        let logicOperators = this.state.logicOperators\r\n        logicOperators[this.state.forAdding] = value\r\n        let helpOper = this.state.helpOper\r\n        helpOper[this.state.forAdding] = 1\r\n        this.setState({\r\n            logicOperators: logicOperators,\r\n            helpOper: helpOper,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleArrays = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        let rest = this.state.rest\r\n        rest[this.state.forAdding] = value\r\n        let helpRest = this.state.helpRest\r\n        helpRest[this.state.forAdding] = 1\r\n        this.setState({\r\n            rest: rest,\r\n            helpRest: helpRest,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleArraysRoles = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        let restRoles = this.state.restRoles\r\n        restRoles[this.state.forAdding] = value\r\n        let help = this.state.help\r\n        help[this.state.forAdding] = 1\r\n        this.setState({\r\n            restRoles: restRoles,\r\n            help: help,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.advancedSearchPatientAppointments(this.state);;\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        if (this.props.patientAppointmentsList === undefined) {\r\n\r\n            return null;\r\n        }\r\n\r\n        const patientAppointmentsList = this.props.patientAppointmentsList;\r\n        let doctor = \"\"\r\n        return (\r\n\r\n\r\n            <div>\r\n                <div className=\"field-wrap\">\r\n                    <td>\r\n                        <select\r\n                            className=\"field\"\r\n                            value={this.state.firstRole}\r\n                            onChange={this.handleChangeRole}\r\n                            name=\"first\"\r\n\r\n                        >\r\n                            <option value=\"doctor\">Doctor </option>\r\n                            <option value=\"date\">Date </option>\r\n                            <option value=\"room\">Room </option>\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        <input\r\n                            className=\"field\"\r\n                            type=\"text\"\r\n                            defaultValue={this.state.helpForFirst == true ? this.state.first = \"\" : this.state.first}\r\n                            name={this.state.first}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </td>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    {this.state.searchFields.map((searchFields, index) => (\r\n                        <div className=\"field-wrap\" key={index}>\r\n                            <td>\r\n                                <select\r\n                                    className=\"field\"\r\n                                    defaultValue={this.state.helpOper[index] == 0 ? this.state.logicOperators[index] = \"and\" : this.state.logicOperators[index]}\r\n                                    onChange={this.handleLogicOperators}\r\n                                    name=\"valueForOperators\"\r\n                                    value={this.state.logicOperators[index]}\r\n\r\n                                >\r\n                                    <option value=\"and\">And</option>\r\n                                    <option value=\"or\">Or</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <select\r\n                                    className=\"field\"\r\n                                    defaultValue={this.state.help[index] == 0 ? this.state.restRoles[index] = \"doctor\" : this.state.restRoles[index]}\r\n                                    onChange={this.handleArraysRoles}\r\n                                    name=\"valueForArrays\"\r\n                                    value={this.state.restRoles[index]}\r\n                                >\r\n                                    <option value=\"doctor\">Doctor </option>\r\n                                    <option value=\"date\">Date </option>\r\n                                    <option value=\"room\">Room </option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <input\r\n                                    className=\"field\"\r\n                                    type=\"text\"\r\n                                    defaultValue={this.state.helpRest[index] == 0 ? this.state.rest[index] = \"\" : this.state.rest[index]}\r\n                                    name={this.state.rest[index]}\r\n                                    onChange={this.handleArrays}\r\n                                />\r\n                            </td>\r\n                        </div>\r\n                    ))}\r\n                    <button className=\"btn btn-primary\" onClick={this.addSearchField}>Add New Field</button>\r\n                </div>\r\n\r\n                <div className=\"btn-wrap align-right\">\r\n                    <button className=\"btn btn-primary\" /*disabled={this.state.defaultLogicOperator.length <= this.state.forAdding || this.state.restRoles.length <= this.state.forAdding}*/ onClick={this.searchAppointments.bind(this)}>Search</button>\r\n                </div>\r\n\r\n                <table className='table allAppointments' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"left\" }}>Doctor</th>\r\n                            <th style={{ textAlign: \"center\" }}>Date</th>\r\n                            <th style={{ textAlign: \"center\" }}>Room</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {patientAppointmentsList.map((f) => (\r\n                        <tbody key={f.id}>\r\n                            <tr key={f.id}>\r\n                                <td style={{ textAlign: \"left\" }} >\r\n                                    {f.doctor.firstName + \" \" + f.doctor.secondName}\r\n                                </td>\r\n                                <td style={{ textAlign: \"center\" }} > {f.date}</td >\r\n                                <td style={{ textAlign: \"center\" }}>{f.roomId}</td >\r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                </table>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n    searchAppointments() {\r\n        debugger;\r\n        var flag = 0;\r\n        var i;\r\n        if (this.state.firstRole == \"date\" && this.state.first !== \"\" && checkDateFormat(this.state.first)) {\r\n            showErrorToast()\r\n            flag = 1\r\n        }\r\n        for (i = 0; i < this.state.restRoles.lenght; i++) {\r\n            if (this.state.restRoles[i] == \"date\" && this.state.rest[i] !== \"\" && checkDateFormat(this.state.rest[i])) {\r\n                showErrorToast()\r\n                flag = 1\r\n            }\r\n        }\r\n        if (flag == 0) {\r\n            this.props.advancedSearchPatientAppointments({ firstRole: this.state.firstRole, first: this.state.first, restRoles: this.state.restRoles, rest: this.state.rest, logicOperators: this.state.logicOperators })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({ patientAppointmentsList: state.reducer.patientAppointmentsList })\r\n\r\nexport default connect(mapStateToProps, { loadedAllPatientAppointments, advancedSearchPatientAppointments })(AppointmentsSearchAdvancedTable);\r\n","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AllRatingTable.jsx",["548","549"],"﻿import React, { Component } from \"react\"\r\nimport { loadedAllRates } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { formatDate } from \"../utilities/Utilities\"\r\n\r\nclass AllRatingTable extends Component {\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.loadedAllRates();\r\n    }\r\n    render() {\r\n        debugger;\r\n        if (this.props.allRates.doctorAverage === undefined) {\r\n            return null;\r\n        }\r\n        const allRates = this.props.allRates;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"wrap\">\r\n                    <div className=\"item-row\">\r\n                        <div className=\"check-flag\">\r\n                            <span className=\"small-text-label\">Average rating of:</span>\r\n                            <span className=\"small-text-label hours\">{'Average rate: ' + allRates.doctorAverage.toFixed(2) + ' / 5'}</span>\r\n                            <span className=\"check-flag-label\">Doctors</span>\r\n                            <textarea style={{ height: \"230px\" }} className=\"check-flag-textarea\" disabled rows={3} value={'Knowledge: ' + allRates.doctorsKnowledgeAverage.toFixed(2) + '\\nProfessionalism: ' + allRates.doctorsProfessionalismAverage.toFixed(2) + '\\nPolitness: ' + allRates.doctorsPolitenessAverage.toFixed(2) + '\\nTechnicality: ' + allRates.doctorsTechnicalityAverage.toFixed(2) + '\\nSkill: ' + allRates.doctorsSkillAverage.toFixed(2) + '\\nWorking Pace: ' + allRates.doctorsWorkingPaceAverage.toFixed(2)}></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"wrap\">\r\n                    <div className=\"item-row\">\r\n                        <div className=\"check-flag\">\r\n                            <span className=\"small-text-label\">Average rating of:</span>\r\n                            <span className=\"small-text-label hours\">{'Average rate: ' + allRates.medicalStaffAverage.toFixed(2) + ' / 5'}</span>\r\n                            <span className=\"check-flag-label\">Medical staff</span>\r\n                            <textarea style={{ height: \"230px\" }} className=\"check-flag-textarea\" disabled rows={3} value={'Knowledge: ' + allRates.medicalStaffsKnowledgeAverage.toFixed(2) + '\\nProfessionalism: ' + allRates.medicalStaffsProfessionalismAverage.toFixed(2) + '\\nPolitness: ' + allRates.medicalStaffsPolitenessAverage.toFixed(2) + '\\nTechnicality: ' + allRates.medicalStaffsTechnicalityAverage.toFixed(2) + '\\nSkill: ' + allRates.medicalStaffsSkillAverage.toFixed(2) + '\\nWorking Pace: ' + allRates.medicalStaffsWorkingPaceAverage.toFixed(2)}></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"wrap\">\r\n                    <div className=\"item-row\">\r\n                        <div className=\"check-flag\">\r\n                            <span className=\"small-text-label\">Average rating of:</span>\r\n                            <span className=\"small-text-label hours\">{'Average rate: ' + allRates.hospitalAverage.toFixed(2) + ' / 5'}</span>\r\n                            <span className=\"check-flag-label\">Hospital</span>\r\n                            <textarea style={{ height: \"200px\" }} className=\"check-flag-textarea\" disabled rows={3} value={'Environment: ' + allRates.hospitalEnvironmentAverage.toFixed(2) + '\\nQuality of equipment: ' + allRates.hospitalEquipmentAverage.toFixed(2) + '\\nHygiene: ' + allRates.hospitalHygieneAverage.toFixed(2) + '\\nPrices: ' + allRates.hospitalPricesAverage.toFixed(2) + '\\nWaiting time in hospital: ' + allRates.hospitalWaitingTimeAverage.toFixed(2)}></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    debugger;\r\n    return ({ allRates: state.reducer.allRates });\r\n}\r\n\r\n\r\n\r\n    \r\n\r\nexport default connect(mapStateToProps, { loadedAllRates })(AllRatingTable);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\MaliciousPatientTable.jsx",["550","551","552","553","554","555","556"],"﻿import React, { Component } from \"react\"\r\nimport { loadedMaliciousPatients, blockPatient } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { wrap } from \"module\";\r\nimport axios from \"axios\";\r\nimport ReferralModal from \"./ReferralModal\"\r\nimport BlockPatientButton from \"./BlockPatientButton\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { showErrorToast, checkDateFormat } from \"../utilities/Utilities\"\r\n\r\nclass MaliciousPatientTable extends Component {\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.loadedMaliciousPatients();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.maliciousPatientsList === undefined) {\r\n\r\n            return null;\r\n        }\r\n        const maliciousPatientsList = this.props.maliciousPatientsList;\r\n        debugger;\r\n        return (\r\n            <div>\r\n                <table className='table allPatients' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"center\" }}>Patient</th>\r\n                            <th style={{ textAlign: \"center\" }}>Phone number</th>\r\n                            <th style={{ textAlign: \"center\" }}>Email</th>\r\n                            <th style={{ textAlign: \"center\" }}></th>\r\n                        </tr>\r\n                    </thead>\r\n                    {maliciousPatientsList.map((f) => (\r\n                        <tbody key={f}>\r\n                            <tr key={f}>\r\n                                <td style={{ textAlign: \"center\" }} >{f.firstName + ' ' + f.secondName}</td>\r\n                                <td style={{ textAlign: \"center\" }} >{f.phoneNumber}</td>\r\n                                <td style={{ textAlign: \"center\" }} >{f.email}</td>\r\n                                <td style={{ textAlign: \"center\" }}><BlockPatientButton patient={f}> </BlockPatientButton></td >\r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n    blockApp = (patient) => {\r\n        toast.configure();\r\n\r\n        toast.success(\"Patient successfully blocked!\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n\r\n        this.props.blockPatient(patient)\r\n    }\r\n\r\n}\r\n    \r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({ maliciousPatientsList: state.reducer.maliciousPatientsList })\r\n\r\nexport default connect(mapStateToProps, { loadedMaliciousPatients, blockPatient })(MaliciousPatientTable);\r\n\r\n","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\PublishButton.jsx",["557","558"],"﻿import React, { Component } from \"react\"\r\nimport { feedbackPublished } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { ToastContainer, toast } from 'react-toastify'; \r\nimport 'react-toastify/dist/ReactToastify.css'; \r\n\r\nclass PublishButton extends Component {\r\n\r\n   \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button className=\"btn btn-primary\" disabled={this.props.feedback.isPublished || !this.props.feedback.isPublic} onClick={this.publishFeedback.bind(this)}>Publish</button>  \r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    publishFeedback() {\r\n        toast.configure();\r\n\r\n        toast.success(\"Feedback successfully published!\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n\r\n        this.props.feedbackPublished(this.props.feedback.id)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n});\r\n\r\nexport default connect(mapStateToProps, { feedbackPublished })(PublishButton);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\ReferralModal.jsx",["559","560","561"],"﻿import React, { Component } from \"react\"\r\nimport { wrap } from \"module\";\r\nimport axios from \"axios\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass ReferralModal extends Component {\r\n    state = {\r\n        modalShow: this.props.show,\r\n        date: this.props.date\r\n    }\r\n    render() {\r\n        debugger;\r\n        return (\r\n            <Modal isOpen={this.state.modalShow} centered={true}>\r\n                <ModalHeader> {this.state.date} </ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"h-100 d-flex justify-content-center align-items-center\">\r\n                            <label className=\"label\">Medicine: </label>\r\n                            <label className=\"label-data ml-2\">{this.props.referral.medicine}</label>\r\n                    </div>\r\n                    <div className=\"h-100 d-flex justify-content-center align-items-center\">\r\n                        <label className=\"label\">Take medicine until: </label>\r\n                        <label className=\"label-data ml-2\">{this.props.referral.takeMedicineUntil}</label>\r\n                    </div>\r\n                    <div className=\"h-100 d-flex justify-content-center align-items-center\">\r\n                        <label className=\"label\">Quantity per day: </label>\r\n                        <label className=\"label-data ml-2\">{this.props.referral.quantityPerDay}</label>\r\n                    </div>\r\n                    <div className=\"h-100 d-flex justify-content-center align-items-center\">\r\n                        <label className=\"label\">Comment: </label>\r\n                        <label className=\"label-data ml-2\">{this.props.referral.comment}</label>\r\n                    </div>\r\n        </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.toggle.bind(this)}>Close</Button>{' '}\r\n            </ModalFooter>\r\n        </Modal>\r\n        );\r\n    }\r\n    toggle() {\r\n        this.setState({ modalShow: false });\r\n        this.props.onShowChange();\r\n    }\r\n}\r\n\r\nexport default (ReferralModal);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\CancelAppointmentButton.jsx",["562","563"],"﻿import React, { Component } from \"react\"\r\nimport { cancelAppointment } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass CancelAppointmentButton extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button className=\"btn btn-primary\" disabled={this.props.appointment.isCanceled} onClick={this.cancelApp.bind(this)}>Cancel</button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    cancelApp() {\r\n        toast.configure();\r\n\r\n        toast.success(\"Appointment successfully cancelled!\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n        debugger;\r\n        this.props.cancelAppointment(this.props.appointment.id);\r\n        window.location.href = \"http://localhost:60198/my-appointments\";           \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { cancelAppointment })(CancelAppointmentButton);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\ScheduleRegularAppointmentModal.jsx",["564","565","566","567","568","569","570","571","572"],"﻿import SelectDateForm from './SelectDateForm'\r\nimport React, { Component } from \"react\"\r\nimport { wrap } from \"module\";\r\nimport axios from \"axios\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Stepper from 'react-stepper-horizontal';\r\nimport SelectSpecialtyForm from './SelectSpecialtyForm'\r\nimport SelectDoctorForm from './SelectDoctorForm'\r\nimport SelectAppointmentForm from './SelectAppointmentForm'\r\nimport { formatDate } from '../utilities/Utilities';\r\nimport AppointmentConfirmationModal from './AppointmentConfirmationModal'\r\n\r\nclass ScheduleRegularAppointmentModal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleDateChange = this.handleDateChange.bind(this)\r\n        this.handleSpecialtyChange = this.handleSpecialtyChange.bind(this)\r\n        this.handleDoctorChange = this.handleDoctorChange.bind(this)\r\n        this.handleAppointmentChange = this.handleAppointmentChange.bind(this)\r\n        this.disableNext = this.disableNext.bind(this)\r\n        this.disableSchedule = this.disableSchedule.bind(this)\r\n    }\r\n\r\n    state = {\r\n        modalShow: this.props.show,\r\n        nextShow: true,\r\n        prevShow: false,\r\n        date: new Date(),\r\n        specialty: \"\",\r\n        doctorId: 0,\r\n        appointment: null,\r\n        step: 0,\r\n        nextDisabled: false,\r\n        scheduleDisabled: false,\r\n        confirmationModalShow: false\r\n    }\r\n    divStyle = {\r\n        height: '500px',\r\n    };\r\n    render() {\r\n        debugger;\r\n        return (\r\n            <Modal isOpen={this.state.modalShow} centered={true}>\r\n                {this.state.confirmationModalShow ? <AppointmentConfirmationModal appointment={this.state.appointment} show={this.state.confirmationModalShow} onShowChange={this.displayModal.bind(this)} toggleParent={this.toggle.bind(this)} /> : null}\r\n                <ModalHeader toggle={this.toggle.bind(this)}></ModalHeader>\r\n                <ModalBody style={this.divStyle} className=\"text-center\">\r\n                    <div>\r\n                        <Stepper steps={[{ title: 'Pick date' }, { title: 'Select specialty' }, { title: 'Select doctor' }, { title: 'Pick time' }]} activeStep={this.state.step} />\r\n                    </div>\r\n                    {this.state.step == 0 ? < SelectDateForm step={this.state.step} handleDateChange={this.handleDateChange} /> : null}\r\n                    {this.state.step == 1 ? < SelectSpecialtyForm step={this.state.step} handleSpecialtyChange={this.handleSpecialtyChange} /> : null}\r\n                    {this.state.step == 2 ? < SelectDoctorForm step={this.state.step} specialty={this.state.specialty} date={formatDate(this.state.date)} disableNext={this.disableNext} handleDoctorChange={this.handleDoctorChange} /> : null}\r\n                    {this.state.step == 3 ? < SelectAppointmentForm step={this.state.step} date={formatDate(this.state.date)} doctorId={this.state.doctorId} handleAppointmentChange={this.handleAppointmentChange} disableSchedule={this.disableSchedule} /> : null}\r\n                </ModalBody>\r\n                <ModalFooter className=\"modalFooter\">\r\n                    {this.state.prevShow ? <Button color=\"warning\" onClick={this.prev.bind(this)}> Previous</Button > : null}\r\n                    {this.state.nextShow ? <Button disabled={this.state.nextDisabled} color=\"success\" className=\"float-right\" onClick={this.next.bind(this)}> Next</Button > : <Button disabled={this.state.scheduleDisabled} onClick={() => { this.displayModal() }} color=\"primary\" className=\"float-right\">Schedule</Button >}\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    next() {\r\n        debugger;\r\n        this.setState({ step: ++this.state.step })\r\n        this.showNextButton()\r\n        this.showPrevButton()\r\n    }\r\n\r\n    prev() {\r\n        debugger;\r\n        this.setState({ nextDisabled: false })\r\n        this.setState({ step: --this.state.step })\r\n        this.showNextButton()\r\n        this.showPrevButton()\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ modalShow: false });\r\n        this.props.onShowChange();\r\n    }\r\n\r\n    showNextButton() {\r\n        debugger;\r\n        if (this.state.step > 2) {\r\n            this.setState({ nextShow: false })\r\n        } else {\r\n            this.setState({ nextShow: true })\r\n        }\r\n    }\r\n\r\n    showPrevButton() {\r\n        debugger;\r\n        if (this.state.step > 0) {\r\n            this.setState({ prevShow: true })\r\n        } else {\r\n            this.setState({ prevShow: false })\r\n        }\r\n    }\r\n\r\n    disableNext() {\r\n        this.setState({ nextDisabled:true })\r\n    }\r\n\r\n    disableSchedule() {\r\n        this.setState({ scheduleDisabled: true })\r\n    }\r\n\r\n    handleDateChange(e) {\r\n        debugger;\r\n        this.setState({\r\n            date : e\r\n        })\r\n        console.log(this.state.date)\r\n    }\r\n\r\n    handleSpecialtyChange(e) {\r\n        debugger;\r\n        this.setState({\r\n            specialty: e.target.value\r\n        })\r\n        console.log(this.state.specialty)\r\n    }\r\n\r\n    handleDoctorChange(f) {\r\n        debugger;\r\n        this.setState({\r\n            doctorId: f.id,\r\n            nextDisabled: false\r\n        })\r\n        console.log(this.state.doctorId)\r\n    }\r\n\r\n    handleAppointmentChange(f) {\r\n        debugger;\r\n        this.setState({\r\n            appointment: f,\r\n            scheduleDisabled: false\r\n        })\r\n        console.log(this.state.appointment)\r\n    }\r\n\r\n    displayModal() {\r\n        debugger;\r\n        this.setState({ confirmationModalShow: !this.state.confirmationModalShow })\r\n    }\r\n}\r\n\r\nexport default (ScheduleRegularAppointmentModal);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\BlockPatientButton.jsx",["573","574"],"﻿import React, { Component } from \"react\"\r\nimport { blockPatient } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass BlockPatientButton extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button className=\"btn btn-danger\" disabled={this.props.patient.isBlocked} onClick={this.blockApp.bind(this)}>Block</button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    blockApp() {\r\n        toast.configure();\r\n\r\n        toast.success(\"Patient successfully blocked!\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n        debugger;\r\n        this.props.blockPatient(this.props.patient.id); \r\n        window.location.href = \"http://localhost:60198/malicious-patient\";\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { blockPatient })(BlockPatientButton);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\RecommendedAppointmentScheduling.jsx",["575","576","577","578","579","580","581"],"﻿import React, { Component } from \"react\"\r\nimport { loadedAllDoctors, recommendAppointment, createRecommendAppointment } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'; \r\nimport { wrap } from \"module\";\r\nimport RecommendationModal from \"./RecommendationModal\"\r\nimport { showErrorToast, checkDateFormat } from \"../utilities/Utilities\"\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass RecommendedAppointmentScheduling extends Component {\r\n    state = {\r\n        doctorId: 0,\r\n        start: \"\",\r\n        end: \"\",\r\n        priority: \"\",\r\n        modalShow: false,\r\n        modalShowRecommended: this.props.show\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ? this.setState({\r\n            [name]: checked\r\n        }) : this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.loadedAllDoctors();\r\n        //this.props.recommendAppointment({ doctorId: this.state.doctorId, start: this.state.start, end: this.state.end, priority: this.state.priority })\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        if (this.props.doctorList === undefined) {\r\n\r\n            return null;\r\n        }      \r\n\r\n        const doctorList = this.props.doctorList;\r\n\r\n        const recommendedAppointments = this.props.recommendedAppointments;\r\n\r\n        return (\r\n            <Modal isOpen={this.state.modalShowRecommended} centered={true} size=\"lg\" style={{ maxWidth: '1200px', width: '120%' }}>\r\n                <ModalHeader toggle={this.toggle.bind(this)}> Get Recommended Appointments </ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\">Doctor: </label>\r\n                        <select className=\"field\"\r\n                            value={this.state.doctorId}\r\n                            onChange={this.handleChange}\r\n                            name=\"doctorId\">\r\n                            <option value=\"\"></option>\r\n                            {doctorList.map(fbb =>\r\n                                <option key={fbb.id} value={fbb.id}>{fbb.firstName + ' ' + fbb.secondName + ', ' + fbb.speciality}</option>\r\n                            )};\r\n                                </select>\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label label-date\">From: </label>\r\n\r\n                        <input\r\n                            className=\"field field-date\"\r\n                            type=\"text\"\r\n                            value={this.state.start}\r\n                            name=\"start\"\r\n                            placeholder=\"dd/MM/yyyy\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <input\r\n                            className=\"field field-date field-end\"\r\n                            type=\"text\"\r\n                            value={this.state.end}\r\n                            name=\"end\"\r\n                            placeholder=\"dd/MM/yyyy\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <label className=\"label label-date label-end\">to: </label>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"field-wrap\">\r\n                        <label className=\"label\">Priority: </label>\r\n\r\n                        <select\r\n                            className=\"field\"\r\n                            value={this.state.priority}\r\n                            onChange={this.handleChange}\r\n                            name=\"priority\"\r\n                        >\r\n                            <option value=\"\"> </option>\r\n                            <option value=\"doctor\">Doctor </option>\r\n                            <option value=\"date\">Date Interval </option>\r\n                        </select>\r\n                        </div>\r\n\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                    <div className=\"btn-wrap align-right\">\r\n                        <button className=\"btn btn-primary\" disabled={!this.state.start || !this.state.end || !this.state.priority || this.state.doctorId == 0} onClick={this.getRecommendedAppointment.bind(this)}>Schedule</button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {this.state.modalShow ? <RecommendationModal show={this.state.modalShow} appointments={recommendedAppointments} onShowChange={this.getRecommendedAppointment.bind(this)} /> : null}\r\n                    </div>\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ modalShowRecommended: false });\r\n        this.props.onShowChange();\r\n    }\r\n\r\n    getRecommendedAppointment() {\r\n\r\n        debugger;\r\n\r\n        var flag = 0;\r\n\r\n        let newDate = new Date()\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n\r\n        // Please pay attention to the month (parts[1]); JavaScript counts months from 0:\r\n        // January - 0, February - 1, etc.\r\n        var todayDate = new Date(year, month - 1, date);\r\n\r\n\r\n        var startDateParts = this.state.start.split('/');\r\n        var startDate = new Date(startDateParts[2], startDateParts[1] - 1, startDateParts[0])\r\n\r\n        var endDateParts = this.state.end.split('/');\r\n        var endDate = new Date(endDateParts[2], endDateParts[1] - 1, endDateParts[0])\r\n\r\n\r\n        if (startDate < todayDate) {\r\n            flag = 1;\r\n            toast.configure();\r\n\r\n            toast.error(\"Please enter date that is yet to come!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n\r\n        if (endDate < todayDate) {\r\n            flag = 1;\r\n            toast.configure();\r\n\r\n            toast.error(\"Please enter date that is yet to come!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n\r\n        if (endDate < startDate) {\r\n            flag = 1;\r\n            toast.configure();\r\n\r\n            toast.error(\"Please enter valid start date and end date!\", {\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n\r\n        if (this.state.start !== \"\" && checkDateFormat(this.state.start)) {\r\n            showErrorToast()\r\n            flag = 1;\r\n        }\r\n        else if (this.state.end !== \"\" && checkDateFormat(this.state.end)) {\r\n            showErrorToast()\r\n            flag = 1;\r\n        }\r\n\r\n        if (flag == 0) {\r\n            this.props.recommendAppointment({ doctorId: this.state.doctorId, start: this.state.start, end: this.state.end, priority: this.state.priority })\r\n\r\n            this.setState({ modalShow: !this.state.modalShow })\r\n        }\r\n       \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({ doctorList: state.reducer.doctorList, recommendedAppointments: state.reducer.recommendedAppointments })\r\n\r\nexport default connect(mapStateToProps, { loadedAllDoctors, recommendAppointment })(RecommendedAppointmentScheduling);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\AppointmentConfirmationModal.jsx",["582"],"﻿import React, { Component } from \"react\"\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { appointmentScheduled } from \"../actions/actions\";\r\nimport { connect } from \"react-redux\"\r\n\r\nclass AppointmentConfirmationModal extends Component {\r\n    state = {\r\n        confirmationModalShow: this.props.show\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ confirmationModalShow: false });\r\n        this.props.toggleParent();\r\n        this.props.onShowChange();\r\n    }\r\n\r\n    toggle1() {\r\n        this.setState({ confirmationModalShow: false });\r\n        this.props.onShowChange();\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        return (\r\n            <Modal isOpen={this.state.confirmationModalShow} centered={true}>\r\n                <ModalHeader></ModalHeader>\r\n                <ModalBody>\r\n                    <h4>Are you sure you want to schedule an appointment?</h4>\r\n                </ModalBody>\r\n                <ModalFooter className=\"modalFooter\">\r\n                    <Button color=\"danger\" onClick={() => this.toggle1()}> No</Button >\r\n                    <Button color=\"success\" className=\"float-right\" onClick={() => this.scheduleAppointment()}> Yes</Button >\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    scheduleAppointment() {\r\n        this.props.appointmentScheduled(this.props.appointment)\r\n        this.toggle()\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({  })\r\n\r\nexport default connect(mapStateToProps, { appointmentScheduled })(AppointmentConfirmationModal);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\SelectAppointmentForm.jsx",["583","584","585","586","587","588","589","590","591","592","593"],"﻿import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { showErrorToast, checkDateFormat } from \"../utilities/Utilities\"\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { loadedAllAvailableAppointments } from \"../actions/actions\"\r\nimport { formatDate } from \"../utilities/Utilities\"\r\n\r\nclass SelectAppointmentForm extends Component {\r\n    state = {\r\n        appointment: null,\r\n        bgColor: 'white',\r\n        timesDisabled: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.loadedAllAvailableAppointments({\r\n            \"Date\": this.props.date,\r\n            \"DoctorId\": this.props.doctorId,\r\n            \"PatientId\": \"2\"\r\n        });\r\n    }\r\n\r\n    handleChange = (f) => {\r\n        debugger;\r\n        console.log(f)\r\n        this.setState({\r\n            appointment: f,\r\n            bgColor: \"lightBlue\",\r\n            timesDisabled: 1\r\n        })\r\n        this.props.handleAppointmentChange(f)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.step !== 3) {\r\n            return null\r\n        }\r\n        if (this.state.timesDisabled == 0) this.props.disableSchedule();\r\n        debugger;\r\n        return (\r\n            this.props.availableAppointments.length == 0 ? <h3 style={{ marginTop: \"40px\" }}>Sorry, there are no available appointments!</h3> :\r\n                    <div style={{ marginTop: \"40px\" }} id=\"appointmentTable\">\r\n                        <table className='table allAppointments'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ textAlign: \"left\" }}>Start Time</th>\r\n                                    <th style={{ textAlign: \"center\" }}>Date</th>\r\n                                    <th style={{ textAlign: \"right\" }}>Room</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {this.props.availableAppointments.map((f) => (\r\n                                <tbody key={f.start}>\r\n                                    <tr style={this.state.appointment == f ? { backgroundColor: this.state.bgColor } : null} key={f.start} onClick={() => this.handleChange(f)}>\r\n                                        <td style={{ textAlign: \"left\" }} >{f.start}</td>\r\n                                        <td style={{ textAlign: \"center\" }} >{f.date}</td>\r\n                                        <td style={{ textAlign: \"right\" }} > {f.roomId}</td >\r\n                                    </tr>\r\n                                </tbody>\r\n                            ))}\r\n                        </table>\r\n                    </div>\r\n            )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({ availableAppointments: state.reducer.availableAppointments })\r\n\r\nexport default connect(mapStateToProps, { loadedAllAvailableAppointments })(SelectAppointmentForm);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\SelectDoctorForm.jsx",["594","595","596","597","598","599","600","601","602","603"],"﻿import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { showErrorToast, checkDateFormat } from \"../utilities/Utilities\"\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { loadedAllAvailableDoctors } from \"../actions/actions\"\r\nimport { formatDate } from \"../utilities/Utilities\"\r\n\r\nclass SelectDoctorForm extends Component {\r\n    state = {\r\n        doctor: null,\r\n        bgColor: 'white',\r\n        timesDisabled: 0,\r\n        availableDoctors: this.props.loadedAllAvailableDoctors(this.props.specialty, this.props.date, 2)\r\n    };\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        this.props.loadedAllAvailableDoctors(this.props.specialty, this.props.date, 2);\r\n    }\r\n\r\n    handleChange = (f) => {\r\n        debugger;\r\n        console.log(f)\r\n        this.setState({\r\n            doctor: f,\r\n            bgColor: \"lightBlue\",\r\n            timesDisabled: 1\r\n        })\r\n        this.props.handleDoctorChange(f)\r\n    }\r\n\r\n    render() {\r\n        debugger\r\n        if (this.props.step !== 2) {\r\n            return null\r\n        }\r\n        if (this.state.timesDisabled == 0) this.props.disableNext();\r\n        debugger;\r\n        return (\r\n            <div style={{ marginTop: \"40px\" }}>\r\n                <table className='table allAppointments' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"left\" }}>Name and Surname</th>\r\n                            <th style={{ textAlign: \"center\" }}>Specialty</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {this.props.availableDoctors.map((f) => (\r\n                        <tbody key={f.id}>\r\n                            <tr style={this.state.doctor == f ? { backgroundColor: this.state.bgColor } : null} key={f.id} onClick={() => this.handleChange(f)}>\r\n                                <td style={{ textAlign: \"left\" }} >{f.nameAndSurname}</td>\r\n                                <td style={{ textAlign: \"center\" }} > {f.specialty}</td >\r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                </table>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({ availableDoctors: state.reducer.availableDoctors })\r\n\r\nexport default connect(mapStateToProps, { loadedAllAvailableDoctors })(SelectDoctorForm);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\SelectSpecialtyForm.jsx",["604","605","606","607","608","609","610","611","612"],"﻿import React, { Component } from \"react\"\r\nimport { loadedAllPatientReports, simpleSearchAppointments } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { showErrorToast, checkDateFormat } from \"../utilities/Utilities\"\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass SelectSpecialtyForm extends Component {\r\n    state = {\r\n        specialty: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        debugger;\r\n        console.log(event)\r\n        this.setState({\r\n            specialty: event.target.value\r\n        })\r\n        this.props.handleSpecialtyChange(event)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.step !== 1) {\r\n            return null\r\n        }\r\n        return (\r\n            <div style={{ marginTop: \"40px\" }}>\r\n                <label className=\"label label-date\">Specialty: </label>\r\n                <select className=\"field\" defaultValue={this.state.specialty} onChange={this.handleChange.bind(this)}>\r\n                    <option value=\"\"></option>\r\n                    <option value=\"Cardiology\">Cardiology</option>\r\n                    <option value=\"Pulmonology\">Pulmonology</option>\r\n                    <option value=\"Neurology\">Neurology</option>\r\n                    <option value=\"Otorhinolaryngology\">Otorhinolaryngology</option>\r\n                    <option value=\"Dermatology\">Dermatology</option>\r\n                </select>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({  })\r\n\r\nexport default connect(mapStateToProps)(SelectSpecialtyForm);","C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\SelectDateForm.jsx",["613","614","615","616","617","618","619","620"],"﻿import React, { Component } from \"react\"\r\nimport { loadedAllPatientReports, simpleSearchAppointments } from \"../actions/actions\"\r\nimport { connect } from \"react-redux\"\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { showErrorToast, checkDateFormat } from \"../utilities/Utilities\"\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass SelectDateForm extends Component {\r\n    state = {\r\n        date: new Date()  \r\n    };\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        debugger;\r\n        console.log(event)\r\n        this.setState({\r\n            date: event\r\n        })\r\n        this.props.handleDateChange(event)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.step !== 0) {\r\n            return null\r\n        }\r\n        return (\r\n            <div style={{ marginTop: \"40px\" }}>\r\n                <label className=\"label\">Date: </label>\r\n                <DatePicker\r\n                    id=\"datepickerInput\"\r\n                    name=\"date\"\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    selected={this.state.date}\r\n                    minDate={new Date()}\r\n                    onChange={this.handleChange.bind(this)}\r\n                />\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>\r\n\r\n    ({  })\r\n\r\nexport default connect(mapStateToProps)(SelectDateForm);",["621","622"],"C:\\PSW projekat\\HealthcareSystem\\PatientWebApplication\\WebAppClientApp\\client-app\\src\\components\\RecommendationModal.jsx",["623","624","625","626","627","628","629","630","631","632","633"],"﻿import React, { Component } from \"react\"\r\nimport { wrap } from \"module\";\r\nimport { createRecommendAppointment } from \"../actions/actions\"\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'; \r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass RecommendationModal extends Component {\r\n    state = {\r\n        appointment: null,\r\n        bgColor: 'white',\r\n        modalShow: this.props.show\r\n    }\r\n\r\n    handleChange = (f) => {\r\n        debugger;\r\n        console.log(f)\r\n        this.setState({\r\n            appointment: f,\r\n            bgColor: \"lightBlue\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        if (this.props.appointments[0] == undefined) {\r\n            return (\r\n                <Modal isOpen={this.state.modalShow} centered={true}>\r\n                    <ModalHeader> Appointments </ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"h-100 d-flex justify-content-center align-items-center\">\r\n                            <label className=\"label\">Sorry there is no available appointments.</label>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.toggle.bind(this)}>Close</Button>{' '}\r\n                    </ModalFooter>\r\n                </Modal>\r\n            );\r\n        }\r\n        return (\r\n            <Modal isOpen={this.state.modalShow} centered={true}>\r\n                <ModalHeader> Appointments </ModalHeader>\r\n                {!this.props.appointments[0].start ? <ModalBody>\r\n                    <div className=\"h-100 d-flex justify-content-center align-items-center\">\r\n                        <label className=\"label\">Sorry there is no available appointments.</label>\r\n                    </div>\r\n                </ModalBody> : <ModalBody>\r\n                        <table className='table allAppointments' >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ textAlign: \"left\" }}>Start Time</th>\r\n                                    <th style={{ textAlign: \"center\" }}>Date</th>\r\n                                    <th style={{ textAlign: \"center\" }}>Doctor</th>\r\n                                    <th style={{ textAlign: \"right\" }}>Room</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {this.props.appointments.map((f) => (\r\n                                <tbody key={f.start}>\r\n                                    <tr style={this.state.appointment == f ? { backgroundColor: this.state.bgColor } : null} key={f.start} onClick={() => this.handleChange(f)}>\r\n                                        <td style={{ textAlign: \"left\" }} >{f.start}</td>\r\n                                        <td style={{ textAlign: \"center\" }} >{f.date}</td>\r\n                                        <td style={{ textAlign: \"right\" }} > {f.doctor != undefined ? f.doctor.firstName + \" \" + f.doctor.secondName : \"\"}</td >\r\n                                        <td style={{ textAlign: \"right\" }} > {f.roomId}</td > \r\n                                    </tr>\r\n                                </tbody>\r\n                            ))}\r\n                        </table>\r\n                    </ModalBody>}\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.toggle.bind(this)}>Close</Button>{' '}\r\n                    <Button color=\"primary\" /*disabled={!this.props.appointment.date || !this.props.appointment.start || !this.props.appointment.roomId}*/ onClick={this.schedule.bind(this)}>Schedule</Button>{' '}\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ modalShow: false });\r\n        this.props.onShowChange();\r\n    }\r\n\r\n    schedule() {\r\n        toast.configure();\r\n\r\n        toast.success(\"Appointment successfully created!\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n\r\n        this.state.appointment.patientUserId = this.state.appointment.patient.id;\r\n        this.state.appointment.doctorUserId = this.state.appointment.doctor.id;\r\n        this.state.appointment.patient = null;\r\n        this.state.appointment.doctor = null;\r\n\r\n        console.log(this.state.appointment);\r\n\r\n        this.props.createRecommendAppointment(this.state.appointment);\r\n\r\n        this.setState({ modalShow: false });\r\n        this.props.onShowChange();\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { createRecommendAppointment })(RecommendationModal);",{"ruleId":"634","replacedBy":"635"},{"ruleId":"636","replacedBy":"637"},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"642"},{"ruleId":"643","severity":1,"message":"644","line":15,"column":35,"nodeType":"645","messageId":"646","endLine":15,"endColumn":36},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"651"},{"ruleId":"652","severity":1,"message":"653","line":24,"column":5,"nodeType":"645","messageId":"654","endLine":24,"endColumn":39},{"ruleId":"652","severity":1,"message":"655","line":26,"column":5,"nodeType":"645","messageId":"654","endLine":26,"endColumn":44},{"ruleId":"652","severity":1,"message":"656","line":38,"column":10,"nodeType":"645","messageId":"654","endLine":38,"endColumn":21},{"ruleId":"652","severity":1,"message":"657","line":60,"column":10,"nodeType":"645","messageId":"654","endLine":60,"endColumn":31},{"ruleId":"658","severity":1,"message":"659","line":78,"column":5,"nodeType":"660","messageId":"650","endLine":78,"endColumn":24},{"ruleId":"643","severity":1,"message":"661","line":276,"column":17,"nodeType":"645","messageId":"646","endLine":276,"endColumn":21},{"ruleId":"643","severity":1,"message":"662","line":278,"column":17,"nodeType":"645","messageId":"646","endLine":278,"endColumn":32},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"663"},{"ruleId":"652","severity":1,"message":"664","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":24},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"665"},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"666"},{"ruleId":"652","severity":1,"message":"664","line":1,"column":10,"nodeType":"645","messageId":"654","endLine":1,"endColumn":24},{"ruleId":"643","severity":1,"message":"667","line":7,"column":14,"nodeType":"645","messageId":"646","endLine":7,"endColumn":17},{"ruleId":"643","severity":1,"message":"668","line":9,"column":14,"nodeType":"645","messageId":"646","endLine":9,"endColumn":19},{"ruleId":"669","severity":1,"message":"670","line":46,"column":23,"nodeType":"671","messageId":"672","endLine":46,"endColumn":24,"suggestions":"673"},{"ruleId":"669","severity":1,"message":"670","line":46,"column":33,"nodeType":"671","messageId":"672","endLine":46,"endColumn":34,"suggestions":"674"},{"ruleId":"669","severity":1,"message":"675","line":55,"column":40,"nodeType":"671","messageId":"672","endLine":55,"endColumn":41,"suggestions":"676"},{"ruleId":"677","severity":1,"message":"678","line":72,"column":16,"nodeType":"679","messageId":"650","endLine":72,"endColumn":18},{"ruleId":"677","severity":1,"message":"678","line":72,"column":36,"nodeType":"679","messageId":"650","endLine":72,"endColumn":38},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"680"},{"ruleId":"634","replacedBy":"635"},{"ruleId":"636","replacedBy":"637"},{"ruleId":"681","severity":1,"message":"682","line":23,"column":1,"nodeType":"683","endLine":46,"endColumn":3},{"ruleId":"684","severity":1,"message":"685","line":6,"column":8,"nodeType":"645","messageId":"654","endLine":6,"endColumn":21},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"686"},{"ruleId":"687","severity":1,"message":"688","line":25,"column":37,"nodeType":"689","messageId":"690","endLine":25,"endColumn":39},{"ruleId":"687","severity":1,"message":"688","line":25,"column":70,"nodeType":"689","messageId":"690","endLine":25,"endColumn":72},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"691"},{"ruleId":"687","severity":1,"message":"688","line":24,"column":32,"nodeType":"689","messageId":"690","endLine":24,"endColumn":34},{"ruleId":"687","severity":1,"message":"688","line":24,"column":65,"nodeType":"689","messageId":"690","endLine":24,"endColumn":67},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"692"},{"ruleId":"687","severity":1,"message":"688","line":24,"column":32,"nodeType":"689","messageId":"690","endLine":24,"endColumn":34},{"ruleId":"687","severity":1,"message":"688","line":24,"column":65,"nodeType":"689","messageId":"690","endLine":24,"endColumn":67},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"693"},{"ruleId":"687","severity":1,"message":"688","line":25,"column":37,"nodeType":"689","messageId":"690","endLine":25,"endColumn":39},{"ruleId":"687","severity":1,"message":"688","line":25,"column":70,"nodeType":"689","messageId":"690","endLine":25,"endColumn":72},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"694"},{"ruleId":"687","severity":1,"message":"688","line":24,"column":32,"nodeType":"689","messageId":"690","endLine":24,"endColumn":34},{"ruleId":"687","severity":1,"message":"688","line":24,"column":65,"nodeType":"689","messageId":"690","endLine":24,"endColumn":67},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"695"},{"ruleId":"687","severity":1,"message":"688","line":24,"column":32,"nodeType":"689","messageId":"690","endLine":24,"endColumn":34},{"ruleId":"687","severity":1,"message":"688","line":24,"column":65,"nodeType":"689","messageId":"690","endLine":24,"endColumn":67},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"696"},{"ruleId":"687","severity":1,"message":"688","line":24,"column":32,"nodeType":"689","messageId":"690","endLine":24,"endColumn":34},{"ruleId":"687","severity":1,"message":"688","line":24,"column":65,"nodeType":"689","messageId":"690","endLine":24,"endColumn":67},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"697"},{"ruleId":"687","severity":1,"message":"688","line":24,"column":32,"nodeType":"689","messageId":"690","endLine":24,"endColumn":34},{"ruleId":"687","severity":1,"message":"688","line":24,"column":65,"nodeType":"689","messageId":"690","endLine":24,"endColumn":67},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"698"},{"ruleId":"687","severity":1,"message":"688","line":24,"column":32,"nodeType":"689","messageId":"690","endLine":24,"endColumn":34},{"ruleId":"687","severity":1,"message":"688","line":24,"column":65,"nodeType":"689","messageId":"690","endLine":24,"endColumn":67},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"699"},{"ruleId":"687","severity":1,"message":"688","line":25,"column":32,"nodeType":"689","messageId":"690","endLine":25,"endColumn":34},{"ruleId":"687","severity":1,"message":"688","line":25,"column":65,"nodeType":"689","messageId":"690","endLine":25,"endColumn":67},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"700"},{"ruleId":"687","severity":1,"message":"688","line":24,"column":37,"nodeType":"689","messageId":"690","endLine":24,"endColumn":39},{"ruleId":"687","severity":1,"message":"688","line":24,"column":70,"nodeType":"689","messageId":"690","endLine":24,"endColumn":72},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"701"},{"ruleId":"687","severity":1,"message":"688","line":24,"column":32,"nodeType":"689","messageId":"690","endLine":24,"endColumn":34},{"ruleId":"687","severity":1,"message":"688","line":24,"column":65,"nodeType":"689","messageId":"690","endLine":24,"endColumn":67},{"ruleId":"638","severity":1,"message":"639","line":1,"column":1,"nodeType":"640","messageId":"641","endLine":1,"endColumn":14,"fix":"702"},{"ruleId":"687","severity":1,"message":"688","line":24,"column":32,"nodeType":"689","messageId":"690","endLine":24,"endColumn":34},{"ruleId":"687","severity":1,"message":"688","line":24,"column":65,"nodeType":"689","messageId":"690","endLine":24,"endColumn":67},{"ruleId":"684","severity":1,"message":"703","line":8,"column":8,"nodeType":"645","messageId":"654","endLine":8,"endColumn":18},{"ruleId":"684","severity":1,"message":"704","line":2,"column":39,"nodeType":"645","messageId":"654","endLine":2,"endColumn":50},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"705"},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"706"},{"ruleId":"652","severity":1,"message":"707","line":5,"column":10,"nodeType":"645","messageId":"654","endLine":5,"endColumn":14},{"ruleId":"677","severity":1,"message":"678","line":39,"column":80,"nodeType":"679","messageId":"650","endLine":39,"endColumn":82},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"708"},{"ruleId":"652","severity":1,"message":"707","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":14},{"ruleId":"652","severity":1,"message":"709","line":5,"column":8,"nodeType":"645","messageId":"654","endLine":5,"endColumn":13},{"ruleId":"652","severity":1,"message":"664","line":7,"column":10,"nodeType":"645","messageId":"654","endLine":7,"endColumn":24},{"ruleId":"652","severity":1,"message":"710","line":7,"column":26,"nodeType":"645","messageId":"654","endLine":7,"endColumn":31},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"711"},{"ruleId":"652","severity":1,"message":"664","line":5,"column":10,"nodeType":"645","messageId":"654","endLine":5,"endColumn":24},{"ruleId":"712","severity":1,"message":"713","line":380,"column":25,"nodeType":"714","endLine":380,"endColumn":75},{"ruleId":"677","severity":1,"message":"678","line":385,"column":136,"nodeType":"679","messageId":"650","endLine":385,"endColumn":138},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"715"},{"ruleId":"652","severity":1,"message":"707","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":14},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"716"},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"717"},{"ruleId":"652","severity":1,"message":"707","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":14},{"ruleId":"652","severity":1,"message":"718","line":74,"column":30,"nodeType":"645","messageId":"654","endLine":74,"endColumn":34},{"ruleId":"652","severity":1,"message":"719","line":74,"column":36,"nodeType":"645","messageId":"654","endLine":74,"endColumn":43},{"ruleId":"652","severity":1,"message":"718","line":87,"column":30,"nodeType":"645","messageId":"654","endLine":87,"endColumn":34},{"ruleId":"652","severity":1,"message":"719","line":87,"column":36,"nodeType":"645","messageId":"654","endLine":87,"endColumn":43},{"ruleId":"652","severity":1,"message":"718","line":100,"column":30,"nodeType":"645","messageId":"654","endLine":100,"endColumn":34},{"ruleId":"652","severity":1,"message":"719","line":100,"column":36,"nodeType":"645","messageId":"654","endLine":100,"endColumn":43},{"ruleId":"677","severity":1,"message":"678","line":149,"column":67,"nodeType":"679","messageId":"650","endLine":149,"endColumn":69},{"ruleId":"720","severity":1,"message":"721","line":149,"column":77,"nodeType":"722","endLine":149,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":166,"column":78,"nodeType":"679","messageId":"650","endLine":166,"endColumn":80},{"ruleId":"720","severity":1,"message":"721","line":166,"column":85,"nodeType":"722","endLine":166,"endColumn":110},{"ruleId":"677","severity":1,"message":"678","line":179,"column":73,"nodeType":"679","messageId":"650","endLine":179,"endColumn":75},{"ruleId":"720","severity":1,"message":"721","line":179,"column":79,"nodeType":"722","endLine":179,"endColumn":99},{"ruleId":"677","severity":1,"message":"678","line":194,"column":78,"nodeType":"679","messageId":"650","endLine":194,"endColumn":80},{"ruleId":"720","severity":1,"message":"721","line":194,"column":85,"nodeType":"722","endLine":194,"endColumn":100},{"ruleId":"677","severity":1,"message":"678","line":243,"column":34,"nodeType":"679","messageId":"650","endLine":243,"endColumn":36},{"ruleId":"677","severity":1,"message":"678","line":251,"column":41,"nodeType":"679","messageId":"650","endLine":251,"endColumn":43},{"ruleId":"677","severity":1,"message":"678","line":258,"column":18,"nodeType":"679","messageId":"650","endLine":258,"endColumn":20},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"723"},{"ruleId":"652","severity":1,"message":"664","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":24},{"ruleId":"652","severity":1,"message":"724","line":7,"column":10,"nodeType":"645","messageId":"654","endLine":7,"endColumn":16},{"ruleId":"652","severity":1,"message":"725","line":63,"column":15,"nodeType":"645","messageId":"654","endLine":63,"endColumn":26},{"ruleId":"677","severity":1,"message":"678","line":63,"column":104,"nodeType":"679","messageId":"650","endLine":63,"endColumn":106},{"ruleId":"652","severity":1,"message":"726","line":85,"column":15,"nodeType":"645","messageId":"654","endLine":85,"endColumn":36},{"ruleId":"720","severity":1,"message":"721","line":95,"column":39,"nodeType":"722","endLine":95,"endColumn":49},{"ruleId":"720","severity":1,"message":"721","line":102,"column":39,"nodeType":"722","endLine":102,"endColumn":49},{"ruleId":"727","severity":1,"message":"728","line":107,"column":33,"nodeType":"714","endLine":107,"endColumn":55},{"ruleId":"677","severity":1,"message":"678","line":127,"column":88,"nodeType":"679","messageId":"650","endLine":127,"endColumn":90},{"ruleId":"677","severity":1,"message":"678","line":135,"column":88,"nodeType":"679","messageId":"650","endLine":135,"endColumn":90},{"ruleId":"677","severity":1,"message":"678","line":143,"column":88,"nodeType":"679","messageId":"650","endLine":143,"endColumn":90},{"ruleId":"677","severity":1,"message":"678","line":151,"column":88,"nodeType":"679","messageId":"650","endLine":151,"endColumn":90},{"ruleId":"677","severity":1,"message":"678","line":159,"column":88,"nodeType":"679","messageId":"650","endLine":159,"endColumn":90},{"ruleId":"677","severity":1,"message":"678","line":173,"column":83,"nodeType":"679","messageId":"650","endLine":173,"endColumn":85},{"ruleId":"677","severity":1,"message":"678","line":181,"column":83,"nodeType":"679","messageId":"650","endLine":181,"endColumn":85},{"ruleId":"677","severity":1,"message":"678","line":189,"column":83,"nodeType":"679","messageId":"650","endLine":189,"endColumn":85},{"ruleId":"677","severity":1,"message":"678","line":197,"column":83,"nodeType":"679","messageId":"650","endLine":197,"endColumn":85},{"ruleId":"677","severity":1,"message":"678","line":205,"column":83,"nodeType":"679","messageId":"650","endLine":205,"endColumn":85},{"ruleId":"677","severity":1,"message":"678","line":219,"column":85,"nodeType":"679","messageId":"650","endLine":219,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":227,"column":85,"nodeType":"679","messageId":"650","endLine":227,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":235,"column":85,"nodeType":"679","messageId":"650","endLine":235,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":243,"column":85,"nodeType":"679","messageId":"650","endLine":243,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":251,"column":85,"nodeType":"679","messageId":"650","endLine":251,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":265,"column":78,"nodeType":"679","messageId":"650","endLine":265,"endColumn":80},{"ruleId":"677","severity":1,"message":"678","line":273,"column":78,"nodeType":"679","messageId":"650","endLine":273,"endColumn":80},{"ruleId":"677","severity":1,"message":"678","line":281,"column":78,"nodeType":"679","messageId":"650","endLine":281,"endColumn":80},{"ruleId":"677","severity":1,"message":"678","line":289,"column":78,"nodeType":"679","messageId":"650","endLine":289,"endColumn":80},{"ruleId":"677","severity":1,"message":"678","line":297,"column":78,"nodeType":"679","messageId":"650","endLine":297,"endColumn":80},{"ruleId":"677","severity":1,"message":"678","line":320,"column":82,"nodeType":"679","messageId":"650","endLine":320,"endColumn":84},{"ruleId":"677","severity":1,"message":"678","line":328,"column":82,"nodeType":"679","messageId":"650","endLine":328,"endColumn":84},{"ruleId":"677","severity":1,"message":"678","line":336,"column":82,"nodeType":"679","messageId":"650","endLine":336,"endColumn":84},{"ruleId":"677","severity":1,"message":"678","line":344,"column":82,"nodeType":"679","messageId":"650","endLine":344,"endColumn":84},{"ruleId":"677","severity":1,"message":"678","line":352,"column":82,"nodeType":"679","messageId":"650","endLine":352,"endColumn":84},{"ruleId":"677","severity":1,"message":"678","line":371,"column":84,"nodeType":"679","messageId":"650","endLine":371,"endColumn":86},{"ruleId":"677","severity":1,"message":"678","line":379,"column":84,"nodeType":"679","messageId":"650","endLine":379,"endColumn":86},{"ruleId":"677","severity":1,"message":"678","line":387,"column":84,"nodeType":"679","messageId":"650","endLine":387,"endColumn":86},{"ruleId":"677","severity":1,"message":"678","line":395,"column":84,"nodeType":"679","messageId":"650","endLine":395,"endColumn":86},{"ruleId":"677","severity":1,"message":"678","line":403,"column":84,"nodeType":"679","messageId":"650","endLine":403,"endColumn":86},{"ruleId":"727","severity":1,"message":"728","line":409,"column":33,"nodeType":"714","endLine":409,"endColumn":55},{"ruleId":"677","severity":1,"message":"678","line":423,"column":94,"nodeType":"679","messageId":"650","endLine":423,"endColumn":96},{"ruleId":"677","severity":1,"message":"678","line":431,"column":94,"nodeType":"679","messageId":"650","endLine":431,"endColumn":96},{"ruleId":"677","severity":1,"message":"678","line":439,"column":94,"nodeType":"679","messageId":"650","endLine":439,"endColumn":96},{"ruleId":"677","severity":1,"message":"678","line":447,"column":94,"nodeType":"679","messageId":"650","endLine":447,"endColumn":96},{"ruleId":"677","severity":1,"message":"678","line":455,"column":94,"nodeType":"679","messageId":"650","endLine":455,"endColumn":96},{"ruleId":"677","severity":1,"message":"678","line":469,"column":89,"nodeType":"679","messageId":"650","endLine":469,"endColumn":91},{"ruleId":"677","severity":1,"message":"678","line":477,"column":89,"nodeType":"679","messageId":"650","endLine":477,"endColumn":91},{"ruleId":"677","severity":1,"message":"678","line":485,"column":89,"nodeType":"679","messageId":"650","endLine":485,"endColumn":91},{"ruleId":"677","severity":1,"message":"678","line":493,"column":89,"nodeType":"679","messageId":"650","endLine":493,"endColumn":91},{"ruleId":"677","severity":1,"message":"678","line":501,"column":89,"nodeType":"679","messageId":"650","endLine":501,"endColumn":91},{"ruleId":"677","severity":1,"message":"678","line":515,"column":91,"nodeType":"679","messageId":"650","endLine":515,"endColumn":93},{"ruleId":"677","severity":1,"message":"678","line":523,"column":91,"nodeType":"679","messageId":"650","endLine":523,"endColumn":93},{"ruleId":"677","severity":1,"message":"678","line":531,"column":91,"nodeType":"679","messageId":"650","endLine":531,"endColumn":93},{"ruleId":"677","severity":1,"message":"678","line":539,"column":91,"nodeType":"679","messageId":"650","endLine":539,"endColumn":93},{"ruleId":"677","severity":1,"message":"678","line":547,"column":91,"nodeType":"679","messageId":"650","endLine":547,"endColumn":93},{"ruleId":"677","severity":1,"message":"678","line":563,"column":84,"nodeType":"679","messageId":"650","endLine":563,"endColumn":86},{"ruleId":"677","severity":1,"message":"678","line":571,"column":84,"nodeType":"679","messageId":"650","endLine":571,"endColumn":86},{"ruleId":"677","severity":1,"message":"678","line":579,"column":84,"nodeType":"679","messageId":"650","endLine":579,"endColumn":86},{"ruleId":"677","severity":1,"message":"678","line":587,"column":84,"nodeType":"679","messageId":"650","endLine":587,"endColumn":86},{"ruleId":"677","severity":1,"message":"678","line":595,"column":84,"nodeType":"679","messageId":"650","endLine":595,"endColumn":86},{"ruleId":"677","severity":1,"message":"678","line":612,"column":88,"nodeType":"679","messageId":"650","endLine":612,"endColumn":90},{"ruleId":"677","severity":1,"message":"678","line":620,"column":88,"nodeType":"679","messageId":"650","endLine":620,"endColumn":90},{"ruleId":"677","severity":1,"message":"678","line":628,"column":88,"nodeType":"679","messageId":"650","endLine":628,"endColumn":90},{"ruleId":"677","severity":1,"message":"678","line":636,"column":88,"nodeType":"679","messageId":"650","endLine":636,"endColumn":90},{"ruleId":"677","severity":1,"message":"678","line":644,"column":88,"nodeType":"679","messageId":"650","endLine":644,"endColumn":90},{"ruleId":"677","severity":1,"message":"678","line":661,"column":90,"nodeType":"679","messageId":"650","endLine":661,"endColumn":92},{"ruleId":"677","severity":1,"message":"678","line":669,"column":90,"nodeType":"679","messageId":"650","endLine":669,"endColumn":92},{"ruleId":"677","severity":1,"message":"678","line":677,"column":90,"nodeType":"679","messageId":"650","endLine":677,"endColumn":92},{"ruleId":"677","severity":1,"message":"678","line":685,"column":90,"nodeType":"679","messageId":"650","endLine":685,"endColumn":92},{"ruleId":"677","severity":1,"message":"678","line":693,"column":90,"nodeType":"679","messageId":"650","endLine":693,"endColumn":92},{"ruleId":"727","severity":1,"message":"728","line":704,"column":33,"nodeType":"714","endLine":704,"endColumn":55},{"ruleId":"677","severity":1,"message":"678","line":717,"column":85,"nodeType":"679","messageId":"650","endLine":717,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":725,"column":85,"nodeType":"679","messageId":"650","endLine":725,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":733,"column":85,"nodeType":"679","messageId":"650","endLine":733,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":741,"column":85,"nodeType":"679","messageId":"650","endLine":741,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":749,"column":85,"nodeType":"679","messageId":"650","endLine":749,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":766,"column":83,"nodeType":"679","messageId":"650","endLine":766,"endColumn":85},{"ruleId":"677","severity":1,"message":"678","line":774,"column":83,"nodeType":"679","messageId":"650","endLine":774,"endColumn":85},{"ruleId":"677","severity":1,"message":"678","line":782,"column":83,"nodeType":"679","messageId":"650","endLine":782,"endColumn":85},{"ruleId":"677","severity":1,"message":"678","line":790,"column":83,"nodeType":"679","messageId":"650","endLine":790,"endColumn":85},{"ruleId":"677","severity":1,"message":"678","line":798,"column":83,"nodeType":"679","messageId":"650","endLine":798,"endColumn":85},{"ruleId":"677","severity":1,"message":"678","line":814,"column":81,"nodeType":"679","messageId":"650","endLine":814,"endColumn":83},{"ruleId":"677","severity":1,"message":"678","line":822,"column":81,"nodeType":"679","messageId":"650","endLine":822,"endColumn":83},{"ruleId":"677","severity":1,"message":"678","line":830,"column":81,"nodeType":"679","messageId":"650","endLine":830,"endColumn":83},{"ruleId":"677","severity":1,"message":"678","line":838,"column":81,"nodeType":"679","messageId":"650","endLine":838,"endColumn":83},{"ruleId":"677","severity":1,"message":"678","line":846,"column":81,"nodeType":"679","messageId":"650","endLine":846,"endColumn":83},{"ruleId":"677","severity":1,"message":"678","line":863,"column":80,"nodeType":"679","messageId":"650","endLine":863,"endColumn":82},{"ruleId":"677","severity":1,"message":"678","line":871,"column":80,"nodeType":"679","messageId":"650","endLine":871,"endColumn":82},{"ruleId":"677","severity":1,"message":"678","line":879,"column":80,"nodeType":"679","messageId":"650","endLine":879,"endColumn":82},{"ruleId":"677","severity":1,"message":"678","line":887,"column":80,"nodeType":"679","messageId":"650","endLine":887,"endColumn":82},{"ruleId":"677","severity":1,"message":"678","line":895,"column":80,"nodeType":"679","messageId":"650","endLine":895,"endColumn":82},{"ruleId":"677","severity":1,"message":"678","line":912,"column":85,"nodeType":"679","messageId":"650","endLine":912,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":920,"column":85,"nodeType":"679","messageId":"650","endLine":920,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":928,"column":85,"nodeType":"679","messageId":"650","endLine":928,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":936,"column":85,"nodeType":"679","messageId":"650","endLine":936,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":944,"column":85,"nodeType":"679","messageId":"650","endLine":944,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":952,"column":79,"nodeType":"679","messageId":"650","endLine":952,"endColumn":81},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"729"},{"ruleId":"652","severity":1,"message":"707","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":14},{"ruleId":"712","severity":1,"message":"713","line":27,"column":33,"nodeType":"714","endLine":27,"endColumn":112},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"730"},{"ruleId":"652","severity":1,"message":"731","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":20},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"732"},{"ruleId":"652","severity":1,"message":"733","line":2,"column":10,"nodeType":"645","messageId":"654","endLine":2,"endColumn":33},{"ruleId":"652","severity":1,"message":"734","line":2,"column":35,"nodeType":"645","messageId":"654","endLine":2,"endColumn":59},{"ruleId":"652","severity":1,"message":"707","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":14},{"ruleId":"652","severity":1,"message":"709","line":5,"column":8,"nodeType":"645","messageId":"654","endLine":5,"endColumn":13},{"ruleId":"652","severity":1,"message":"664","line":8,"column":10,"nodeType":"645","messageId":"654","endLine":8,"endColumn":24},{"ruleId":"652","severity":1,"message":"710","line":8,"column":26,"nodeType":"645","messageId":"654","endLine":8,"endColumn":31},{"ruleId":"652","severity":1,"message":"735","line":10,"column":10,"nodeType":"645","messageId":"654","endLine":10,"endColumn":24},{"ruleId":"652","severity":1,"message":"736","line":10,"column":26,"nodeType":"645","messageId":"654","endLine":10,"endColumn":41},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"737"},{"ruleId":"652","severity":1,"message":"707","line":3,"column":10,"nodeType":"645","messageId":"654","endLine":3,"endColumn":14},{"ruleId":"652","severity":1,"message":"709","line":4,"column":8,"nodeType":"645","messageId":"654","endLine":4,"endColumn":13},{"ruleId":"652","severity":1,"message":"664","line":6,"column":10,"nodeType":"645","messageId":"654","endLine":6,"endColumn":24},{"ruleId":"652","severity":1,"message":"710","line":6,"column":26,"nodeType":"645","messageId":"654","endLine":6,"endColumn":31},{"ruleId":"652","severity":1,"message":"735","line":8,"column":10,"nodeType":"645","messageId":"654","endLine":8,"endColumn":24},{"ruleId":"652","severity":1,"message":"736","line":8,"column":26,"nodeType":"645","messageId":"654","endLine":8,"endColumn":41},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"738"},{"ruleId":"652","severity":1,"message":"707","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":14},{"ruleId":"652","severity":1,"message":"709","line":5,"column":8,"nodeType":"645","messageId":"654","endLine":5,"endColumn":13},{"ruleId":"652","severity":1,"message":"664","line":9,"column":10,"nodeType":"645","messageId":"654","endLine":9,"endColumn":24},{"ruleId":"652","severity":1,"message":"735","line":11,"column":10,"nodeType":"645","messageId":"654","endLine":11,"endColumn":24},{"ruleId":"652","severity":1,"message":"736","line":11,"column":26,"nodeType":"645","messageId":"654","endLine":11,"endColumn":41},{"ruleId":"677","severity":1,"message":"678","line":72,"column":104,"nodeType":"679","messageId":"650","endLine":72,"endColumn":106},{"ruleId":"677","severity":1,"message":"678","line":84,"column":104,"nodeType":"679","messageId":"650","endLine":84,"endColumn":106},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"739"},{"ruleId":"652","severity":1,"message":"707","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":14},{"ruleId":"652","severity":1,"message":"718","line":73,"column":30,"nodeType":"645","messageId":"654","endLine":73,"endColumn":34},{"ruleId":"652","severity":1,"message":"719","line":73,"column":36,"nodeType":"645","messageId":"654","endLine":73,"endColumn":43},{"ruleId":"652","severity":1,"message":"718","line":86,"column":30,"nodeType":"645","messageId":"654","endLine":86,"endColumn":34},{"ruleId":"652","severity":1,"message":"719","line":86,"column":36,"nodeType":"645","messageId":"654","endLine":86,"endColumn":43},{"ruleId":"652","severity":1,"message":"718","line":99,"column":30,"nodeType":"645","messageId":"654","endLine":99,"endColumn":34},{"ruleId":"652","severity":1,"message":"719","line":99,"column":36,"nodeType":"645","messageId":"654","endLine":99,"endColumn":43},{"ruleId":"652","severity":1,"message":"740","line":124,"column":13,"nodeType":"645","messageId":"654","endLine":124,"endColumn":19},{"ruleId":"677","severity":1,"message":"678","line":147,"column":67,"nodeType":"679","messageId":"650","endLine":147,"endColumn":69},{"ruleId":"720","severity":1,"message":"721","line":147,"column":77,"nodeType":"722","endLine":147,"endColumn":87},{"ruleId":"677","severity":1,"message":"678","line":161,"column":78,"nodeType":"679","messageId":"650","endLine":161,"endColumn":80},{"ruleId":"720","severity":1,"message":"721","line":161,"column":85,"nodeType":"722","endLine":161,"endColumn":110},{"ruleId":"677","severity":1,"message":"678","line":174,"column":74,"nodeType":"679","messageId":"650","endLine":174,"endColumn":76},{"ruleId":"720","severity":1,"message":"721","line":174,"column":81,"nodeType":"722","endLine":174,"endColumn":101},{"ruleId":"677","severity":1,"message":"678","line":188,"column":78,"nodeType":"679","messageId":"650","endLine":188,"endColumn":80},{"ruleId":"720","severity":1,"message":"721","line":188,"column":85,"nodeType":"722","endLine":188,"endColumn":100},{"ruleId":"677","severity":1,"message":"678","line":233,"column":34,"nodeType":"679","messageId":"650","endLine":233,"endColumn":36},{"ruleId":"677","severity":1,"message":"678","line":238,"column":41,"nodeType":"679","messageId":"650","endLine":238,"endColumn":43},{"ruleId":"677","severity":1,"message":"678","line":243,"column":18,"nodeType":"679","messageId":"650","endLine":243,"endColumn":20},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"741"},{"ruleId":"652","severity":1,"message":"731","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":20},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"742"},{"ruleId":"652","severity":1,"message":"707","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":14},{"ruleId":"652","severity":1,"message":"709","line":5,"column":8,"nodeType":"645","messageId":"654","endLine":5,"endColumn":13},{"ruleId":"652","severity":1,"message":"743","line":6,"column":8,"nodeType":"645","messageId":"654","endLine":6,"endColumn":21},{"ruleId":"652","severity":1,"message":"664","line":8,"column":10,"nodeType":"645","messageId":"654","endLine":8,"endColumn":24},{"ruleId":"652","severity":1,"message":"735","line":10,"column":10,"nodeType":"645","messageId":"654","endLine":10,"endColumn":24},{"ruleId":"652","severity":1,"message":"736","line":10,"column":26,"nodeType":"645","messageId":"654","endLine":10,"endColumn":41},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"744"},{"ruleId":"652","severity":1,"message":"664","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":24},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"745"},{"ruleId":"652","severity":1,"message":"707","line":2,"column":10,"nodeType":"645","messageId":"654","endLine":2,"endColumn":14},{"ruleId":"652","severity":1,"message":"709","line":3,"column":8,"nodeType":"645","messageId":"654","endLine":3,"endColumn":13},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"746"},{"ruleId":"652","severity":1,"message":"664","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":24},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"747"},{"ruleId":"652","severity":1,"message":"707","line":3,"column":10,"nodeType":"645","messageId":"654","endLine":3,"endColumn":14},{"ruleId":"652","severity":1,"message":"709","line":4,"column":8,"nodeType":"645","messageId":"654","endLine":4,"endColumn":13},{"ruleId":"677","severity":1,"message":"678","line":51,"column":38,"nodeType":"679","messageId":"650","endLine":51,"endColumn":40},{"ruleId":"677","severity":1,"message":"678","line":52,"column":38,"nodeType":"679","messageId":"650","endLine":52,"endColumn":40},{"ruleId":"677","severity":1,"message":"678","line":53,"column":38,"nodeType":"679","messageId":"650","endLine":53,"endColumn":40},{"ruleId":"677","severity":1,"message":"678","line":54,"column":38,"nodeType":"679","messageId":"650","endLine":54,"endColumn":40},{"ruleId":"720","severity":1,"message":"721","line":66,"column":33,"nodeType":"722","endLine":66,"endColumn":43},{"ruleId":"720","severity":1,"message":"721","line":74,"column":33,"nodeType":"722","endLine":74,"endColumn":43},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"748"},{"ruleId":"652","severity":1,"message":"664","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":24},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"749"},{"ruleId":"652","severity":1,"message":"750","line":2,"column":50,"nodeType":"645","messageId":"654","endLine":2,"endColumn":76},{"ruleId":"652","severity":1,"message":"664","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":24},{"ruleId":"652","severity":1,"message":"707","line":6,"column":10,"nodeType":"645","messageId":"654","endLine":6,"endColumn":14},{"ruleId":"652","severity":1,"message":"724","line":9,"column":10,"nodeType":"645","messageId":"654","endLine":9,"endColumn":16},{"ruleId":"677","severity":1,"message":"678","line":106,"column":155,"nodeType":"679","messageId":"650","endLine":106,"endColumn":157},{"ruleId":"677","severity":1,"message":"678","line":181,"column":18,"nodeType":"679","messageId":"650","endLine":181,"endColumn":20},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"751"},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"752"},{"ruleId":"652","severity":1,"message":"709","line":3,"column":8,"nodeType":"645","messageId":"654","endLine":3,"endColumn":13},{"ruleId":"652","severity":1,"message":"664","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":24},{"ruleId":"652","severity":1,"message":"710","line":4,"column":26,"nodeType":"645","messageId":"654","endLine":4,"endColumn":31},{"ruleId":"652","severity":1,"message":"735","line":6,"column":10,"nodeType":"645","messageId":"654","endLine":6,"endColumn":24},{"ruleId":"652","severity":1,"message":"736","line":6,"column":26,"nodeType":"645","messageId":"654","endLine":6,"endColumn":41},{"ruleId":"652","severity":1,"message":"753","line":7,"column":8,"nodeType":"645","messageId":"654","endLine":7,"endColumn":18},{"ruleId":"652","severity":1,"message":"731","line":10,"column":10,"nodeType":"645","messageId":"654","endLine":10,"endColumn":20},{"ruleId":"677","severity":1,"message":"678","line":43,"column":38,"nodeType":"679","messageId":"650","endLine":43,"endColumn":40},{"ruleId":"677","severity":1,"message":"678","line":46,"column":53,"nodeType":"679","messageId":"650","endLine":46,"endColumn":55},{"ruleId":"677","severity":1,"message":"678","line":58,"column":71,"nodeType":"679","messageId":"650","endLine":58,"endColumn":73},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"754"},{"ruleId":"652","severity":1,"message":"709","line":3,"column":8,"nodeType":"645","messageId":"654","endLine":3,"endColumn":13},{"ruleId":"652","severity":1,"message":"664","line":4,"column":10,"nodeType":"645","messageId":"654","endLine":4,"endColumn":24},{"ruleId":"652","severity":1,"message":"710","line":4,"column":26,"nodeType":"645","messageId":"654","endLine":4,"endColumn":31},{"ruleId":"652","severity":1,"message":"735","line":6,"column":10,"nodeType":"645","messageId":"654","endLine":6,"endColumn":24},{"ruleId":"652","severity":1,"message":"736","line":6,"column":26,"nodeType":"645","messageId":"654","endLine":6,"endColumn":41},{"ruleId":"652","severity":1,"message":"753","line":7,"column":8,"nodeType":"645","messageId":"654","endLine":7,"endColumn":18},{"ruleId":"652","severity":1,"message":"731","line":10,"column":10,"nodeType":"645","messageId":"654","endLine":10,"endColumn":20},{"ruleId":"677","severity":1,"message":"678","line":41,"column":38,"nodeType":"679","messageId":"650","endLine":41,"endColumn":40},{"ruleId":"677","severity":1,"message":"678","line":54,"column":58,"nodeType":"679","messageId":"650","endLine":54,"endColumn":60},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"755"},{"ruleId":"652","severity":1,"message":"733","line":2,"column":10,"nodeType":"645","messageId":"654","endLine":2,"endColumn":33},{"ruleId":"652","severity":1,"message":"734","line":2,"column":35,"nodeType":"645","messageId":"654","endLine":2,"endColumn":59},{"ruleId":"652","severity":1,"message":"709","line":4,"column":8,"nodeType":"645","messageId":"654","endLine":4,"endColumn":13},{"ruleId":"652","severity":1,"message":"664","line":5,"column":10,"nodeType":"645","messageId":"654","endLine":5,"endColumn":24},{"ruleId":"652","severity":1,"message":"710","line":5,"column":26,"nodeType":"645","messageId":"654","endLine":5,"endColumn":31},{"ruleId":"652","severity":1,"message":"735","line":7,"column":10,"nodeType":"645","messageId":"654","endLine":7,"endColumn":24},{"ruleId":"652","severity":1,"message":"736","line":7,"column":26,"nodeType":"645","messageId":"654","endLine":7,"endColumn":41},{"ruleId":"652","severity":1,"message":"753","line":8,"column":8,"nodeType":"645","messageId":"654","endLine":8,"endColumn":18},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"756"},{"ruleId":"652","severity":1,"message":"733","line":2,"column":10,"nodeType":"645","messageId":"654","endLine":2,"endColumn":33},{"ruleId":"652","severity":1,"message":"734","line":2,"column":35,"nodeType":"645","messageId":"654","endLine":2,"endColumn":59},{"ruleId":"652","severity":1,"message":"709","line":4,"column":8,"nodeType":"645","messageId":"654","endLine":4,"endColumn":13},{"ruleId":"652","severity":1,"message":"664","line":5,"column":10,"nodeType":"645","messageId":"654","endLine":5,"endColumn":24},{"ruleId":"652","severity":1,"message":"710","line":5,"column":26,"nodeType":"645","messageId":"654","endLine":5,"endColumn":31},{"ruleId":"652","severity":1,"message":"735","line":7,"column":10,"nodeType":"645","messageId":"654","endLine":7,"endColumn":24},{"ruleId":"652","severity":1,"message":"736","line":7,"column":26,"nodeType":"645","messageId":"654","endLine":7,"endColumn":41},{"ruleId":"634","replacedBy":"757"},{"ruleId":"636","replacedBy":"758"},{"ruleId":"647","severity":1,"message":"648","line":1,"column":1,"nodeType":"649","messageId":"650","fix":"759"},{"ruleId":"652","severity":1,"message":"707","line":2,"column":10,"nodeType":"645","messageId":"654","endLine":2,"endColumn":14},{"ruleId":"652","severity":1,"message":"709","line":4,"column":8,"nodeType":"645","messageId":"654","endLine":4,"endColumn":13},{"ruleId":"652","severity":1,"message":"664","line":6,"column":10,"nodeType":"645","messageId":"654","endLine":6,"endColumn":24},{"ruleId":"677","severity":1,"message":"678","line":28,"column":40,"nodeType":"679","messageId":"650","endLine":28,"endColumn":42},{"ruleId":"677","severity":1,"message":"678","line":62,"column":71,"nodeType":"679","messageId":"650","endLine":62,"endColumn":73},{"ruleId":"677","severity":1,"message":"760","line":65,"column":88,"nodeType":"679","messageId":"650","endLine":65,"endColumn":90},{"ruleId":"720","severity":1,"message":"721","line":92,"column":9,"nodeType":"722","endLine":92,"endColumn":31},{"ruleId":"720","severity":1,"message":"721","line":93,"column":9,"nodeType":"722","endLine":93,"endColumn":31},{"ruleId":"720","severity":1,"message":"721","line":94,"column":9,"nodeType":"722","endLine":94,"endColumn":31},{"ruleId":"720","severity":1,"message":"721","line":95,"column":9,"nodeType":"722","endLine":95,"endColumn":31},"no-native-reassign",["761"],"no-negated-in-lhs",["762"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"763","text":"764"},"no-redeclare","'i' is already defined.","Identifier","redeclared","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"765","text":"764"},"no-unused-vars","'LOADED_ALL_AVAILABLE_DOCTORS_ERROR' is defined but never used.","unusedVar","'LOADED_ALL_AVAILABLE_APPOINTMENTS_ERROR' is defined but never used.","'addFeedback' is defined but never used.","'loadPublishedFeedback' is defined but never used.","no-dupe-keys","Duplicate key 'patientAppointments'.","ObjectExpression","'date' is already defined.","'appointmentDate' is already defined.",{"range":"766","text":"764"},"'ToastContainer' is defined but never used.",{"range":"767","text":"764"},{"range":"768","text":"764"},"'day' is already defined.","'month' is already defined.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["769","770"],["771","772"],"Unnecessary escape character: \\..",["773","774"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",{"range":"775","text":"764"},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'PublishButton' is defined but never used.",{"range":"776","text":"764"},"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",{"range":"777","text":"764"},{"range":"778","text":"764"},{"range":"779","text":"764"},{"range":"780","text":"764"},{"range":"781","text":"764"},{"range":"782","text":"764"},{"range":"783","text":"764"},{"range":"784","text":"764"},{"range":"785","text":"764"},{"range":"786","text":"764"},{"range":"787","text":"764"},{"range":"788","text":"764"},"'CreateForm' is defined but never used.","'NavbarBrand' is defined but never used.",{"range":"789","text":"764"},{"range":"790","text":"764"},"'wrap' is defined but never used.",{"range":"791","text":"764"},"'axios' is defined but never used.","'toast' is defined but never used.",{"range":"792","text":"764"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"range":"793","text":"764"},{"range":"794","text":"764"},{"range":"795","text":"764"},"'type' is assigned a value but never used.","'checked' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",{"range":"796","text":"764"},"'Button' is defined but never used.","'appointment' is assigned a value but never used.","'appointmentSurveyList' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",{"range":"797","text":"764"},{"range":"798","text":"764"},"'formatDate' is defined but never used.",{"range":"799","text":"764"},"'loadedAllPatientReports' is defined but never used.","'simpleSearchAppointments' is defined but never used.","'showErrorToast' is defined but never used.","'checkDateFormat' is defined but never used.",{"range":"800","text":"764"},{"range":"801","text":"764"},{"range":"802","text":"764"},"'doctor' is assigned a value but never used.",{"range":"803","text":"764"},{"range":"804","text":"764"},"'ReferralModal' is defined but never used.",{"range":"805","text":"764"},{"range":"806","text":"764"},{"range":"807","text":"764"},{"range":"808","text":"764"},{"range":"809","text":"764"},{"range":"810","text":"764"},"'createRecommendAppointment' is defined but never used.",{"range":"811","text":"764"},{"range":"812","text":"764"},"'DatePicker' is defined but never used.",{"range":"813","text":"764"},{"range":"814","text":"764"},{"range":"815","text":"764"},["761"],["762"],{"range":"816","text":"764"},"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",[0,13],"",[-1,0],[-1,0],[-1,0],[-1,0],{"messageId":"817","fix":"818","desc":"819"},{"messageId":"820","fix":"821","desc":"822"},{"messageId":"817","fix":"823","desc":"819"},{"messageId":"820","fix":"824","desc":"822"},{"messageId":"817","fix":"825","desc":"819"},{"messageId":"820","fix":"826","desc":"822"},[-1,0],[0,13],[0,13],[0,13],[0,13],[0,13],[0,13],[0,13],[0,13],[0,13],[0,13],[0,13],[0,13],[0,13],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],"removeEscape",{"range":"827","text":"764"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"828","text":"829"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"830","text":"764"},{"range":"831","text":"829"},{"range":"832","text":"764"},{"range":"833","text":"829"},[1321,1322],[1321,1321],"\\",[1331,1332],[1331,1331],[1572,1573],[1572,1572]]