// <auto-generated />
using MedicineInformationApi.DbContextModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicineInformationApi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MedicineInformationApi.Model.MedicineDescription", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("MedicineInformationId")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("MedicineInformationId")
                        .IsUnique();

                    b.ToTable("MedicineDescriptions");

                    b.HasData(
                        new
                        {
                            Name = "Paracetamol",
                            Description = "Paracetamol is a nonsteroidal anti-inflammatory drug (NSAID) used to treat mild-to-moderate pain, and helps to relieve symptoms of arthritis.",
                            MedicineInformationId = 1
                        },
                        new
                        {
                            Name = "Brufen",
                            Description = "Brufen is used to reduce fever and relieve mild to moderate pain.",
                            MedicineInformationId = 2
                        },
                        new
                        {
                            Name = "Defrinol",
                            Description = "Defrinol is used to treat certain types of bacterial infections.",
                            MedicineInformationId = 3
                        },
                        new
                        {
                            Name = "Pancef",
                            Description = "Pancef is indicated for: Headache, Colds & Influenza, Backache, Period Pain, Pain of Osteoarthritis, Muscle Pain, Toothache, Rheumatic Pain",
                            MedicineInformationId = 4
                        },
                        new
                        {
                            Name = "Analgin",
                            Description = "Analgin is indicated for: Headache, Colds & Influenza, Backache, Period Pain, Pain of Osteoarthritis, Muscle Pain, Toothache, Rheumatic Pain",
                            MedicineInformationId = 5
                        });
                });

            modelBuilder.Entity("MedicineInformationApi.Model.MedicineInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MedicineInformations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quantity = 150
                        },
                        new
                        {
                            Id = 2,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 3,
                            Quantity = 44
                        },
                        new
                        {
                            Id = 4,
                            Quantity = 33
                        },
                        new
                        {
                            Id = 5,
                            Quantity = 30
                        });
                });

            modelBuilder.Entity("MedicineInformationApi.Model.MedicineDescription", b =>
                {
                    b.HasOne("MedicineInformationApi.Model.MedicineInformation", null)
                        .WithOne("MedicineDescription")
                        .HasForeignKey("MedicineInformationApi.Model.MedicineDescription", "MedicineInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
